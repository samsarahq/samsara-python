# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata


class V1SafetyReportHarshEvent(UniversalBaseModel):
    """
    List of harsh events
    """

    harsh_event_type: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="harshEventType")] = (
        pydantic.Field(default=None)
    )
    """
    Sensor generated harsh event type.
    """

    timestamp_ms: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="timestampMs")] = (
        pydantic.Field(default=None)
    )
    """
    Timestamp that the harsh event occurred in Unix milliseconds since epoch
    """

    vehicle_id: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="vehicleId")] = pydantic.Field(
        default=None
    )
    """
    Vehicle associated with the harsh event
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
