# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .alert_object_asset_response_body import AlertObjectAssetResponseBody
from .continuous_reading_alert_threshold_response_body import ContinuousReadingAlertThresholdResponseBody
from .enum_reading_alert_threshold_response_body import EnumReadingAlertThresholdResponseBody


class ReadingTriggerDetailsResponseBody(UniversalBaseModel):
    """
    Details specific to Reading Triggers.
    """

    asset: typing.Optional[AlertObjectAssetResponseBody] = None
    continuous_threshold: typing_extensions.Annotated[
        typing.Optional[ContinuousReadingAlertThresholdResponseBody], FieldMetadata(alias="continuousThreshold")
    ] = None
    enum_threshold: typing_extensions.Annotated[
        typing.Optional[EnumReadingAlertThresholdResponseBody], FieldMetadata(alias="enumThreshold")
    ] = None
    id: str = pydantic.Field()
    """
    The ID of the reading.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
