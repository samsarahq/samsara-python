# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .action_params_object_response_body import ActionParamsObjectResponseBody


class ActionObjectResponseBody(UniversalBaseModel):
    """
    Action to take.
    """

    action_params: typing_extensions.Annotated[
        typing.Optional[ActionParamsObjectResponseBody], FieldMetadata(alias="actionParams")
    ] = None
    action_type_id: typing_extensions.Annotated[int, FieldMetadata(alias="actionTypeId")] = pydantic.Field()
    """
    The id of the of the action type. Reference the following list for the ids:
    The following action types are in Beta:
    Driver App Push = 5
    The following action types are Stable:
    Notification (Email, Text, Samsara Fleet Push) = 1
    Dashboard Notification = 3
    Webhook = 4
    Slack = 6
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
