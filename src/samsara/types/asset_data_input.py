# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .asset_data_input_last_point import AssetDataInputLastPoint


class AssetDataInput(UniversalBaseModel):
    data_group: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="dataGroup")] = pydantic.Field(
        default=None
    )
    """
    Name of the data group that the data input is associated with
    """

    id: typing.Optional[str] = pydantic.Field(default=None)
    """
    ID of the data input
    """

    last_point: typing_extensions.Annotated[
        typing.Optional[AssetDataInputLastPoint], FieldMetadata(alias="lastPoint")
    ] = None
    name: typing.Optional[str] = pydantic.Field(default=None)
    """
    Name of the data input
    """

    units: typing.Optional[str] = pydantic.Field(default=None)
    """
    Units of data for this data input
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
