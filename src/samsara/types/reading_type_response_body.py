# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .reading_type_response_body_data_type import ReadingTypeResponseBodyDataType
from .unit_response_body import UnitResponseBody


class ReadingTypeResponseBody(UniversalBaseModel):
    """
    Type information for the reading.
    """

    data_type: typing_extensions.Annotated[ReadingTypeResponseBodyDataType, FieldMetadata(alias="dataType")] = (
        pydantic.Field()
    )
    """
    The data type of the reading.  Valid values: `integer`, `float`, `string`
    """

    unit: typing.Optional[UnitResponseBody] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
