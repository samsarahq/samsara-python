# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata


class PostDriverTrailerAssignmentsResponseBodyResponseBody(UniversalBaseModel):
    """
    Response after successfully submitting a Driver Trailer Assignment
    """

    created_at_time: typing_extensions.Annotated[str, FieldMetadata(alias="createdAtTime")] = pydantic.Field()
    """
    Time when the driver trailer assignment was created, in RFC 3339 format
    """

    driver_id: typing_extensions.Annotated[str, FieldMetadata(alias="driverId")] = pydantic.Field()
    """
    Samsara ID for the driver that this assignment is for.
    """

    id: str = pydantic.Field()
    """
    Samsara ID for the assignment.
    """

    start_time: typing_extensions.Annotated[str, FieldMetadata(alias="startTime")] = pydantic.Field()
    """
    Time when the driver trailer assignment starts, in RFC 3339 format
    """

    trailer_id: typing_extensions.Annotated[str, FieldMetadata(alias="trailerId")] = pydantic.Field()
    """
    Samsara ID of the trailer
    """

    updated_at_time: typing_extensions.Annotated[str, FieldMetadata(alias="updatedAtTime")] = pydantic.Field()
    """
    Time when the driver trailer assignment was last updated, in RFC 3339 format
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
