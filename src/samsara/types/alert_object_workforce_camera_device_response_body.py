# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .alert_object_sites_response_body import AlertObjectSitesResponseBody
from .goa_tag_tiny_response_response_body import GoaTagTinyResponseResponseBody


class AlertObjectWorkforceCameraDeviceResponseBody(UniversalBaseModel):
    """
    A camera device associated with the alert
    """

    id: str = pydantic.Field()
    """
    The ID of the camera device associated with the alert
    """

    name: typing.Optional[str] = pydantic.Field(default=None)
    """
    The name of the camera device
    """

    sites: typing.Optional[typing.List[AlertObjectSitesResponseBody]] = pydantic.Field(default=None)
    """
    The list of sites associated with the camera device.
    """

    tags: typing.Optional[typing.List[GoaTagTinyResponseResponseBody]] = pydantic.Field(default=None)
    """
    The list of [tags](https://kb.samsara.com/hc/en-us/articles/360026674631-Using-Tags-and-Tag-Nesting) associated with the camera device.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
