# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .engine_immobilizer_relay_state_response_body import EngineImmobilizerRelayStateResponseBody


class EngineImmobilizerStateResponseBody(UniversalBaseModel):
    """
    An engine immobilizer state.
    """

    happened_at_time: typing_extensions.Annotated[str, FieldMetadata(alias="happenedAtTime")] = pydantic.Field()
    """
    A UTC time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).
    """

    is_connected_to_vehicle: typing_extensions.Annotated[bool, FieldMetadata(alias="isConnectedToVehicle")] = (
        pydantic.Field()
    )
    """
    Whether the engine immobilizer is connected the vehicle.
    """

    relay_states: typing_extensions.Annotated[
        typing.List[EngineImmobilizerRelayStateResponseBody], FieldMetadata(alias="relayStates")
    ] = pydantic.Field()
    """
    A list of states for each relay
    """

    vehicle_id: typing_extensions.Annotated[str, FieldMetadata(alias="vehicleId")] = pydantic.Field()
    """
    The ID of the vehicle that the engine immobilizer is connected to.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
