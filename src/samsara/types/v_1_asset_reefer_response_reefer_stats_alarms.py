# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata


class V1AssetReeferResponseReeferStatsAlarms(UniversalBaseModel):
    alarm_code: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="alarmCode")] = pydantic.Field(
        default=None
    )
    """
    ID of the alarm
    """

    description: typing.Optional[str] = pydantic.Field(default=None)
    """
    Description of the alarm
    """

    operator_action: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="operatorAction")] = (
        pydantic.Field(default=None)
    )
    """
    Recommended operator action
    """

    severity: typing.Optional[int] = pydantic.Field(default=None)
    """
    Severity of the alarm: 1: OK to run, 2: Check as specified, 3: Take immediate action
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
