# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata


class VehicleStatsTirePressures(UniversalBaseModel):
    """
    Tire pressure readings for each of four tires in kilopascals.
    """

    back_left_tire_pressure_k_pa: typing_extensions.Annotated[
        typing.Optional[int], FieldMetadata(alias="backLeftTirePressureKPa")
    ] = pydantic.Field(default=None)
    """
    The tire pressure of the rear left tire as seen when standing behind the vehicle in kilopascals.
    """

    back_right_tire_pressure_k_pa: typing_extensions.Annotated[
        typing.Optional[int], FieldMetadata(alias="backRightTirePressureKPa")
    ] = pydantic.Field(default=None)
    """
    The tire pressure of the rear right tire as seen when standing behind the vehicle in kilopascals.
    """

    front_left_tire_pressure_k_pa: typing_extensions.Annotated[
        typing.Optional[int], FieldMetadata(alias="frontLeftTirePressureKPa")
    ] = pydantic.Field(default=None)
    """
    The tire pressure of the front left tire as seen when standing behind the vehicle in kilopascals.
    """

    front_right_tire_pressure_k_pa: typing_extensions.Annotated[
        typing.Optional[int], FieldMetadata(alias="frontRightTirePressureKPa")
    ] = pydantic.Field(default=None)
    """
    The tire pressure of the front right tire as seen when standing behind the vehicle in kilopascals.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
