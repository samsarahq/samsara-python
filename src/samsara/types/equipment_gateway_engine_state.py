# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .equipment_gateway_engine_state_value import EquipmentGatewayEngineStateValue
from .equipment_time import EquipmentTime


class EquipmentGatewayEngineState(UniversalBaseModel):
    """
    Engine state reading from the aux/digio cable.
    """

    time: EquipmentTime
    value: EquipmentGatewayEngineStateValue = pydantic.Field()
    """
    An approximation of engine state based on readings the AG26 receives from the aux/digio cable. Valid values: `Off`, `On`.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
