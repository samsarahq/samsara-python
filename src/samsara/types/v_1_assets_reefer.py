# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .v_1_assets_reefer_reefer_stats import V1AssetsReeferReeferStats


class V1AssetsReefer(UniversalBaseModel):
    """
    Reefer-specific details
    """

    asset_type: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="assetType")] = pydantic.Field(
        default=None
    )
    """
    Asset type
    """

    id: typing.Optional[int] = pydantic.Field(default=None)
    """
    Asset ID
    """

    name: typing.Optional[str] = pydantic.Field(default=None)
    """
    Asset name
    """

    reefer_stats: typing_extensions.Annotated[
        typing.Optional[V1AssetsReeferReeferStats], FieldMetadata(alias="reeferStats")
    ] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
