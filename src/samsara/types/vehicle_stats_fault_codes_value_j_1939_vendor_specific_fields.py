# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata


class VehicleStatsFaultCodesValueJ1939VendorSpecificFields(UniversalBaseModel):
    """
    Vendor specific data for J1939 vehicles.
    """

    dtc_description: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="dtcDescription")] = (
        pydantic.Field(default=None)
    )
    """
    The DTC description, if available.
    """

    repair_instructions_url: typing_extensions.Annotated[
        typing.Optional[str], FieldMetadata(alias="repairInstructionsUrl")
    ] = pydantic.Field(default=None)
    """
    A link to vendor repair instructions, if available.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
