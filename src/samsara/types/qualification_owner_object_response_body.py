# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .qualification_owner_object_response_body_entity_type import QualificationOwnerObjectResponseBodyEntityType


class QualificationOwnerObjectResponseBody(UniversalBaseModel):
    """
    Owner of the qualification record.
    """

    entity_type: typing_extensions.Annotated[
        QualificationOwnerObjectResponseBodyEntityType, FieldMetadata(alias="entityType")
    ] = pydantic.Field()
    """
    Owner entity type  Valid values: `worker`, `asset`
    """

    external_ids: typing_extensions.Annotated[
        typing.Optional[typing.Dict[str, str]], FieldMetadata(alias="externalIds")
    ] = pydantic.Field(default=None)
    """
    A map of external ids
    """

    id: str = pydantic.Field()
    """
    ID of the owner (worker/asset)
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
