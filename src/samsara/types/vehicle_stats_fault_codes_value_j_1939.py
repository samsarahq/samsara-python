# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .vehicle_stats_fault_codes_value_j_1939_check_engine_lights import (
    VehicleStatsFaultCodesValueJ1939CheckEngineLights,
)
from .vehicle_stats_fault_codes_value_j_1939_diagnostic_trouble_codes import (
    VehicleStatsFaultCodesValueJ1939DiagnosticTroubleCodes,
)


class VehicleStatsFaultCodesValueJ1939(UniversalBaseModel):
    """
    Vehicle fault codes for J1939 vehicles.
    """

    check_engine_lights: typing_extensions.Annotated[
        typing.Optional[VehicleStatsFaultCodesValueJ1939CheckEngineLights], FieldMetadata(alias="checkEngineLights")
    ] = None
    diagnostic_trouble_codes: typing_extensions.Annotated[
        typing.Optional[typing.List[VehicleStatsFaultCodesValueJ1939DiagnosticTroubleCodes]],
        FieldMetadata(alias="diagnosticTroubleCodes"),
    ] = pydantic.Field(default=None)
    """
    Diagnostic trouble codes for J1939 vehicles.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
