# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata


class SingleApprovalRequirementsObjectResponseBody(UniversalBaseModel):
    """
    Single approval requirements object.
    """

    role_ids: typing_extensions.Annotated[typing.List[str], FieldMetadata(alias="roleIds")] = pydantic.Field()
    """
    List of role IDs representing which user roles can be approvers.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
