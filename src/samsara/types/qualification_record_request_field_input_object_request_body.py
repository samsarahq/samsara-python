# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .form_submission_request_check_boxes_value_object_request_body import (
    FormSubmissionRequestCheckBoxesValueObjectRequestBody,
)
from .form_submission_request_date_time_value_object_request_body import (
    FormSubmissionRequestDateTimeValueObjectRequestBody,
)
from .form_submission_request_media_value_object_request_body import FormSubmissionRequestMediaValueObjectRequestBody
from .form_submission_request_multiple_choice_value_object_request_body import (
    FormSubmissionRequestMultipleChoiceValueObjectRequestBody,
)
from .form_submission_request_number_value_object_request_body import FormSubmissionRequestNumberValueObjectRequestBody
from .form_submission_request_signature_value_object_request_body import (
    FormSubmissionRequestSignatureValueObjectRequestBody,
)
from .form_submission_request_table_value_object_request_body import FormSubmissionRequestTableValueObjectRequestBody
from .form_submission_request_text_value_object_request_body import FormSubmissionRequestTextValueObjectRequestBody
from .qualification_record_request_field_input_object_request_body_type import (
    QualificationRecordRequestFieldInputObjectRequestBodyType,
)


class QualificationRecordRequestFieldInputObjectRequestBody(UniversalBaseModel):
    """
    Qualification input field request body object.
    """

    check_boxes_value: typing_extensions.Annotated[
        typing.Optional[FormSubmissionRequestCheckBoxesValueObjectRequestBody], FieldMetadata(alias="checkBoxesValue")
    ] = None
    date_time_value: typing_extensions.Annotated[
        typing.Optional[FormSubmissionRequestDateTimeValueObjectRequestBody], FieldMetadata(alias="dateTimeValue")
    ] = None
    id: str = pydantic.Field()
    """
    ID of the qualification input field object.
    """

    media_value: typing_extensions.Annotated[
        typing.Optional[FormSubmissionRequestMediaValueObjectRequestBody], FieldMetadata(alias="mediaValue")
    ] = None
    multiple_choice_value: typing_extensions.Annotated[
        typing.Optional[FormSubmissionRequestMultipleChoiceValueObjectRequestBody],
        FieldMetadata(alias="multipleChoiceValue"),
    ] = None
    number_value: typing_extensions.Annotated[
        typing.Optional[FormSubmissionRequestNumberValueObjectRequestBody], FieldMetadata(alias="numberValue")
    ] = None
    signature_value: typing_extensions.Annotated[
        typing.Optional[FormSubmissionRequestSignatureValueObjectRequestBody], FieldMetadata(alias="signatureValue")
    ] = None
    table_value: typing_extensions.Annotated[
        typing.Optional[FormSubmissionRequestTableValueObjectRequestBody], FieldMetadata(alias="tableValue")
    ] = None
    text_value: typing_extensions.Annotated[
        typing.Optional[FormSubmissionRequestTextValueObjectRequestBody], FieldMetadata(alias="textValue")
    ] = None
    type: QualificationRecordRequestFieldInputObjectRequestBodyType = pydantic.Field()
    """
    Type of the qualification field.  Valid values: `number`, `text`, `multiple_choice`, `check_boxes`, `datetime`, `table`, `media`, `signature`
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
