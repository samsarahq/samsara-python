# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .vehicle_stats_fault_codes_value_obdii_monitor_status_catalyst import (
    VehicleStatsFaultCodesValueObdiiMonitorStatusCatalyst,
)
from .vehicle_stats_fault_codes_value_obdii_monitor_status_comprehensive import (
    VehicleStatsFaultCodesValueObdiiMonitorStatusComprehensive,
)
from .vehicle_stats_fault_codes_value_obdii_monitor_status_egr import VehicleStatsFaultCodesValueObdiiMonitorStatusEgr
from .vehicle_stats_fault_codes_value_obdii_monitor_status_evap_system import (
    VehicleStatsFaultCodesValueObdiiMonitorStatusEvapSystem,
)
from .vehicle_stats_fault_codes_value_obdii_monitor_status_fuel import VehicleStatsFaultCodesValueObdiiMonitorStatusFuel
from .vehicle_stats_fault_codes_value_obdii_monitor_status_heated_catalyst import (
    VehicleStatsFaultCodesValueObdiiMonitorStatusHeatedCatalyst,
)
from .vehicle_stats_fault_codes_value_obdii_monitor_status_heated_o_2_sensor import (
    VehicleStatsFaultCodesValueObdiiMonitorStatusHeatedO2Sensor,
)
from .vehicle_stats_fault_codes_value_obdii_monitor_status_iso_sae_reserved import (
    VehicleStatsFaultCodesValueObdiiMonitorStatusIsoSaeReserved,
)
from .vehicle_stats_fault_codes_value_obdii_monitor_status_misfire import (
    VehicleStatsFaultCodesValueObdiiMonitorStatusMisfire,
)
from .vehicle_stats_fault_codes_value_obdii_monitor_status_o_2_sensor import (
    VehicleStatsFaultCodesValueObdiiMonitorStatusO2Sensor,
)
from .vehicle_stats_fault_codes_value_obdii_monitor_status_secondary_air import (
    VehicleStatsFaultCodesValueObdiiMonitorStatusSecondaryAir,
)


class VehicleStatsFaultCodesValueObdiiMonitorStatus(UniversalBaseModel):
    """
    Readings from engine sensors
    """

    catalyst: typing.Optional[VehicleStatsFaultCodesValueObdiiMonitorStatusCatalyst] = pydantic.Field(default=None)
    """
    Enum of monitor status:
    -U: Unsupported
    -N: Not Complete
    -R: Complete
    """

    comprehensive: typing.Optional[VehicleStatsFaultCodesValueObdiiMonitorStatusComprehensive] = pydantic.Field(
        default=None
    )
    """
    Enum of monitor status:
    -U: Unsupported
    -N: Not Complete
    -R: Complete
    """

    egr: typing.Optional[VehicleStatsFaultCodesValueObdiiMonitorStatusEgr] = pydantic.Field(default=None)
    """
    Enum of monitor status:
    -U: Unsupported
    -N: Not Complete
    -R: Complete
    """

    evap_system: typing_extensions.Annotated[
        typing.Optional[VehicleStatsFaultCodesValueObdiiMonitorStatusEvapSystem], FieldMetadata(alias="evapSystem")
    ] = pydantic.Field(default=None)
    """
    Enum of monitor status:
    -U: Unsupported
    -N: Not Complete
    -R: Complete
    """

    fuel: typing.Optional[VehicleStatsFaultCodesValueObdiiMonitorStatusFuel] = pydantic.Field(default=None)
    """
    Enum of monitor status:
    -U: Unsupported
    -N: Not Complete
    -R: Complete
    """

    heated_catalyst: typing_extensions.Annotated[
        typing.Optional[VehicleStatsFaultCodesValueObdiiMonitorStatusHeatedCatalyst],
        FieldMetadata(alias="heatedCatalyst"),
    ] = pydantic.Field(default=None)
    """
    Enum of monitor status:
    -U: Unsupported
    -N: Not Complete
    -R: Complete
    """

    heated_o_2_sensor: typing_extensions.Annotated[
        typing.Optional[VehicleStatsFaultCodesValueObdiiMonitorStatusHeatedO2Sensor],
        FieldMetadata(alias="heatedO2Sensor"),
    ] = pydantic.Field(default=None)
    """
    Enum of monitor status:
    -U: Unsupported
    -N: Not Complete
    -R: Complete
    """

    iso_sae_reserved: typing_extensions.Annotated[
        typing.Optional[VehicleStatsFaultCodesValueObdiiMonitorStatusIsoSaeReserved],
        FieldMetadata(alias="isoSaeReserved"),
    ] = pydantic.Field(default=None)
    """
    Enum of monitor status:
    -U: Unsupported
    -N: Not Complete
    -R: Complete
    """

    misfire: typing.Optional[VehicleStatsFaultCodesValueObdiiMonitorStatusMisfire] = pydantic.Field(default=None)
    """
    Enum of monitor status:
    -U: Unsupported
    -N: Not Complete
    -R: Complete
    """

    not_ready_count: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="notReadyCount")] = (
        pydantic.Field(default=None)
    )
    """
    Count of the number of sensors reporting N: Not Complete
    """

    o_2_sensor: typing_extensions.Annotated[
        typing.Optional[VehicleStatsFaultCodesValueObdiiMonitorStatusO2Sensor], FieldMetadata(alias="o2Sensor")
    ] = pydantic.Field(default=None)
    """
    Enum of monitor status:
    -U: Unsupported
    -N: Not Complete
    -R: Complete
    """

    secondary_air: typing_extensions.Annotated[
        typing.Optional[VehicleStatsFaultCodesValueObdiiMonitorStatusSecondaryAir], FieldMetadata(alias="secondaryAir")
    ] = pydantic.Field(default=None)
    """
    Enum of monitor status:
    -U: Unsupported
    -N: Not Complete
    -R: Complete
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
