# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata


class V1HosAuthenticationLogsResponseAuthenticationLogs(UniversalBaseModel):
    action_type: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="actionType")] = pydantic.Field(
        default=None
    )
    """
    The log type - one of 'signin' or 'signout'
    """

    address: typing.Optional[str] = pydantic.Field(default=None)
    """
    DEPRECATED: THIS FIELD MAY NOT BE POPULATED
    """

    address_name: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="addressName")] = (
        pydantic.Field(default=None)
    )
    """
    DEPRECATED: THIS FIELD MAY NOT BE POPULATED
    """

    city: typing.Optional[str] = pydantic.Field(default=None)
    """
    DEPRECATED: THIS FIELD MAY NOT BE POPULATED
    """

    happened_at_ms: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="happenedAtMs")] = (
        pydantic.Field(default=None)
    )
    """
    The time at which the event was recorded in UNIX milliseconds.
    """

    state: typing.Optional[str] = pydantic.Field(default=None)
    """
    DEPRECATED: THIS FIELD MAY NOT BE POPULATED
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
