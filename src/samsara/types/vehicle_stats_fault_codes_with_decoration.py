# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .time import Time
from .vehicle_stats_decorations import VehicleStatsDecorations
from .vehicle_stats_fault_codes_can_bus_type import VehicleStatsFaultCodesCanBusType
from .vehicle_stats_fault_codes_j_1939 import VehicleStatsFaultCodesJ1939
from .vehicle_stats_fault_codes_obdii import VehicleStatsFaultCodesObdii
from .vehicle_stats_fault_codes_oem import VehicleStatsFaultCodesOem


class VehicleStatsFaultCodesWithDecoration(UniversalBaseModel):
    """
    Engine fault codes read from J1939, OBDII, and OEM vehicles.
    """

    can_bus_type: typing_extensions.Annotated[
        typing.Optional[VehicleStatsFaultCodesCanBusType], FieldMetadata(alias="canBusType")
    ] = None
    decorations: typing.Optional[VehicleStatsDecorations] = None
    j_1939: typing_extensions.Annotated[typing.Optional[VehicleStatsFaultCodesJ1939], FieldMetadata(alias="j1939")] = (
        None
    )
    obdii: typing.Optional[VehicleStatsFaultCodesObdii] = None
    oem: typing.Optional[VehicleStatsFaultCodesOem] = None
    time: Time

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
