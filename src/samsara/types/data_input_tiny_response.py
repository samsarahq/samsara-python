# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata


class DataInputTinyResponse(UniversalBaseModel):
    """
    A minified data input object
    """

    asset_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="assetId")] = pydantic.Field(
        default=None
    )
    """
    Unique identifier for the data input's asset.
    """

    data_group: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="dataGroup")] = pydantic.Field(
        default=None
    )
    """
    Data group for this data input.
    """

    id: typing.Optional[str] = pydantic.Field(default=None)
    """
    Unique identifier for the data input.
    """

    name: typing.Optional[str] = pydantic.Field(default=None)
    """
    Name of this data input.
    """

    units: typing.Optional[str] = pydantic.Field(default=None)
    """
    Units of data for this data input.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
