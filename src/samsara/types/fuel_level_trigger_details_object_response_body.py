# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata


class FuelLevelTriggerDetailsObjectResponseBody(UniversalBaseModel):
    """
    Details specific to Fuel Level Percentage
    """

    fuel_level_percent: typing_extensions.Annotated[int, FieldMetadata(alias="fuelLevelPercent")] = pydantic.Field()
    """
    The fuel level percentage threshold value.
    """

    min_duration_milliseconds: typing_extensions.Annotated[int, FieldMetadata(alias="minDurationMilliseconds")] = (
        pydantic.Field()
    )
    """
    The number of milliseconds the trigger needs to stay active before alerting.
    """

    operation: typing.Literal["LESS"] = pydantic.Field(default="LESS")
    """
    How to evaluate the threshold.  Valid values: `LESS`
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
