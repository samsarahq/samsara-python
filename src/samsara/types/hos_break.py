# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata


class HosBreak(UniversalBaseModel):
    """
    Remaining durations for the HOS rest break requirement.
    """

    time_until_break_duration_ms: typing_extensions.Annotated[
        typing.Optional[float], FieldMetadata(alias="timeUntilBreakDurationMs")
    ] = pydantic.Field(default=None)
    """
    Time until the driver has a required break in milliseconds.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
