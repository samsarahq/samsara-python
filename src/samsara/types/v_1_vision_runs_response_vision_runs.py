# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .v_1_vision_runs_response_report_metadata import V1VisionRunsResponseReportMetadata


class V1VisionRunsResponseVisionRuns(UniversalBaseModel):
    device_id: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="deviceId")] = None
    ended_at_ms: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="endedAtMs")] = None
    program_id: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="programId")] = None
    report_metadata: typing_extensions.Annotated[
        typing.Optional[V1VisionRunsResponseReportMetadata], FieldMetadata(alias="reportMetadata")
    ] = None
    started_at_ms: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="startedAtMs")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
