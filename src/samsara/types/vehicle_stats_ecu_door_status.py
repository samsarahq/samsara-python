# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .vehicle_stats_ecu_door_status_value import VehicleStatsEcuDoorStatusValue
from .vehicle_stats_time import VehicleStatsTime


class VehicleStatsEcuDoorStatus(UniversalBaseModel):
    """
    Door status as read from the vehicle (either from ECU or AUX as a fallback).
    """

    time: VehicleStatsTime
    value: VehicleStatsEcuDoorStatusValue = pydantic.Field()
    """
    Status of doors. Either `Closed`, `Open` or `Unknown`.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
