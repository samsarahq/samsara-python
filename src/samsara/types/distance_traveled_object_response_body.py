# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata


class DistanceTraveledObjectResponseBody(UniversalBaseModel):
    """
    The distance traveled information of the log.
    """

    drive_distance_meters: typing_extensions.Annotated[
        typing.Optional[int], FieldMetadata(alias="driveDistanceMeters")
    ] = pydantic.Field(default=None)
    """
    Distance driven in meters, rounded to two decimal places.
    """

    personal_conveyance_distance_meters: typing_extensions.Annotated[
        typing.Optional[int], FieldMetadata(alias="personalConveyanceDistanceMeters")
    ] = pydantic.Field(default=None)
    """
    Distance driven for personal conveyance, rounded to two decimal places.
    """

    yard_move_distance_meters: typing_extensions.Annotated[
        typing.Optional[int], FieldMetadata(alias="yardMoveDistanceMeters")
    ] = pydantic.Field(default=None)
    """
    Distance driven for yard moves, rounded to two decimal places.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
