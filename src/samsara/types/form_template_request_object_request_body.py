# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata


class FormTemplateRequestObjectRequestBody(UniversalBaseModel):
    """
    Form template request object.
    """

    id: str = pydantic.Field()
    """
    ID of the form template.
    """

    revision_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="revisionId")] = pydantic.Field(
        default=None
    )
    """
    ID of the form template revision. Defaults to the latest template revision if not provided
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
