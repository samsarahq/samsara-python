# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .sensor_response_body import SensorResponseBody
from .vehicle_sensor_configuration_area_response_body_position import VehicleSensorConfigurationAreaResponseBodyPosition


class VehicleSensorConfigurationAreaResponseBody(UniversalBaseModel):
    """
    A configured sensor area on the vehicle with its associated sensors
    """

    cargo_sensors: typing_extensions.Annotated[
        typing.Optional[typing.List[SensorResponseBody]], FieldMetadata(alias="cargoSensors")
    ] = None
    humidity_sensors: typing_extensions.Annotated[
        typing.Optional[typing.List[SensorResponseBody]], FieldMetadata(alias="humiditySensors")
    ] = None
    position: VehicleSensorConfigurationAreaResponseBodyPosition = pydantic.Field()
    """
    Position of the area on vehicle  Valid values: `back`, `front`, `middle`
    """

    temperature_sensors: typing_extensions.Annotated[
        typing.Optional[typing.List[SensorResponseBody]], FieldMetadata(alias="temperatureSensors")
    ] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
