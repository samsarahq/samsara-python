# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata


class TrailerStatReeferAlarmResponseBody(UniversalBaseModel):
    alarm_code: typing_extensions.Annotated[str, FieldMetadata(alias="alarmCode")] = pydantic.Field()
    """
    The ID of the alarm.
    """

    description: str = pydantic.Field()
    """
    The description of the alarm.
    """

    operator_action: typing_extensions.Annotated[str, FieldMetadata(alias="operatorAction")] = pydantic.Field()
    """
    The recommended operator action.
    """

    severity: int = pydantic.Field()
    """
    The severity of the alarm. `1`: Ok to run, `2`: Check as specified, `3`: Take immediate action.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
