# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata


class V1VisionStepResultsItemFindShapes(UniversalBaseModel):
    found_count: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="foundCount")] = None
    max_count: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="maxCount")] = None
    min_count: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="minCount")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
