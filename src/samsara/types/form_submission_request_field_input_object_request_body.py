# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .form_submission_request_asset_value_object_request_body import FormSubmissionRequestAssetValueObjectRequestBody
from .form_submission_request_check_boxes_value_object_request_body import (
    FormSubmissionRequestCheckBoxesValueObjectRequestBody,
)
from .form_submission_request_date_time_value_object_request_body import (
    FormSubmissionRequestDateTimeValueObjectRequestBody,
)
from .form_submission_request_field_input_object_request_body_type import (
    FormSubmissionRequestFieldInputObjectRequestBodyType,
)
from .form_submission_request_geofence_value_object_request_body import (
    FormSubmissionRequestGeofenceValueObjectRequestBody,
)
from .form_submission_request_multiple_choice_value_object_request_body import (
    FormSubmissionRequestMultipleChoiceValueObjectRequestBody,
)
from .form_submission_request_number_value_object_request_body import FormSubmissionRequestNumberValueObjectRequestBody
from .form_submission_request_person_value_object_request_body import FormSubmissionRequestPersonValueObjectRequestBody
from .form_submission_request_table_value_object_request_body import FormSubmissionRequestTableValueObjectRequestBody
from .form_submission_request_text_value_object_request_body import FormSubmissionRequestTextValueObjectRequestBody


class FormSubmissionRequestFieldInputObjectRequestBody(UniversalBaseModel):
    """
    Forms input field request body object.
    """

    asset_value: typing_extensions.Annotated[
        typing.Optional[FormSubmissionRequestAssetValueObjectRequestBody], FieldMetadata(alias="assetValue")
    ] = None
    check_boxes_value: typing_extensions.Annotated[
        typing.Optional[FormSubmissionRequestCheckBoxesValueObjectRequestBody], FieldMetadata(alias="checkBoxesValue")
    ] = None
    date_time_value: typing_extensions.Annotated[
        typing.Optional[FormSubmissionRequestDateTimeValueObjectRequestBody], FieldMetadata(alias="dateTimeValue")
    ] = None
    geofence_value: typing_extensions.Annotated[
        typing.Optional[FormSubmissionRequestGeofenceValueObjectRequestBody], FieldMetadata(alias="geofenceValue")
    ] = None
    id: str = pydantic.Field()
    """
    ID of the forms input field object.
    """

    multiple_choice_value: typing_extensions.Annotated[
        typing.Optional[FormSubmissionRequestMultipleChoiceValueObjectRequestBody],
        FieldMetadata(alias="multipleChoiceValue"),
    ] = None
    number_value: typing_extensions.Annotated[
        typing.Optional[FormSubmissionRequestNumberValueObjectRequestBody], FieldMetadata(alias="numberValue")
    ] = None
    person_value: typing_extensions.Annotated[
        typing.Optional[FormSubmissionRequestPersonValueObjectRequestBody], FieldMetadata(alias="personValue")
    ] = None
    table_value: typing_extensions.Annotated[
        typing.Optional[FormSubmissionRequestTableValueObjectRequestBody], FieldMetadata(alias="tableValue")
    ] = None
    text_value: typing_extensions.Annotated[
        typing.Optional[FormSubmissionRequestTextValueObjectRequestBody], FieldMetadata(alias="textValue")
    ] = None
    type: FormSubmissionRequestFieldInputObjectRequestBodyType = pydantic.Field()
    """
    Type of the field.  Valid values: `number`, `text`, `multiple_choice`, `check_boxes`, `datetime`, `asset`, `person`, `table`, `geofence`
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
