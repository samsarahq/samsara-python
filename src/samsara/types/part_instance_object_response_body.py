# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata


class PartInstanceObjectResponseBody(UniversalBaseModel):
    """
    Work Order Part Instance object.
    """

    cost_cents_override: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="costCentsOverride")] = (
        pydantic.Field(default=None)
    )
    """
    The cost of one unit of the part in cents. If not provided, the part defined cost will be used.
    """

    id: str = pydantic.Field()
    """
    ID of the part instance.
    """

    part_id: typing_extensions.Annotated[str, FieldMetadata(alias="partId")] = pydantic.Field()
    """
    ID of the part definition.
    """

    quantity: float = pydantic.Field()
    """
    The quantity of the part in the parts pre defined unit of measure.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
