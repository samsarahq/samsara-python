# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .work_order_money_object_response_body import WorkOrderMoneyObjectResponseBody


class WorkOrderTaxObjectResponseBody(UniversalBaseModel):
    """
    How much tax is applied to a work order. Either money or basisPoints are specified.
    """

    basis_points: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="basisPoints")] = (
        pydantic.Field(default=None)
    )
    """
    The tax in basis points. 100 basis points = 1%.
    """

    money: typing.Optional[WorkOrderMoneyObjectResponseBody] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
