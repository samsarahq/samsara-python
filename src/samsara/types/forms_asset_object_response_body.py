# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata
from .forms_asset_object_response_body_entry_type import FormsAssetObjectResponseBodyEntryType


class FormsAssetObjectResponseBody(UniversalBaseModel):
    """
    Tracked or untracked (i.e. manually entered) asset object.
    """

    entry_type: typing_extensions.Annotated[FormsAssetObjectResponseBodyEntryType, FieldMetadata(alias="entryType")] = (
        pydantic.Field()
    )
    """
    The type of entry for the asset.  Valid values: `tracked`, `untracked`
    """

    external_ids: typing_extensions.Annotated[
        typing.Optional[typing.Dict[str, str]], FieldMetadata(alias="externalIds")
    ] = pydantic.Field(default=None)
    """
    A map of external ids
    """

    id: typing.Optional[str] = pydantic.Field(default=None)
    """
    ID of a tracked asset. Included if 'entryType' is `tracked`.
    """

    name: typing.Optional[str] = pydantic.Field(default=None)
    """
    Name of an untracked (i.e. manually entered) asset.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
