# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata


class HubLocationServiceWindowInputRequestBody(UniversalBaseModel):
    """
    Service window
    """

    days_of_week: typing_extensions.Annotated[typing.List[str], FieldMetadata(alias="daysOfWeek")] = pydantic.Field()
    """
    Days of the week when the service window applies
    """

    end_time: typing_extensions.Annotated[str, FieldMetadata(alias="endTime")] = pydantic.Field()
    """
    End time of the service window, in HH:MM:SS format
    """

    start_time: typing_extensions.Annotated[str, FieldMetadata(alias="startTime")] = pydantic.Field()
    """
    Start time of the service window, in HH:MM:SS format
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
