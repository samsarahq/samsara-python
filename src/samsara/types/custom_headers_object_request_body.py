# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class CustomHeadersObjectRequestBody(UniversalBaseModel):
    """
    This is the object that stores the key and the value of the custom headers.
    """

    key: str = pydantic.Field()
    """
    The alphanumeric key of the custom header.
    """

    value: str = pydantic.Field()
    """
    The value of the custom header. The default maximum length of the value is 100 characters.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
