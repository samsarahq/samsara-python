# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata


class SettingsComplianceResponseObjectResponseBody(UniversalBaseModel):
    """
    Information set here will be displayed in roadside inspections and in the transferred US DOT datafile.
    """

    allow_unregulated_vehicles_enabled: typing_extensions.Annotated[
        typing.Optional[bool], FieldMetadata(alias="allowUnregulatedVehiclesEnabled")
    ] = pydantic.Field(default=None)
    """
    [deprecated] Allow Unregulated Vehicles. This setting is deprecated as all organizations can now mark vehicles as unregulated.
    """

    canada_hos_enabled: typing_extensions.Annotated[typing.Optional[bool], FieldMetadata(alias="canadaHosEnabled")] = (
        pydantic.Field(default=None)
    )
    """
    Enable Canada HOS
    """

    carrier_name: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="carrierName")] = (
        pydantic.Field(default=None)
    )
    """
    Carrier name of the organization
    """

    dot_number: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="dotNumber")] = pydantic.Field(
        default=None
    )
    """
    DOT Number
    """

    driver_auto_duty_enabled: typing_extensions.Annotated[
        typing.Optional[bool], FieldMetadata(alias="driverAutoDutyEnabled")
    ] = pydantic.Field(default=None)
    """
    Enable Driver Auto-Duty
    """

    edit_certified_logs_enabled: typing_extensions.Annotated[
        typing.Optional[bool], FieldMetadata(alias="editCertifiedLogsEnabled")
    ] = pydantic.Field(default=None)
    """
    Drivers Can Edit Certified Log
    """

    force_manual_location_for_duty_status_changes_enabled: typing_extensions.Annotated[
        typing.Optional[bool], FieldMetadata(alias="forceManualLocationForDutyStatusChangesEnabled")
    ] = pydantic.Field(default=None)
    """
    Force Manual Location For Duty Status Changes
    """

    force_review_unassigned_hos_enabled: typing_extensions.Annotated[
        typing.Optional[bool], FieldMetadata(alias="forceReviewUnassignedHosEnabled")
    ] = pydantic.Field(default=None)
    """
    Force Review of Unassigned HOS
    """

    main_office_formatted_address: typing_extensions.Annotated[
        typing.Optional[str], FieldMetadata(alias="mainOfficeFormattedAddress")
    ] = pydantic.Field(default=None)
    """
    Office Address
    """

    persistent_duty_status_enabled: typing_extensions.Annotated[
        typing.Optional[bool], FieldMetadata(alias="persistentDutyStatusEnabled")
    ] = pydantic.Field(default=None)
    """
    Persistent Duty Status
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
