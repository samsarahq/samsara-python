# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata


class IftaDetailJobArgsResponseBody(UniversalBaseModel):
    """
    The arguments used to create this job.
    """

    end_hour: typing_extensions.Annotated[str, FieldMetadata(alias="endHour")] = pydantic.Field()
    """
    The `endHour` used to create this job.
    """

    start_hour: typing_extensions.Annotated[str, FieldMetadata(alias="startHour")] = pydantic.Field()
    """
    The `startHour` used to create this job.
    """

    vehicle_ids: typing_extensions.Annotated[typing.List[int], FieldMetadata(alias="vehicleIds")] = pydantic.Field()
    """
    The vehicleIds used to create this job. Determined by the filter list of `vehicleIds`, `vehicleTagIds`, and `vehicleParentTagIds` parameters (if provided).
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
