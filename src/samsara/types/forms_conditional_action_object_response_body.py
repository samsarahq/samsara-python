# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .forms_action_object_response_body import FormsActionObjectResponseBody
from .forms_condition_object_response_body import FormsConditionObjectResponseBody


class FormsConditionalActionObjectResponseBody(UniversalBaseModel):
    """
    Conditional action object.
    """

    actions: typing.List[FormsActionObjectResponseBody] = pydantic.Field()
    """
    List of actions to take if the condition is met.
    """

    condition: FormsConditionObjectResponseBody

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
