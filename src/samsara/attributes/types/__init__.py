# This file was auto-generated by Fern from our API Definition.

# isort: skip_file

import typing
from importlib import import_module

if typing.TYPE_CHECKING:
    from .create_attribute_request_attribute_type import CreateAttributeRequestAttributeType
    from .create_attribute_request_entity_type import CreateAttributeRequestEntityType
    from .create_attribute_request_unit import CreateAttributeRequestUnit
    from .delete_attribute_request_entity_type import DeleteAttributeRequestEntityType
    from .get_attribute_request_entity_type import GetAttributeRequestEntityType
    from .get_attributes_by_entity_type_request_entity_type import GetAttributesByEntityTypeRequestEntityType
    from .update_attribute_request_attribute_type import UpdateAttributeRequestAttributeType
    from .update_attribute_request_entity_type import UpdateAttributeRequestEntityType
_dynamic_imports: typing.Dict[str, str] = {
    "CreateAttributeRequestAttributeType": ".create_attribute_request_attribute_type",
    "CreateAttributeRequestEntityType": ".create_attribute_request_entity_type",
    "CreateAttributeRequestUnit": ".create_attribute_request_unit",
    "DeleteAttributeRequestEntityType": ".delete_attribute_request_entity_type",
    "GetAttributeRequestEntityType": ".get_attribute_request_entity_type",
    "GetAttributesByEntityTypeRequestEntityType": ".get_attributes_by_entity_type_request_entity_type",
    "UpdateAttributeRequestAttributeType": ".update_attribute_request_attribute_type",
    "UpdateAttributeRequestEntityType": ".update_attribute_request_entity_type",
}


def __getattr__(attr_name: str) -> typing.Any:
    module_name = _dynamic_imports.get(attr_name)
    if module_name is None:
        raise AttributeError(f"No {attr_name} found in _dynamic_imports for module name -> {__name__}")
    try:
        module = import_module(module_name, __package__)
        if module_name == f".{attr_name}":
            return module
        else:
            return getattr(module, attr_name)
    except ImportError as e:
        raise ImportError(f"Failed to import {attr_name} from {module_name}: {e}") from e
    except AttributeError as e:
        raise AttributeError(f"Failed to get {attr_name} from {module_name}: {e}") from e


def __dir__():
    lazy_attrs = list(_dynamic_imports.keys())
    return sorted(lazy_attrs)


__all__ = [
    "CreateAttributeRequestAttributeType",
    "CreateAttributeRequestEntityType",
    "CreateAttributeRequestUnit",
    "DeleteAttributeRequestEntityType",
    "GetAttributeRequestEntityType",
    "GetAttributesByEntityTypeRequestEntityType",
    "UpdateAttributeRequestAttributeType",
    "UpdateAttributeRequestEntityType",
]
