# This file was auto-generated by Fern from our API Definition.

# isort: skip_file

import typing
from importlib import import_module

if typing.TYPE_CHECKING:
    from .stream_work_orders_request_work_order_statuses_item import StreamWorkOrdersRequestWorkOrderStatusesItem
    from .work_orders_patch_work_orders_request_body_category import WorkOrdersPatchWorkOrdersRequestBodyCategory
    from .work_orders_patch_work_orders_request_body_priority import WorkOrdersPatchWorkOrdersRequestBodyPriority
    from .work_orders_patch_work_orders_request_body_status import WorkOrdersPatchWorkOrdersRequestBodyStatus
    from .work_orders_post_work_orders_request_body_category import WorkOrdersPostWorkOrdersRequestBodyCategory
    from .work_orders_post_work_orders_request_body_priority import WorkOrdersPostWorkOrdersRequestBodyPriority
_dynamic_imports: typing.Dict[str, str] = {
    "StreamWorkOrdersRequestWorkOrderStatusesItem": ".stream_work_orders_request_work_order_statuses_item",
    "WorkOrdersPatchWorkOrdersRequestBodyCategory": ".work_orders_patch_work_orders_request_body_category",
    "WorkOrdersPatchWorkOrdersRequestBodyPriority": ".work_orders_patch_work_orders_request_body_priority",
    "WorkOrdersPatchWorkOrdersRequestBodyStatus": ".work_orders_patch_work_orders_request_body_status",
    "WorkOrdersPostWorkOrdersRequestBodyCategory": ".work_orders_post_work_orders_request_body_category",
    "WorkOrdersPostWorkOrdersRequestBodyPriority": ".work_orders_post_work_orders_request_body_priority",
}


def __getattr__(attr_name: str) -> typing.Any:
    module_name = _dynamic_imports.get(attr_name)
    if module_name is None:
        raise AttributeError(f"No {attr_name} found in _dynamic_imports for module name -> {__name__}")
    try:
        module = import_module(module_name, __package__)
        if module_name == f".{attr_name}":
            return module
        else:
            return getattr(module, attr_name)
    except ImportError as e:
        raise ImportError(f"Failed to import {attr_name} from {module_name}: {e}") from e
    except AttributeError as e:
        raise AttributeError(f"Failed to get {attr_name} from {module_name}: {e}") from e


def __dir__():
    lazy_attrs = list(_dynamic_imports.keys())
    return sorted(lazy_attrs)


__all__ = [
    "StreamWorkOrdersRequestWorkOrderStatusesItem",
    "WorkOrdersPatchWorkOrdersRequestBodyCategory",
    "WorkOrdersPatchWorkOrdersRequestBodyPriority",
    "WorkOrdersPatchWorkOrdersRequestBodyStatus",
    "WorkOrdersPostWorkOrdersRequestBodyCategory",
    "WorkOrdersPostWorkOrdersRequestBodyPriority",
]
