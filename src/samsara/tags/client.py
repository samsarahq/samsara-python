# This file was auto-generated by Fern from our API Definition.

import typing

from ..core.client_wrapper import AsyncClientWrapper, SyncClientWrapper
from ..core.pagination import AsyncPager, SyncPager
from ..core.request_options import RequestOptions
from ..types.tag import Tag
from ..types.tag_response import TagResponse
from ..types.tagged_object_id import TaggedObjectId
from .raw_client import AsyncRawTagsClient, RawTagsClient

# this is used as the default value for optional parameters
OMIT = typing.cast(typing.Any, ...)


class TagsClient:
    def __init__(self, *, client_wrapper: SyncClientWrapper):
        self._raw_client = RawTagsClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> RawTagsClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        RawTagsClient
        """
        return self._raw_client

    def list(
        self,
        *,
        limit: typing.Optional[int] = None,
        after: typing.Optional[str] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> SyncPager[Tag]:
        """
        Return all of the tags for an organization.

         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        To use this endpoint, select **Read Tags** under the Setup & Administration category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>

        Parameters
        ----------
        limit : typing.Optional[int]
            The limit for how many objects will be in the response. Default and max for this value is 512 objects.

        after : typing.Optional[str]
            If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        SyncPager[Tag]
            List of tags.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        response = client.tags.list()
        for item in response:
            yield item
        # alternatively, you can paginate page-by-page
        for page in response.iter_pages():
            yield page
        """
        return self._raw_client.list(limit=limit, after=after, request_options=request_options)

    def create(
        self,
        *,
        name: str,
        addresses: typing.Optional[typing.Sequence[TaggedObjectId]] = OMIT,
        assets: typing.Optional[typing.Sequence[TaggedObjectId]] = OMIT,
        drivers: typing.Optional[typing.Sequence[TaggedObjectId]] = OMIT,
        external_ids: typing.Optional[typing.Dict[str, str]] = OMIT,
        machines: typing.Optional[typing.Sequence[TaggedObjectId]] = OMIT,
        parent_tag_id: typing.Optional[str] = OMIT,
        sensors: typing.Optional[typing.Sequence[TaggedObjectId]] = OMIT,
        vehicles: typing.Optional[typing.Sequence[TaggedObjectId]] = OMIT,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> TagResponse:
        """
        Create a new tag for the organization. This may include up to 20,000 tagged entities.

         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        To use this endpoint, select **Write Tags** under the Setup & Administration category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>

        Parameters
        ----------
        name : str
            Name of this tag.

        addresses : typing.Optional[typing.Sequence[TaggedObjectId]]
            The addresses that belong to this tag.

        assets : typing.Optional[typing.Sequence[TaggedObjectId]]
            The trailers, unpowered, and powered assets that belong to this tag.

        drivers : typing.Optional[typing.Sequence[TaggedObjectId]]
            The drivers that belong to this tag.

        external_ids : typing.Optional[typing.Dict[str, str]]
            The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object.

        machines : typing.Optional[typing.Sequence[TaggedObjectId]]
            The machines that belong to this tag.

        parent_tag_id : typing.Optional[str]
            If this tag is part a hierarchical tag tree, this is the ID of the parent tag, otherwise this will be omitted.

        sensors : typing.Optional[typing.Sequence[TaggedObjectId]]
            The sensors that belong to this tag.

        vehicles : typing.Optional[typing.Sequence[TaggedObjectId]]
            The vehicles that belong to this tag.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        TagResponse
            Newly created tag object, including the new tag ID.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.tags.create(
            name="California",
        )
        """
        _response = self._raw_client.create(
            name=name,
            addresses=addresses,
            assets=assets,
            drivers=drivers,
            external_ids=external_ids,
            machines=machines,
            parent_tag_id=parent_tag_id,
            sensors=sensors,
            vehicles=vehicles,
            request_options=request_options,
        )
        return _response.data

    def get(self, id: str, *, request_options: typing.Optional[RequestOptions] = None) -> TagResponse:
        """
        Fetch a tag by id.

         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        To use this endpoint, select **Read Tags** under the Setup & Administration category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>

        Parameters
        ----------
        id : str
            ID of the Tag. This can either be the Samsara-provided ID or an external ID. External IDs are customer-specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `crmId:abc123`. Automatically populated external IDs are prefixed with `samsara.`. For example, `samsara.name:ELD-exempt`.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        TagResponse
            The tag corresponding to request id.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.tags.get(
            id="id",
        )
        """
        _response = self._raw_client.get(id, request_options=request_options)
        return _response.data

    def replace(
        self,
        id: str,
        *,
        addresses: typing.Optional[typing.Sequence[TaggedObjectId]] = OMIT,
        assets: typing.Optional[typing.Sequence[TaggedObjectId]] = OMIT,
        drivers: typing.Optional[typing.Sequence[TaggedObjectId]] = OMIT,
        machines: typing.Optional[typing.Sequence[TaggedObjectId]] = OMIT,
        name: typing.Optional[str] = OMIT,
        parent_tag_id: typing.Optional[str] = OMIT,
        sensors: typing.Optional[typing.Sequence[TaggedObjectId]] = OMIT,
        vehicles: typing.Optional[typing.Sequence[TaggedObjectId]] = OMIT,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> TagResponse:
        """
        Update a tag with a new name and new members. This API call would replace all old members of a tag with new members specified in the request body.

         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        To use this endpoint, select **Write Tags** under the Setup & Administration category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>

        Parameters
        ----------
        id : str
            ID of the Tag. This can either be the Samsara-provided ID or an external ID. External IDs are customer-specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `crmId:abc123`. Automatically populated external IDs are prefixed with `samsara.`. For example, `samsara.name:ELD-exempt`.

        addresses : typing.Optional[typing.Sequence[TaggedObjectId]]
            The addresses that belong to this tag.

        assets : typing.Optional[typing.Sequence[TaggedObjectId]]
            The trailers, unpowered, and powered assets that belong to this tag.

        drivers : typing.Optional[typing.Sequence[TaggedObjectId]]
            The drivers that belong to this tag.

        machines : typing.Optional[typing.Sequence[TaggedObjectId]]
            The machines that belong to this tag.

        name : typing.Optional[str]
            Name of this tag.

        parent_tag_id : typing.Optional[str]
            If this tag is part a hierarchical tag tree, this is the ID of the parent tag, otherwise this will be omitted.

        sensors : typing.Optional[typing.Sequence[TaggedObjectId]]
            The sensors that belong to this tag.

        vehicles : typing.Optional[typing.Sequence[TaggedObjectId]]
            The vehicles that belong to this tag.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        TagResponse
            The updated tag data.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.tags.replace(
            id="id",
        )
        """
        _response = self._raw_client.replace(
            id,
            addresses=addresses,
            assets=assets,
            drivers=drivers,
            machines=machines,
            name=name,
            parent_tag_id=parent_tag_id,
            sensors=sensors,
            vehicles=vehicles,
            request_options=request_options,
        )
        return _response.data

    def delete(
        self, id: str, *, request_options: typing.Optional[RequestOptions] = None
    ) -> typing.Optional[typing.Any]:
        """
        Permanently deletes a tag.

         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        To use this endpoint, select **Write Tags** under the Setup & Administration category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>

        Parameters
        ----------
        id : str
            ID of the Tag. This can either be the Samsara-provided ID or an external ID. External IDs are customer-specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `crmId:abc123`. Automatically populated external IDs are prefixed with `samsara.`. For example, `samsara.name:ELD-exempt`.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        typing.Optional[typing.Any]
            A successful DELETE response is a 204 with no content.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.tags.delete(
            id="id",
        )
        """
        _response = self._raw_client.delete(id, request_options=request_options)
        return _response.data

    def patch(
        self,
        id: str,
        *,
        addresses: typing.Optional[typing.Sequence[TaggedObjectId]] = OMIT,
        assets: typing.Optional[typing.Sequence[TaggedObjectId]] = OMIT,
        drivers: typing.Optional[typing.Sequence[TaggedObjectId]] = OMIT,
        external_ids: typing.Optional[typing.Dict[str, str]] = OMIT,
        machines: typing.Optional[typing.Sequence[TaggedObjectId]] = OMIT,
        name: typing.Optional[str] = OMIT,
        parent_tag_id: typing.Optional[str] = OMIT,
        sensors: typing.Optional[typing.Sequence[TaggedObjectId]] = OMIT,
        vehicles: typing.Optional[typing.Sequence[TaggedObjectId]] = OMIT,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> TagResponse:
        """
        Update an existing tag. **Note** this implementation of patch uses [the JSON merge patch](https://tools.ietf.org/html/rfc7396) proposed standard.

         This means that any fields included in the patch request will _overwrite_ fields which exist on the target resource.

         For arrays, this means any array included in the request will _replace_ the array that exists at the specified path, it will not _add_ to the existing array.

         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        To use this endpoint, select **Write Tags** under the Setup & Administration category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>

        Parameters
        ----------
        id : str
            ID of the Tag. This can either be the Samsara-provided ID or an external ID. External IDs are customer-specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `crmId:abc123`. Automatically populated external IDs are prefixed with `samsara.`. For example, `samsara.name:ELD-exempt`.

        addresses : typing.Optional[typing.Sequence[TaggedObjectId]]
            The addresses that belong to this tag.

        assets : typing.Optional[typing.Sequence[TaggedObjectId]]
            The trailers, unpowered, and powered assets that belong to this tag.

        drivers : typing.Optional[typing.Sequence[TaggedObjectId]]
            The drivers that belong to this tag.

        external_ids : typing.Optional[typing.Dict[str, str]]
            The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object.

        machines : typing.Optional[typing.Sequence[TaggedObjectId]]
            The machines that belong to this tag.

        name : typing.Optional[str]
            Name of this tag.

        parent_tag_id : typing.Optional[str]
            If this tag is part a hierarchical tag tree, this is the ID of the parent tag, otherwise this will be omitted.

        sensors : typing.Optional[typing.Sequence[TaggedObjectId]]
            The sensors that belong to this tag.

        vehicles : typing.Optional[typing.Sequence[TaggedObjectId]]
            The vehicles that belong to this tag.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        TagResponse
            Returns updated tag object.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.tags.patch(
            id="id",
        )
        """
        _response = self._raw_client.patch(
            id,
            addresses=addresses,
            assets=assets,
            drivers=drivers,
            external_ids=external_ids,
            machines=machines,
            name=name,
            parent_tag_id=parent_tag_id,
            sensors=sensors,
            vehicles=vehicles,
            request_options=request_options,
        )
        return _response.data


class AsyncTagsClient:
    def __init__(self, *, client_wrapper: AsyncClientWrapper):
        self._raw_client = AsyncRawTagsClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> AsyncRawTagsClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        AsyncRawTagsClient
        """
        return self._raw_client

    async def list(
        self,
        *,
        limit: typing.Optional[int] = None,
        after: typing.Optional[str] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> AsyncPager[Tag]:
        """
        Return all of the tags for an organization.

         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        To use this endpoint, select **Read Tags** under the Setup & Administration category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>

        Parameters
        ----------
        limit : typing.Optional[int]
            The limit for how many objects will be in the response. Default and max for this value is 512 objects.

        after : typing.Optional[str]
            If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        AsyncPager[Tag]
            List of tags.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            response = await client.tags.list()
            async for item in response:
                yield item

            # alternatively, you can paginate page-by-page
            async for page in response.iter_pages():
                yield page


        asyncio.run(main())
        """
        return await self._raw_client.list(limit=limit, after=after, request_options=request_options)

    async def create(
        self,
        *,
        name: str,
        addresses: typing.Optional[typing.Sequence[TaggedObjectId]] = OMIT,
        assets: typing.Optional[typing.Sequence[TaggedObjectId]] = OMIT,
        drivers: typing.Optional[typing.Sequence[TaggedObjectId]] = OMIT,
        external_ids: typing.Optional[typing.Dict[str, str]] = OMIT,
        machines: typing.Optional[typing.Sequence[TaggedObjectId]] = OMIT,
        parent_tag_id: typing.Optional[str] = OMIT,
        sensors: typing.Optional[typing.Sequence[TaggedObjectId]] = OMIT,
        vehicles: typing.Optional[typing.Sequence[TaggedObjectId]] = OMIT,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> TagResponse:
        """
        Create a new tag for the organization. This may include up to 20,000 tagged entities.

         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        To use this endpoint, select **Write Tags** under the Setup & Administration category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>

        Parameters
        ----------
        name : str
            Name of this tag.

        addresses : typing.Optional[typing.Sequence[TaggedObjectId]]
            The addresses that belong to this tag.

        assets : typing.Optional[typing.Sequence[TaggedObjectId]]
            The trailers, unpowered, and powered assets that belong to this tag.

        drivers : typing.Optional[typing.Sequence[TaggedObjectId]]
            The drivers that belong to this tag.

        external_ids : typing.Optional[typing.Dict[str, str]]
            The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object.

        machines : typing.Optional[typing.Sequence[TaggedObjectId]]
            The machines that belong to this tag.

        parent_tag_id : typing.Optional[str]
            If this tag is part a hierarchical tag tree, this is the ID of the parent tag, otherwise this will be omitted.

        sensors : typing.Optional[typing.Sequence[TaggedObjectId]]
            The sensors that belong to this tag.

        vehicles : typing.Optional[typing.Sequence[TaggedObjectId]]
            The vehicles that belong to this tag.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        TagResponse
            Newly created tag object, including the new tag ID.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.tags.create(
                name="California",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.create(
            name=name,
            addresses=addresses,
            assets=assets,
            drivers=drivers,
            external_ids=external_ids,
            machines=machines,
            parent_tag_id=parent_tag_id,
            sensors=sensors,
            vehicles=vehicles,
            request_options=request_options,
        )
        return _response.data

    async def get(self, id: str, *, request_options: typing.Optional[RequestOptions] = None) -> TagResponse:
        """
        Fetch a tag by id.

         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        To use this endpoint, select **Read Tags** under the Setup & Administration category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>

        Parameters
        ----------
        id : str
            ID of the Tag. This can either be the Samsara-provided ID or an external ID. External IDs are customer-specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `crmId:abc123`. Automatically populated external IDs are prefixed with `samsara.`. For example, `samsara.name:ELD-exempt`.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        TagResponse
            The tag corresponding to request id.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.tags.get(
                id="id",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.get(id, request_options=request_options)
        return _response.data

    async def replace(
        self,
        id: str,
        *,
        addresses: typing.Optional[typing.Sequence[TaggedObjectId]] = OMIT,
        assets: typing.Optional[typing.Sequence[TaggedObjectId]] = OMIT,
        drivers: typing.Optional[typing.Sequence[TaggedObjectId]] = OMIT,
        machines: typing.Optional[typing.Sequence[TaggedObjectId]] = OMIT,
        name: typing.Optional[str] = OMIT,
        parent_tag_id: typing.Optional[str] = OMIT,
        sensors: typing.Optional[typing.Sequence[TaggedObjectId]] = OMIT,
        vehicles: typing.Optional[typing.Sequence[TaggedObjectId]] = OMIT,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> TagResponse:
        """
        Update a tag with a new name and new members. This API call would replace all old members of a tag with new members specified in the request body.

         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        To use this endpoint, select **Write Tags** under the Setup & Administration category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>

        Parameters
        ----------
        id : str
            ID of the Tag. This can either be the Samsara-provided ID or an external ID. External IDs are customer-specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `crmId:abc123`. Automatically populated external IDs are prefixed with `samsara.`. For example, `samsara.name:ELD-exempt`.

        addresses : typing.Optional[typing.Sequence[TaggedObjectId]]
            The addresses that belong to this tag.

        assets : typing.Optional[typing.Sequence[TaggedObjectId]]
            The trailers, unpowered, and powered assets that belong to this tag.

        drivers : typing.Optional[typing.Sequence[TaggedObjectId]]
            The drivers that belong to this tag.

        machines : typing.Optional[typing.Sequence[TaggedObjectId]]
            The machines that belong to this tag.

        name : typing.Optional[str]
            Name of this tag.

        parent_tag_id : typing.Optional[str]
            If this tag is part a hierarchical tag tree, this is the ID of the parent tag, otherwise this will be omitted.

        sensors : typing.Optional[typing.Sequence[TaggedObjectId]]
            The sensors that belong to this tag.

        vehicles : typing.Optional[typing.Sequence[TaggedObjectId]]
            The vehicles that belong to this tag.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        TagResponse
            The updated tag data.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.tags.replace(
                id="id",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.replace(
            id,
            addresses=addresses,
            assets=assets,
            drivers=drivers,
            machines=machines,
            name=name,
            parent_tag_id=parent_tag_id,
            sensors=sensors,
            vehicles=vehicles,
            request_options=request_options,
        )
        return _response.data

    async def delete(
        self, id: str, *, request_options: typing.Optional[RequestOptions] = None
    ) -> typing.Optional[typing.Any]:
        """
        Permanently deletes a tag.

         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        To use this endpoint, select **Write Tags** under the Setup & Administration category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>

        Parameters
        ----------
        id : str
            ID of the Tag. This can either be the Samsara-provided ID or an external ID. External IDs are customer-specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `crmId:abc123`. Automatically populated external IDs are prefixed with `samsara.`. For example, `samsara.name:ELD-exempt`.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        typing.Optional[typing.Any]
            A successful DELETE response is a 204 with no content.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.tags.delete(
                id="id",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.delete(id, request_options=request_options)
        return _response.data

    async def patch(
        self,
        id: str,
        *,
        addresses: typing.Optional[typing.Sequence[TaggedObjectId]] = OMIT,
        assets: typing.Optional[typing.Sequence[TaggedObjectId]] = OMIT,
        drivers: typing.Optional[typing.Sequence[TaggedObjectId]] = OMIT,
        external_ids: typing.Optional[typing.Dict[str, str]] = OMIT,
        machines: typing.Optional[typing.Sequence[TaggedObjectId]] = OMIT,
        name: typing.Optional[str] = OMIT,
        parent_tag_id: typing.Optional[str] = OMIT,
        sensors: typing.Optional[typing.Sequence[TaggedObjectId]] = OMIT,
        vehicles: typing.Optional[typing.Sequence[TaggedObjectId]] = OMIT,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> TagResponse:
        """
        Update an existing tag. **Note** this implementation of patch uses [the JSON merge patch](https://tools.ietf.org/html/rfc7396) proposed standard.

         This means that any fields included in the patch request will _overwrite_ fields which exist on the target resource.

         For arrays, this means any array included in the request will _replace_ the array that exists at the specified path, it will not _add_ to the existing array.

         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        To use this endpoint, select **Write Tags** under the Setup & Administration category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>

        Parameters
        ----------
        id : str
            ID of the Tag. This can either be the Samsara-provided ID or an external ID. External IDs are customer-specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `crmId:abc123`. Automatically populated external IDs are prefixed with `samsara.`. For example, `samsara.name:ELD-exempt`.

        addresses : typing.Optional[typing.Sequence[TaggedObjectId]]
            The addresses that belong to this tag.

        assets : typing.Optional[typing.Sequence[TaggedObjectId]]
            The trailers, unpowered, and powered assets that belong to this tag.

        drivers : typing.Optional[typing.Sequence[TaggedObjectId]]
            The drivers that belong to this tag.

        external_ids : typing.Optional[typing.Dict[str, str]]
            The [external IDs](https://developers.samsara.com/docs/external-ids) for the given object.

        machines : typing.Optional[typing.Sequence[TaggedObjectId]]
            The machines that belong to this tag.

        name : typing.Optional[str]
            Name of this tag.

        parent_tag_id : typing.Optional[str]
            If this tag is part a hierarchical tag tree, this is the ID of the parent tag, otherwise this will be omitted.

        sensors : typing.Optional[typing.Sequence[TaggedObjectId]]
            The sensors that belong to this tag.

        vehicles : typing.Optional[typing.Sequence[TaggedObjectId]]
            The vehicles that belong to this tag.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        TagResponse
            Returns updated tag object.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.tags.patch(
                id="id",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.patch(
            id,
            addresses=addresses,
            assets=assets,
            drivers=drivers,
            external_ids=external_ids,
            machines=machines,
            name=name,
            parent_tag_id=parent_tag_id,
            sensors=sensors,
            vehicles=vehicles,
            request_options=request_options,
        )
        return _response.data
