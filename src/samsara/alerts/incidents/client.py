# This file was auto-generated by Fern from our API Definition.

import typing

from ...core.client_wrapper import AsyncClientWrapper, SyncClientWrapper
from ...core.pagination import AsyncPager, SyncPager
from ...core.request_options import RequestOptions
from ...types.get_workflow_incident_response_object_response_body import GetWorkflowIncidentResponseObjectResponseBody
from .raw_client import AsyncRawIncidentsClient, RawIncidentsClient


class IncidentsClient:
    def __init__(self, *, client_wrapper: SyncClientWrapper):
        self._raw_client = RawIncidentsClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> RawIncidentsClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        RawIncidentsClient
        """
        return self._raw_client

    def stream(
        self,
        *,
        start_time: str,
        configuration_ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        end_time: typing.Optional[str] = None,
        after: typing.Optional[str] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> SyncPager[GetWorkflowIncidentResponseObjectResponseBody]:
        """
        Get Alert Incidents for specific Alert Configurations over a specified period of time.

         <b>Rate limit:</b> 10 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Alerts** under the Alerts category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        start_time : str
            Required RFC 3339 timestamp that indicates when to begin receiving data. This will be based on updatedAtTime.

        configuration_ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            Required array of alert configuration ids to return incident data for.

        end_time : typing.Optional[str]
            Optional RFC 3339 timestamp to stop receiving data. Defaults to now if not provided. This will be based on updatedAtTime.

        after : typing.Optional[str]
             If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        SyncPager[GetWorkflowIncidentResponseObjectResponseBody]
            OK response.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        response = client.alerts.incidents.stream(
            start_time="startTime",
        )
        for item in response:
            yield item
        # alternatively, you can paginate page-by-page
        for page in response.iter_pages():
            yield page
        """
        return self._raw_client.stream(
            start_time=start_time,
            configuration_ids=configuration_ids,
            end_time=end_time,
            after=after,
            request_options=request_options,
        )


class AsyncIncidentsClient:
    def __init__(self, *, client_wrapper: AsyncClientWrapper):
        self._raw_client = AsyncRawIncidentsClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> AsyncRawIncidentsClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        AsyncRawIncidentsClient
        """
        return self._raw_client

    async def stream(
        self,
        *,
        start_time: str,
        configuration_ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        end_time: typing.Optional[str] = None,
        after: typing.Optional[str] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> AsyncPager[GetWorkflowIncidentResponseObjectResponseBody]:
        """
        Get Alert Incidents for specific Alert Configurations over a specified period of time.

         <b>Rate limit:</b> 10 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Alerts** under the Alerts category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        start_time : str
            Required RFC 3339 timestamp that indicates when to begin receiving data. This will be based on updatedAtTime.

        configuration_ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            Required array of alert configuration ids to return incident data for.

        end_time : typing.Optional[str]
            Optional RFC 3339 timestamp to stop receiving data. Defaults to now if not provided. This will be based on updatedAtTime.

        after : typing.Optional[str]
             If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        AsyncPager[GetWorkflowIncidentResponseObjectResponseBody]
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            response = await client.alerts.incidents.stream(
                start_time="startTime",
            )
            async for item in response:
                yield item

            # alternatively, you can paginate page-by-page
            async for page in response.iter_pages():
                yield page


        asyncio.run(main())
        """
        return await self._raw_client.stream(
            start_time=start_time,
            configuration_ids=configuration_ids,
            end_time=end_time,
            after=after,
            request_options=request_options,
        )
