# This file was auto-generated by Fern from our API Definition.

import typing

from ..core.client_wrapper import AsyncClientWrapper, SyncClientWrapper
from ..core.pagination import AsyncPager, SyncPager
from ..core.request_options import RequestOptions
from ..types.dvir_get_dvir_response_body import DvirGetDvirResponseBody
from ..types.dvir_response import DvirResponse
from ..types.dvir_stream_response_data_response_body import DvirStreamResponseDataResponseBody
from ..types.dvirs_list_response import DvirsListResponse
from .raw_client import AsyncRawDvirsClient, RawDvirsClient
from .types.create_dvir_request_safety_status import CreateDvirRequestSafetyStatus

# this is used as the default value for optional parameters
OMIT = typing.cast(typing.Any, ...)


class DvirsClient:
    def __init__(self, *, client_wrapper: SyncClientWrapper):
        self._raw_client = RawDvirsClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> RawDvirsClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        RawDvirsClient
        """
        return self._raw_client

    def stream(
        self,
        *,
        start_time: str,
        after: typing.Optional[str] = None,
        limit: typing.Optional[int] = None,
        include_external_ids: typing.Optional[bool] = None,
        end_time: typing.Optional[str] = None,
        safety_status: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> SyncPager[DvirStreamResponseDataResponseBody]:
        """
        Returns a history/feed of changed DVIRs by updatedAtTime between startTime and endTime parameters. In case of missing `endTime` parameter it will return a never ending stream of data.

         <b>Rate limit:</b> 5 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read DVIRs** under the Maintenance category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        start_time : str
            Required RFC 3339 timestamp to begin the feed or history by `updatedAtTime` at `startTime`.

        after : typing.Optional[str]
             If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        limit : typing.Optional[int]
            The limit for how many objects will be in the response. Default and max for this value is 200 objects.

        include_external_ids : typing.Optional[bool]
            Optional boolean indicating whether to return external IDs on supported entities

        end_time : typing.Optional[str]
            Optional RFC 3339 timestamp. If not provided then the endpoint behaves as an unending feed of changes.

        safety_status : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            Optional list of safety statuses. Valid values: [safe, unsafe, resolved]

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        SyncPager[DvirStreamResponseDataResponseBody]
            OK response.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        response = client.dvirs.stream(
            start_time="startTime",
        )
        for item in response:
            yield item
        # alternatively, you can paginate page-by-page
        for page in response.iter_pages():
            yield page
        """
        return self._raw_client.stream(
            start_time=start_time,
            after=after,
            limit=limit,
            include_external_ids=include_external_ids,
            end_time=end_time,
            safety_status=safety_status,
            request_options=request_options,
        )

    def get(
        self,
        id: str,
        *,
        include_external_ids: typing.Optional[bool] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> DvirGetDvirResponseBody:
        """
        Get a single DVIR by ID.

         <b>Rate limit:</b> 10 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read DVIRs** under the Maintenance category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        id : str
            Id of the DVIR.

        include_external_ids : typing.Optional[bool]
            Optional boolean indicating whether to return external IDs on supported entities

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        DvirGetDvirResponseBody
            OK response.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.dvirs.get(
            id="id",
        )
        """
        _response = self._raw_client.get(id, include_external_ids=include_external_ids, request_options=request_options)
        return _response.data

    def create(
        self,
        *,
        author_id: str,
        safety_status: CreateDvirRequestSafetyStatus,
        license_plate: typing.Optional[str] = OMIT,
        location: typing.Optional[str] = OMIT,
        mechanic_notes: typing.Optional[str] = OMIT,
        odometer_meters: typing.Optional[int] = OMIT,
        resolved_defect_ids: typing.Optional[typing.Sequence[str]] = OMIT,
        trailer_id: typing.Optional[str] = OMIT,
        vehicle_id: typing.Optional[str] = OMIT,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> DvirResponse:
        """
        Creates a new mechanic DVIR in the organization.

         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        To use this endpoint, select **Write DVIRs** under the Maintenance category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>

        Parameters
        ----------
        author_id : str
            Samsara user ID of the mechanic creating the DVIR.

        safety_status : CreateDvirRequestSafetyStatus
            Whether or not this vehicle or trailer is safe to drive.

        license_plate : typing.Optional[str]
            The license plate of this vehicle.

        location : typing.Optional[str]
            Optional string if your jurisdiction requires a location of the DVIR.

        mechanic_notes : typing.Optional[str]
            The mechanics notes on the DVIR.

        odometer_meters : typing.Optional[int]
            The odometer reading in meters.

        resolved_defect_ids : typing.Optional[typing.Sequence[str]]
            Array of ids for defects being resolved with this DVIR.

        trailer_id : typing.Optional[str]
            Id of trailer being inspected. Either vehicleId or trailerId must be provided.

        vehicle_id : typing.Optional[str]
            Id of vehicle being inspected. Either vehicleId or trailerId must be provided.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        DvirResponse
            Newly created DVIR.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.dvirs.create(
            author_id="11",
            safety_status="safe",
        )
        """
        _response = self._raw_client.create(
            author_id=author_id,
            safety_status=safety_status,
            license_plate=license_plate,
            location=location,
            mechanic_notes=mechanic_notes,
            odometer_meters=odometer_meters,
            resolved_defect_ids=resolved_defect_ids,
            trailer_id=trailer_id,
            vehicle_id=vehicle_id,
            request_options=request_options,
        )
        return _response.data

    def history(
        self,
        *,
        start_time: str,
        end_time: str,
        limit: typing.Optional[int] = None,
        after: typing.Optional[str] = None,
        parent_tag_ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        tag_ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> DvirsListResponse:
        """
        **Note: This is a legacy endpoint, consider using [this endpoint](https://developers.samsara.com/reference/getdvirs) instead. The endpoint will continue to function as documented.**

         Returns a list of all DVIRs in an organization.

         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        To use this endpoint, select **Read DVIRs** under the Maintenance category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>

        Parameters
        ----------
        start_time : str
            A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).

        end_time : str
            An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).

        limit : typing.Optional[int]
            The limit for how many objects will be in the response. Default and max for this value is 512 objects.

        after : typing.Optional[str]
            If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        parent_tag_ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`

        tag_ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        DvirsListResponse
            List of all DVIRs in the organization

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.dvirs.history(
            start_time="startTime",
            end_time="endTime",
        )
        """
        _response = self._raw_client.history(
            start_time=start_time,
            end_time=end_time,
            limit=limit,
            after=after,
            parent_tag_ids=parent_tag_ids,
            tag_ids=tag_ids,
            request_options=request_options,
        )
        return _response.data

    def update(
        self,
        id: str,
        *,
        author_id: str,
        is_resolved: bool,
        mechanic_notes: typing.Optional[str] = OMIT,
        signed_at_time: typing.Optional[str] = OMIT,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> DvirResponse:
        """
        Resolves a given DVIR by marking its `isResolved` field to `true`.

         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        To use this endpoint, select **Write DVIRs** under the Maintenance category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>

        Parameters
        ----------
        id : str
            ID of the DVIR.

        author_id : str
            The user who is resolving the dvir.

        is_resolved : bool
            Resolves the DVIR. Must be `true`.

        mechanic_notes : typing.Optional[str]
            The mechanics notes on the DVIR.

        signed_at_time : typing.Optional[str]
            Time when user signed this DVIR. Defaults to now. UTC timestamp in RFC 3339 format. Example: `2020-01-27T07:06:25Z`.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        DvirResponse
            Updated dvir object with ID.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.dvirs.update(
            id="id",
            author_id="11",
            is_resolved=True,
        )
        """
        _response = self._raw_client.update(
            id,
            author_id=author_id,
            is_resolved=is_resolved,
            mechanic_notes=mechanic_notes,
            signed_at_time=signed_at_time,
            request_options=request_options,
        )
        return _response.data


class AsyncDvirsClient:
    def __init__(self, *, client_wrapper: AsyncClientWrapper):
        self._raw_client = AsyncRawDvirsClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> AsyncRawDvirsClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        AsyncRawDvirsClient
        """
        return self._raw_client

    async def stream(
        self,
        *,
        start_time: str,
        after: typing.Optional[str] = None,
        limit: typing.Optional[int] = None,
        include_external_ids: typing.Optional[bool] = None,
        end_time: typing.Optional[str] = None,
        safety_status: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> AsyncPager[DvirStreamResponseDataResponseBody]:
        """
        Returns a history/feed of changed DVIRs by updatedAtTime between startTime and endTime parameters. In case of missing `endTime` parameter it will return a never ending stream of data.

         <b>Rate limit:</b> 5 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read DVIRs** under the Maintenance category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        start_time : str
            Required RFC 3339 timestamp to begin the feed or history by `updatedAtTime` at `startTime`.

        after : typing.Optional[str]
             If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        limit : typing.Optional[int]
            The limit for how many objects will be in the response. Default and max for this value is 200 objects.

        include_external_ids : typing.Optional[bool]
            Optional boolean indicating whether to return external IDs on supported entities

        end_time : typing.Optional[str]
            Optional RFC 3339 timestamp. If not provided then the endpoint behaves as an unending feed of changes.

        safety_status : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            Optional list of safety statuses. Valid values: [safe, unsafe, resolved]

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        AsyncPager[DvirStreamResponseDataResponseBody]
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            response = await client.dvirs.stream(
                start_time="startTime",
            )
            async for item in response:
                yield item

            # alternatively, you can paginate page-by-page
            async for page in response.iter_pages():
                yield page


        asyncio.run(main())
        """
        return await self._raw_client.stream(
            start_time=start_time,
            after=after,
            limit=limit,
            include_external_ids=include_external_ids,
            end_time=end_time,
            safety_status=safety_status,
            request_options=request_options,
        )

    async def get(
        self,
        id: str,
        *,
        include_external_ids: typing.Optional[bool] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> DvirGetDvirResponseBody:
        """
        Get a single DVIR by ID.

         <b>Rate limit:</b> 10 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read DVIRs** under the Maintenance category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        id : str
            Id of the DVIR.

        include_external_ids : typing.Optional[bool]
            Optional boolean indicating whether to return external IDs on supported entities

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        DvirGetDvirResponseBody
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.dvirs.get(
                id="id",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.get(
            id, include_external_ids=include_external_ids, request_options=request_options
        )
        return _response.data

    async def create(
        self,
        *,
        author_id: str,
        safety_status: CreateDvirRequestSafetyStatus,
        license_plate: typing.Optional[str] = OMIT,
        location: typing.Optional[str] = OMIT,
        mechanic_notes: typing.Optional[str] = OMIT,
        odometer_meters: typing.Optional[int] = OMIT,
        resolved_defect_ids: typing.Optional[typing.Sequence[str]] = OMIT,
        trailer_id: typing.Optional[str] = OMIT,
        vehicle_id: typing.Optional[str] = OMIT,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> DvirResponse:
        """
        Creates a new mechanic DVIR in the organization.

         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        To use this endpoint, select **Write DVIRs** under the Maintenance category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>

        Parameters
        ----------
        author_id : str
            Samsara user ID of the mechanic creating the DVIR.

        safety_status : CreateDvirRequestSafetyStatus
            Whether or not this vehicle or trailer is safe to drive.

        license_plate : typing.Optional[str]
            The license plate of this vehicle.

        location : typing.Optional[str]
            Optional string if your jurisdiction requires a location of the DVIR.

        mechanic_notes : typing.Optional[str]
            The mechanics notes on the DVIR.

        odometer_meters : typing.Optional[int]
            The odometer reading in meters.

        resolved_defect_ids : typing.Optional[typing.Sequence[str]]
            Array of ids for defects being resolved with this DVIR.

        trailer_id : typing.Optional[str]
            Id of trailer being inspected. Either vehicleId or trailerId must be provided.

        vehicle_id : typing.Optional[str]
            Id of vehicle being inspected. Either vehicleId or trailerId must be provided.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        DvirResponse
            Newly created DVIR.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.dvirs.create(
                author_id="11",
                safety_status="safe",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.create(
            author_id=author_id,
            safety_status=safety_status,
            license_plate=license_plate,
            location=location,
            mechanic_notes=mechanic_notes,
            odometer_meters=odometer_meters,
            resolved_defect_ids=resolved_defect_ids,
            trailer_id=trailer_id,
            vehicle_id=vehicle_id,
            request_options=request_options,
        )
        return _response.data

    async def history(
        self,
        *,
        start_time: str,
        end_time: str,
        limit: typing.Optional[int] = None,
        after: typing.Optional[str] = None,
        parent_tag_ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        tag_ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> DvirsListResponse:
        """
        **Note: This is a legacy endpoint, consider using [this endpoint](https://developers.samsara.com/reference/getdvirs) instead. The endpoint will continue to function as documented.**

         Returns a list of all DVIRs in an organization.

         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        To use this endpoint, select **Read DVIRs** under the Maintenance category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>

        Parameters
        ----------
        start_time : str
            A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).

        end_time : str
            An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).

        limit : typing.Optional[int]
            The limit for how many objects will be in the response. Default and max for this value is 512 objects.

        after : typing.Optional[str]
            If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        parent_tag_ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`

        tag_ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        DvirsListResponse
            List of all DVIRs in the organization

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.dvirs.history(
                start_time="startTime",
                end_time="endTime",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.history(
            start_time=start_time,
            end_time=end_time,
            limit=limit,
            after=after,
            parent_tag_ids=parent_tag_ids,
            tag_ids=tag_ids,
            request_options=request_options,
        )
        return _response.data

    async def update(
        self,
        id: str,
        *,
        author_id: str,
        is_resolved: bool,
        mechanic_notes: typing.Optional[str] = OMIT,
        signed_at_time: typing.Optional[str] = OMIT,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> DvirResponse:
        """
        Resolves a given DVIR by marking its `isResolved` field to `true`.

         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        To use this endpoint, select **Write DVIRs** under the Maintenance category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>

        Parameters
        ----------
        id : str
            ID of the DVIR.

        author_id : str
            The user who is resolving the dvir.

        is_resolved : bool
            Resolves the DVIR. Must be `true`.

        mechanic_notes : typing.Optional[str]
            The mechanics notes on the DVIR.

        signed_at_time : typing.Optional[str]
            Time when user signed this DVIR. Defaults to now. UTC timestamp in RFC 3339 format. Example: `2020-01-27T07:06:25Z`.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        DvirResponse
            Updated dvir object with ID.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.dvirs.update(
                id="id",
                author_id="11",
                is_resolved=True,
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.update(
            id,
            author_id=author_id,
            is_resolved=is_resolved,
            mechanic_notes=mechanic_notes,
            signed_at_time=signed_at_time,
            request_options=request_options,
        )
        return _response.data
