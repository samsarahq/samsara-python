# This file was auto-generated by Fern from our API Definition.

import typing

from ...core.client_wrapper import AsyncClientWrapper, SyncClientWrapper
from ...core.request_options import RequestOptions
from ...types.driver_qr_codes_create_driver_qr_code_response_body import DriverQrCodesCreateDriverQrCodeResponseBody
from ...types.driver_qr_codes_get_drivers_qr_codes_response_body import DriverQrCodesGetDriversQrCodesResponseBody
from .raw_client import AsyncRawQrCodesClient, RawQrCodesClient

# this is used as the default value for optional parameters
OMIT = typing.cast(typing.Any, ...)


class QrCodesClient:
    def __init__(self, *, client_wrapper: SyncClientWrapper):
        self._raw_client = RawQrCodesClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> RawQrCodesClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        RawQrCodesClient
        """
        return self._raw_client

    def list(
        self,
        *,
        driver_ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> DriverQrCodesGetDriversQrCodesResponseBody:
        """
        Get details for requested driver(s) QR code, used for driver trip assignment.

         <b>Rate limit:</b> 5 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Drivers** under the Drivers category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        driver_ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            String of comma separated driver IDs. List of driver - QR codes for specified driver(s) will be returned.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        DriverQrCodesGetDriversQrCodesResponseBody
            OK response.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.drivers.qr_codes.list()
        """
        _response = self._raw_client.list(driver_ids=driver_ids, request_options=request_options)
        return _response.data

    def create(
        self, *, driver_id: int, request_options: typing.Optional[RequestOptions] = None
    ) -> DriverQrCodesCreateDriverQrCodeResponseBody:
        """
        Assign a new QR code for the requested driver. Return error if an active QR code already exists.

         <b>Rate limit:</b> 100 requests/min (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write Drivers** under the Drivers category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        driver_id : int
            Unique ID of the driver.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        DriverQrCodesCreateDriverQrCodeResponseBody
            OK response.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.drivers.qr_codes.create(
            driver_id=494123,
        )
        """
        _response = self._raw_client.create(driver_id=driver_id, request_options=request_options)
        return _response.data

    def delete(self, *, driver_id: int, request_options: typing.Optional[RequestOptions] = None) -> None:
        """
        Revoke requested driver's currently active QR code.

         <b>Rate limit:</b> 100 requests/min (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write Drivers** under the Drivers category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        driver_id : int
            Unique ID of the driver.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        None

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.drivers.qr_codes.delete(
            driver_id=494123,
        )
        """
        _response = self._raw_client.delete(driver_id=driver_id, request_options=request_options)
        return _response.data


class AsyncQrCodesClient:
    def __init__(self, *, client_wrapper: AsyncClientWrapper):
        self._raw_client = AsyncRawQrCodesClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> AsyncRawQrCodesClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        AsyncRawQrCodesClient
        """
        return self._raw_client

    async def list(
        self,
        *,
        driver_ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> DriverQrCodesGetDriversQrCodesResponseBody:
        """
        Get details for requested driver(s) QR code, used for driver trip assignment.

         <b>Rate limit:</b> 5 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Drivers** under the Drivers category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        driver_ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            String of comma separated driver IDs. List of driver - QR codes for specified driver(s) will be returned.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        DriverQrCodesGetDriversQrCodesResponseBody
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.drivers.qr_codes.list()


        asyncio.run(main())
        """
        _response = await self._raw_client.list(driver_ids=driver_ids, request_options=request_options)
        return _response.data

    async def create(
        self, *, driver_id: int, request_options: typing.Optional[RequestOptions] = None
    ) -> DriverQrCodesCreateDriverQrCodeResponseBody:
        """
        Assign a new QR code for the requested driver. Return error if an active QR code already exists.

         <b>Rate limit:</b> 100 requests/min (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write Drivers** under the Drivers category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        driver_id : int
            Unique ID of the driver.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        DriverQrCodesCreateDriverQrCodeResponseBody
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.drivers.qr_codes.create(
                driver_id=494123,
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.create(driver_id=driver_id, request_options=request_options)
        return _response.data

    async def delete(self, *, driver_id: int, request_options: typing.Optional[RequestOptions] = None) -> None:
        """
        Revoke requested driver's currently active QR code.

         <b>Rate limit:</b> 100 requests/min (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write Drivers** under the Drivers category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        driver_id : int
            Unique ID of the driver.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        None

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.drivers.qr_codes.delete(
                driver_id=494123,
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.delete(driver_id=driver_id, request_options=request_options)
        return _response.data
