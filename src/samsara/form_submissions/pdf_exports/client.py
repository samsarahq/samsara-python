# This file was auto-generated by Fern from our API Definition.

import typing

from ...core.client_wrapper import AsyncClientWrapper, SyncClientWrapper
from ...core.request_options import RequestOptions
from ...types.form_submissions_get_form_submissions_pdf_exports_response_body import (
    FormSubmissionsGetFormSubmissionsPdfExportsResponseBody,
)
from ...types.form_submissions_post_form_submissions_pdf_exports_response_body import (
    FormSubmissionsPostFormSubmissionsPdfExportsResponseBody,
)
from .raw_client import AsyncRawPdfExportsClient, RawPdfExportsClient


class PdfExportsClient:
    def __init__(self, *, client_wrapper: SyncClientWrapper):
        self._raw_client = RawPdfExportsClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> RawPdfExportsClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        RawPdfExportsClient
        """
        return self._raw_client

    def get(
        self, *, pdf_id: str, request_options: typing.Optional[RequestOptions] = None
    ) -> FormSubmissionsGetFormSubmissionsPdfExportsResponseBody:
        """
        Returns a PDF export that has already been generated for a form submission.

         <b>Rate limit:</b> 100 requests/min (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Form Submissions** under the Forms category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        pdf_id : str
            ID of the form submission PDF export.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        FormSubmissionsGetFormSubmissionsPdfExportsResponseBody
            OK response.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.form_submissions.pdf_exports.get(
            pdf_id="pdfId",
        )
        """
        _response = self._raw_client.get(pdf_id=pdf_id, request_options=request_options)
        return _response.data

    def create(
        self, *, id: str, request_options: typing.Optional[RequestOptions] = None
    ) -> FormSubmissionsPostFormSubmissionsPdfExportsResponseBody:
        """
        Creates a PDF export for an existing form submission.

         <b>Rate limit:</b> 100 requests/min (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write Form Submissions** under the Forms category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        id : str
            ID of the form submission to create a PDF export from.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        FormSubmissionsPostFormSubmissionsPdfExportsResponseBody
            Accepted response.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.form_submissions.pdf_exports.create(
            id="id",
        )
        """
        _response = self._raw_client.create(id=id, request_options=request_options)
        return _response.data


class AsyncPdfExportsClient:
    def __init__(self, *, client_wrapper: AsyncClientWrapper):
        self._raw_client = AsyncRawPdfExportsClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> AsyncRawPdfExportsClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        AsyncRawPdfExportsClient
        """
        return self._raw_client

    async def get(
        self, *, pdf_id: str, request_options: typing.Optional[RequestOptions] = None
    ) -> FormSubmissionsGetFormSubmissionsPdfExportsResponseBody:
        """
        Returns a PDF export that has already been generated for a form submission.

         <b>Rate limit:</b> 100 requests/min (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Form Submissions** under the Forms category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        pdf_id : str
            ID of the form submission PDF export.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        FormSubmissionsGetFormSubmissionsPdfExportsResponseBody
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.form_submissions.pdf_exports.get(
                pdf_id="pdfId",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.get(pdf_id=pdf_id, request_options=request_options)
        return _response.data

    async def create(
        self, *, id: str, request_options: typing.Optional[RequestOptions] = None
    ) -> FormSubmissionsPostFormSubmissionsPdfExportsResponseBody:
        """
        Creates a PDF export for an existing form submission.

         <b>Rate limit:</b> 100 requests/min (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write Form Submissions** under the Forms category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        id : str
            ID of the form submission to create a PDF export from.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        FormSubmissionsPostFormSubmissionsPdfExportsResponseBody
            Accepted response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.form_submissions.pdf_exports.create(
                id="id",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.create(id=id, request_options=request_options)
        return _response.data
