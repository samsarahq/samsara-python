# This file was auto-generated by Fern from our API Definition.

import typing

from ...core.client_wrapper import AsyncClientWrapper, SyncClientWrapper
from ...core.request_options import RequestOptions
from ...types.ifta_create_ifta_detail_job_response_body import IftaCreateIftaDetailJobResponseBody
from ...types.ifta_get_ifta_detail_job_response_body import IftaGetIftaDetailJobResponseBody
from .raw_client import AsyncRawCsvClient, RawCsvClient

# this is used as the default value for optional parameters
OMIT = typing.cast(typing.Any, ...)


class CsvClient:
    def __init__(self, *, client_wrapper: SyncClientWrapper):
        self._raw_client = RawCsvClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> RawCsvClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        RawCsvClient
        """
        return self._raw_client

    def create(
        self,
        *,
        end_hour: str,
        start_hour: str,
        vehicle_ids: typing.Optional[str] = OMIT,
        vehicle_parent_tag_ids: typing.Optional[str] = OMIT,
        vehicle_tag_ids: typing.Optional[str] = OMIT,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> IftaCreateIftaDetailJobResponseBody:
        """
        Create a job to generate csv files of IFTA mileage segments.

         <b>Rate limit:</b> 100 requests/min (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write IFTA (US)** under the Compliance category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        end_hour : str
             An end time in RFC 3339 format. Hour precision and timezones are supported. Any minutes or seconds will be truncated down to the nearest hour. Note that the most recent 72 hours of data may still be processing and is subject to change and latency, so it is not recommended to request data for the most recent 72 hours. The maximum request duration is 1 month. Limit the number of vehicles to 1000 when requesting more than 24 hours of data. (Examples: 2019-06-13T19:00:00Z, 2019-06-13T19:00:00.000Z, OR 2015-09-15T14:00:00-04:00).

        start_hour : str
             A start time in RFC 3339 format. Hour precision and timezones are supported. Any minutes or seconds will be truncated down to the nearest hour. Note that the most recent 72 hours of data may still be processing and is subject to change and latency, so it is not recommended to request data for the most recent 72 hours. The maximum request duration is 1 month. Limit the number of vehicles to 1000 when requesting more than 24 hours of data. (Examples: 2019-06-13T19:00:00Z, 2019-06-13T19:00:00.000Z, OR 2015-09-15T14:00:00-04:00).

        vehicle_ids : typing.Optional[str]
            A filter on the data based on this comma-separated list of vehicle IDs and external IDs. The number of vehicles requested per job shouldn't exceed 5000. Example: `vehicleIds: '1234,5678,samsara.vin:1HGBH41JXMN109186'`

        vehicle_parent_tag_ids : typing.Optional[str]
             A filter on the data based on this comma-separated list of vehicle parent tag IDs. The number of vehicles requested per job shouldn't exceed 5000. Example: `vehicleParentTagIds: '1234,5678'`

        vehicle_tag_ids : typing.Optional[str]
             A filter on the data based on this comma-separated list of vehicle tag IDs. The number of vehicles requested per job shouldn't exceed 5000. Example: `vehicleTagIds: '1234,5678'`

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        IftaCreateIftaDetailJobResponseBody
            Created response.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.ifta.csv.create(
            end_hour="2019-06-13T19:00:00Z",
            start_hour="2019-06-13T19:00:00Z",
        )
        """
        _response = self._raw_client.create(
            end_hour=end_hour,
            start_hour=start_hour,
            vehicle_ids=vehicle_ids,
            vehicle_parent_tag_ids=vehicle_parent_tag_ids,
            vehicle_tag_ids=vehicle_tag_ids,
            request_options=request_options,
        )
        return _response.data

    def get(
        self, id: str, *, request_options: typing.Optional[RequestOptions] = None
    ) -> IftaGetIftaDetailJobResponseBody:
        """
        Get information about an existing IFTA detail job.

         <b>Rate limit:</b> 5 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read IFTA (US)** under the Compliance category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        id : str
            ID of the requested job.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        IftaGetIftaDetailJobResponseBody
            OK response.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.ifta.csv.get(
            id="id",
        )
        """
        _response = self._raw_client.get(id, request_options=request_options)
        return _response.data


class AsyncCsvClient:
    def __init__(self, *, client_wrapper: AsyncClientWrapper):
        self._raw_client = AsyncRawCsvClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> AsyncRawCsvClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        AsyncRawCsvClient
        """
        return self._raw_client

    async def create(
        self,
        *,
        end_hour: str,
        start_hour: str,
        vehicle_ids: typing.Optional[str] = OMIT,
        vehicle_parent_tag_ids: typing.Optional[str] = OMIT,
        vehicle_tag_ids: typing.Optional[str] = OMIT,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> IftaCreateIftaDetailJobResponseBody:
        """
        Create a job to generate csv files of IFTA mileage segments.

         <b>Rate limit:</b> 100 requests/min (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write IFTA (US)** under the Compliance category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        end_hour : str
             An end time in RFC 3339 format. Hour precision and timezones are supported. Any minutes or seconds will be truncated down to the nearest hour. Note that the most recent 72 hours of data may still be processing and is subject to change and latency, so it is not recommended to request data for the most recent 72 hours. The maximum request duration is 1 month. Limit the number of vehicles to 1000 when requesting more than 24 hours of data. (Examples: 2019-06-13T19:00:00Z, 2019-06-13T19:00:00.000Z, OR 2015-09-15T14:00:00-04:00).

        start_hour : str
             A start time in RFC 3339 format. Hour precision and timezones are supported. Any minutes or seconds will be truncated down to the nearest hour. Note that the most recent 72 hours of data may still be processing and is subject to change and latency, so it is not recommended to request data for the most recent 72 hours. The maximum request duration is 1 month. Limit the number of vehicles to 1000 when requesting more than 24 hours of data. (Examples: 2019-06-13T19:00:00Z, 2019-06-13T19:00:00.000Z, OR 2015-09-15T14:00:00-04:00).

        vehicle_ids : typing.Optional[str]
            A filter on the data based on this comma-separated list of vehicle IDs and external IDs. The number of vehicles requested per job shouldn't exceed 5000. Example: `vehicleIds: '1234,5678,samsara.vin:1HGBH41JXMN109186'`

        vehicle_parent_tag_ids : typing.Optional[str]
             A filter on the data based on this comma-separated list of vehicle parent tag IDs. The number of vehicles requested per job shouldn't exceed 5000. Example: `vehicleParentTagIds: '1234,5678'`

        vehicle_tag_ids : typing.Optional[str]
             A filter on the data based on this comma-separated list of vehicle tag IDs. The number of vehicles requested per job shouldn't exceed 5000. Example: `vehicleTagIds: '1234,5678'`

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        IftaCreateIftaDetailJobResponseBody
            Created response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.ifta.csv.create(
                end_hour="2019-06-13T19:00:00Z",
                start_hour="2019-06-13T19:00:00Z",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.create(
            end_hour=end_hour,
            start_hour=start_hour,
            vehicle_ids=vehicle_ids,
            vehicle_parent_tag_ids=vehicle_parent_tag_ids,
            vehicle_tag_ids=vehicle_tag_ids,
            request_options=request_options,
        )
        return _response.data

    async def get(
        self, id: str, *, request_options: typing.Optional[RequestOptions] = None
    ) -> IftaGetIftaDetailJobResponseBody:
        """
        Get information about an existing IFTA detail job.

         <b>Rate limit:</b> 5 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read IFTA (US)** under the Compliance category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        id : str
            ID of the requested job.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        IftaGetIftaDetailJobResponseBody
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.ifta.csv.get(
                id="id",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.get(id, request_options=request_options)
        return _response.data
