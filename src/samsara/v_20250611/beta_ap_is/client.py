# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ...core.client_wrapper import AsyncClientWrapper, SyncClientWrapper
from ...core.request_options import RequestOptions
from ..types.aemp_equipment_get_aemp_equipment_list_response_body import AempEquipmentGetAempEquipmentListResponseBody
from ..types.assets_inputs_get_assets_inputs_response_body import AssetsInputsGetAssetsInputsResponseBody
from ..types.devices_get_devices_response_body import DevicesGetDevicesResponseBody
from ..types.driver_efficiencies_response import DriverEfficienciesResponse
from ..types.engine_immobilizer_get_engine_immobilizer_states_response_body import (
    EngineImmobilizerGetEngineImmobilizerStatesResponseBody,
)
from ..types.equipment_patch_equipment_response_body import EquipmentPatchEquipmentResponseBody
from ..types.functions_start_function_run_response_body import FunctionsStartFunctionRunResponseBody
from ..types.goa_attribute_tiny import GoaAttributeTiny
from ..types.hos_daily_logs_update_shipping_docs_response_body import HosDailyLogsUpdateShippingDocsResponseBody
from ..types.hos_eld_events_get_hos_eld_events_response_body import HosEldEventsGetHosEldEventsResponseBody
from ..types.hub_capacities_list_hub_capacities_response_body import HubCapacitiesListHubCapacitiesResponseBody
from ..types.hub_location_input_object_request_body import HubLocationInputObjectRequestBody
from ..types.hub_locations_create_hub_locations_response_body import HubLocationsCreateHubLocationsResponseBody
from ..types.hub_locations_list_hub_locations_response_body import HubLocationsListHubLocationsResponseBody
from ..types.hub_locations_update_hub_location_response_body import HubLocationsUpdateHubLocationResponseBody
from ..types.hub_plan_routes_list_hub_plan_routes_response_body import HubPlanRoutesListHubPlanRoutesResponseBody
from ..types.hub_plans_create_hub_plan_response_body import HubPlansCreateHubPlanResponseBody
from ..types.hub_plans_list_hub_plans_response_body import HubPlansListHubPlansResponseBody
from ..types.hub_skills_list_hub_skills_response_body import HubSkillsListHubSkillsResponseBody
from ..types.hubs_list_hubs_response_body import HubsListHubsResponseBody
from ..types.jobs_create_job_response_body import JobsCreateJobResponseBody
from ..types.jobs_delete_job_response_body import JobsDeleteJobResponseBody
from ..types.jobs_get_jobs_response_body import JobsGetJobsResponseBody
from ..types.jobs_patch_job_response_body import JobsPatchJobResponseBody
from ..types.order_input_object_request_body import OrderInputObjectRequestBody
from ..types.patch_job_object_request_body import PatchJobObjectRequestBody
from ..types.plan_orders_create_plan_orders_response_body import PlanOrdersCreatePlanOrdersResponseBody
from ..types.post_job_object_request_body import PostJobObjectRequestBody
from ..types.reading_datapoint_request_body import ReadingDatapointRequestBody
from ..types.readings_get_readings_history_response_body import ReadingsGetReadingsHistoryResponseBody
from ..types.readings_get_readings_snapshot_response_body import ReadingsGetReadingsSnapshotResponseBody
from ..types.readings_list_readings_definitions_response_body import ReadingsListReadingsDefinitionsResponseBody
from ..types.service_task_instance_input_object_request_body import ServiceTaskInstanceInputObjectRequestBody
from ..types.trailer_assignments_create_driver_trailer_assignment_response_body import (
    TrailerAssignmentsCreateDriverTrailerAssignmentResponseBody,
)
from ..types.trailer_assignments_get_driver_trailer_assignments_response_body import (
    TrailerAssignmentsGetDriverTrailerAssignmentsResponseBody,
)
from ..types.trailer_assignments_update_driver_trailer_assignment_response_body import (
    TrailerAssignmentsUpdateDriverTrailerAssignmentResponseBody,
)
from ..types.trailer_stats_get_trailer_stats_feed_response_body import TrailerStatsGetTrailerStatsFeedResponseBody
from ..types.trailer_stats_get_trailer_stats_history_response_body import TrailerStatsGetTrailerStatsHistoryResponseBody
from ..types.trailer_stats_get_trailer_stats_snapshot_response_body import (
    TrailerStatsGetTrailerStatsSnapshotResponseBody,
)
from ..types.training_assignments_get_training_assignments_stream_response_body import (
    TrainingAssignmentsGetTrainingAssignmentsStreamResponseBody,
)
from ..types.training_assignments_patch_training_assignments_response_body import (
    TrainingAssignmentsPatchTrainingAssignmentsResponseBody,
)
from ..types.training_assignments_post_training_assignments_response_body import (
    TrainingAssignmentsPostTrainingAssignmentsResponseBody,
)
from ..types.training_courses_get_training_courses_response_body import TrainingCoursesGetTrainingCoursesResponseBody
from ..types.trips_get_trips_response_body import TripsGetTripsResponseBody
from ..types.update_engine_immobilizer_relay_state_request_body_request_body import (
    UpdateEngineImmobilizerRelayStateRequestBodyRequestBody,
)
from ..types.update_hub_location_request_body_request_body import UpdateHubLocationRequestBodyRequestBody
from ..types.work_order_discount_object_request_body import WorkOrderDiscountObjectRequestBody
from ..types.work_order_item_object_request_body import WorkOrderItemObjectRequestBody
from ..types.work_order_tax_object_request_body import WorkOrderTaxObjectRequestBody
from ..types.work_orders_get_service_tasks_response_body import WorkOrdersGetServiceTasksResponseBody
from ..types.work_orders_get_work_orders_response_body import WorkOrdersGetWorkOrdersResponseBody
from ..types.work_orders_patch_work_orders_response_body import WorkOrdersPatchWorkOrdersResponseBody
from ..types.work_orders_post_work_orders_response_body import WorkOrdersPostWorkOrdersResponseBody
from ..types.work_orders_stream_work_orders_response_body import WorkOrdersStreamWorkOrdersResponseBody
from .raw_client import AsyncRawBetaApIsClient, RawBetaApIsClient
from .types.functions_start_function_run_request_body_params_override import (
    FunctionsStartFunctionRunRequestBodyParamsOverride,
)
from .types.get_assets_inputs_request_type import GetAssetsInputsRequestType
from .types.get_driver_efficiency_request_driver_activation_status import (
    GetDriverEfficiencyRequestDriverActivationStatus,
)
from .types.get_hos_eld_events_request_driver_activation_status import GetHosEldEventsRequestDriverActivationStatus
from .types.get_jobs_request_status import GetJobsRequestStatus
from .types.get_trips_request_completion_status import GetTripsRequestCompletionStatus
from .types.get_trips_request_query_by import GetTripsRequestQueryBy
from .types.stream_work_orders_request_work_order_statuses_item import StreamWorkOrdersRequestWorkOrderStatusesItem
from .types.work_orders_patch_work_orders_request_body_category import WorkOrdersPatchWorkOrdersRequestBodyCategory
from .types.work_orders_patch_work_orders_request_body_priority import WorkOrdersPatchWorkOrdersRequestBodyPriority
from .types.work_orders_patch_work_orders_request_body_status import WorkOrdersPatchWorkOrdersRequestBodyStatus
from .types.work_orders_post_work_orders_request_body_category import WorkOrdersPostWorkOrdersRequestBodyCategory
from .types.work_orders_post_work_orders_request_body_priority import WorkOrdersPostWorkOrdersRequestBodyPriority

# this is used as the default value for optional parameters
OMIT = typing.cast(typing.Any, ...)


class BetaApIsClient:
    def __init__(self, *, client_wrapper: SyncClientWrapper):
        self._raw_client = RawBetaApIsClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> RawBetaApIsClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        RawBetaApIsClient
        """
        return self._raw_client

    def get_assets_inputs(
        self,
        *,
        type: GetAssetsInputsRequestType,
        start_time: str,
        ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        after: typing.Optional[str] = None,
        end_time: typing.Optional[str] = None,
        include_external_ids: typing.Optional[bool] = None,
        include_tags: typing.Optional[bool] = None,
        include_attributes: typing.Optional[bool] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> AssetsInputsGetAssetsInputsResponseBody:
        """
        This endpoint will return data collected from the inputs of your organization's assets based on the time parameters passed in. Results are paginated. If you include an endTime, the endpoint will return data up until that point. If you don’t include an endTime, you can continue to poll the API real-time with the pagination cursor that gets returned on every call. The endpoint will only return data up until the endTime that has been processed by the server at the time of the original request. You will need to request the same [startTime, endTime) range again to receive data for assets processed after the original request time. This endpoint sorts data by time ascending.

         <b>Rate limit:</b> 10 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Assets** under the Assets category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        type : GetAssetsInputsRequestType
            Input stat type to query for.  Valid values: `auxInput1`, `auxInput2`, `auxInput3`, `auxInput4`, `auxInput5`, `auxInput6`, `auxInput7`, `auxInput8`, `auxInput9`, `auxInput10`, `auxInput11`, `auxInput12`, `auxInput13`, `analogInput1Voltage`, `analogInput2Voltage`, `analogInput1Current`, `analogInput2Current`, `batteryVoltage`

        start_time : str
            A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).

        ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            Comma-separated list of asset IDs. Limited to 100 ID's for each request.

        after : typing.Optional[str]
             If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        end_time : typing.Optional[str]
             An end time in RFC 3339 format. Defaults to never if not provided; if not provided then pagination will not cease, and a valid pagination cursor will always be returned. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).

        include_external_ids : typing.Optional[bool]
            Optional boolean indicating whether to return external IDs on supported entities

        include_tags : typing.Optional[bool]
            Optional boolean indicating whether to return tags on supported entities

        include_attributes : typing.Optional[bool]
            Optional boolean indicating whether to return attributes on supported entities

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        AssetsInputsGetAssetsInputsResponseBody
            OK response.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.get_assets_inputs(
            type="auxInput1",
            start_time="startTime",
        )
        """
        _response = self._raw_client.get_assets_inputs(
            type=type,
            start_time=start_time,
            ids=ids,
            after=after,
            end_time=end_time,
            include_external_ids=include_external_ids,
            include_tags=include_tags,
            include_attributes=include_attributes,
            request_options=request_options,
        )
        return _response.data

    def get_aemp_equipment_list(
        self, page_number: str, *, request_options: typing.Optional[RequestOptions] = None
    ) -> AempEquipmentGetAempEquipmentListResponseBody:
        """
        Get a list of equipment following the AEMP ISO 15143-3 standard.

         <b>Rate limit:</b> 5 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read AEMP** under the Equipment category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        page_number : str
            The number corresponding to a specific page of paginated results, defaulting to the first page if not provided. The default page size is 100 records.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        AempEquipmentGetAempEquipmentListResponseBody
            OK response.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.get_aemp_equipment_list(
            page_number="pageNumber",
        )
        """
        _response = self._raw_client.get_aemp_equipment_list(page_number, request_options=request_options)
        return _response.data

    def get_driver_efficiency(
        self,
        *,
        driver_activation_status: typing.Optional[GetDriverEfficiencyRequestDriverActivationStatus] = None,
        driver_ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        after: typing.Optional[str] = None,
        driver_tag_ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        driver_parent_tag_ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        start_time: typing.Optional[dt.datetime] = None,
        end_time: typing.Optional[dt.datetime] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> DriverEfficienciesResponse:
        """
        Get all driver and associated vehicle efficiency data.

         This is a legacy endpoint, consider using this endpoint [/driver-efficiency/drivers](https://developers.samsara.com/reference/getdriverefficiencybydrivers) instead. The endpoint will continue to function as documented.

         <b>Rate limit:</b> 50 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        To use this endpoint, select **Read Fuel & Energy** under the Fuel & Energy category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>

        Parameters
        ----------
        driver_activation_status : typing.Optional[GetDriverEfficiencyRequestDriverActivationStatus]
            If value is `deactivated`, only drivers that are deactivated will appear in the response. This parameter will default to `active` if not provided (fetching only active drivers).

        driver_ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            A filter on the data based on this comma-separated list of driver IDs. Cannot be used with tag filtering or driver status. Example: `driverIds=1234,5678`

        after : typing.Optional[str]
            If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        driver_tag_ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            Filters summary to drivers based on this comma-separated list of tag IDs. Data from all the drivers' respective vehicles will be included in the summary, regardless of which tag the vehicle is associated with. Should not be provided in addition to `driverIds`. Example: driverTagIds=1234,5678

        driver_parent_tag_ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            Filters like `driverTagIds` but includes descendants of all the given parent tags. Should not be provided in addition to `driverIds`. Example: `driverParentTagIds=1234,5678`

        start_time : typing.Optional[dt.datetime]
            A start time in RFC 3339 format. The results will be truncated to the hour mark for the provided time. For example, if `startTime` is 2020-03-17T12:06:19Z then the results will include data starting from 2020-03-17T12:00:00Z. The provided start time cannot be in the future. Start time can be at most 31 days before the end time. If the start time is within the last hour, the results will be empty. Default: 24 hours prior to endTime.

            Note that the most recent 72 hours of data may still be processing and is subject to change and latency, so it is not recommended to request data for the most recent 72 hours.

        end_time : typing.Optional[dt.datetime]
            An end time in RFC 3339 format. The results will be truncated to the hour mark for the provided time. For example, if `endTime` is 2020-03-17T12:06:19Z then the results will include data up until 2020-03-17T12:00:00Z. The provided end time cannot be in the future. End time can be at most 31 days after the start time. Default: The current time truncated to the hour mark.

            Note that the most recent 72 hours of data may still be processing and is subject to change and latency, so it is not recommended to request data for the most recent 72 hours

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        DriverEfficienciesResponse
            List of all driver and associated vehicle efficiency data

        Examples
        --------
        import datetime

        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.get_driver_efficiency(
            driver_activation_status="active",
            after="after",
            start_time=datetime.datetime.fromisoformat(
                "2024-01-15 09:30:00+00:00",
            ),
            end_time=datetime.datetime.fromisoformat(
                "2024-01-15 09:30:00+00:00",
            ),
        )
        """
        _response = self._raw_client.get_driver_efficiency(
            driver_activation_status=driver_activation_status,
            driver_ids=driver_ids,
            after=after,
            driver_tag_ids=driver_tag_ids,
            driver_parent_tag_ids=driver_parent_tag_ids,
            start_time=start_time,
            end_time=end_time,
            request_options=request_options,
        )
        return _response.data

    def patch_equipment(
        self,
        id: str,
        *,
        attributes: typing.Optional[typing.Sequence[GoaAttributeTiny]] = OMIT,
        engine_hours: typing.Optional[int] = OMIT,
        equipment_serial_number: typing.Optional[str] = OMIT,
        external_ids: typing.Optional[typing.Dict[str, str]] = OMIT,
        equipment_patch_equipment_request_body_id: typing.Optional[str] = OMIT,
        name: typing.Optional[str] = OMIT,
        notes: typing.Optional[str] = OMIT,
        odometer_meters: typing.Optional[int] = OMIT,
        tag_ids: typing.Optional[typing.Sequence[str]] = OMIT,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> EquipmentPatchEquipmentResponseBody:
        """
        Update an equipment.  **Note** this implementation of patch uses [the JSON merge patch](https://tools.ietf.org/html/rfc7396) proposed standard.
         This means that any fields included in the patch request will _overwrite_ fields which exist on the target resource.
         For arrays, this means any array included in the request will _replace_ the array that exists at the specified path, it will not _add_ to the existing array

         <b>Rate limit:</b> 100 requests/min (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write Equipment** under the Equipment category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        id : str
            The unique Samsara ID of the Equipment. This is automatically generated when the Equipment object is created. It cannot be changed.

        attributes : typing.Optional[typing.Sequence[GoaAttributeTiny]]
            List of attributes associated with the entity

        engine_hours : typing.Optional[int]
            When you provide a manual engine hours override, Samsara will begin updating a equipment's engine hours used since this override was set.

        equipment_serial_number : typing.Optional[str]
            The serial number of the equipment.

        external_ids : typing.Optional[typing.Dict[str, str]]
            A map of external ids

        equipment_patch_equipment_request_body_id : typing.Optional[str]
            The unique Samsara ID of the Equipment. This is automatically generated when the Equipment object is created. It cannot be changed.

        name : typing.Optional[str]
            The human-readable name of the Equipment. This is set by a fleet administrator and will appear in both Samsara’s cloud dashboard as well as the Samsara Driver mobile app. By default, this name is the serial number of the Samsara Asset Gateway. It can be set or updated through the Samsara Dashboard or through the API at any time.

        notes : typing.Optional[str]
            These are generic notes about the Equipment. Empty by default. Can be set or updated through the Samsara Dashboard or the API at any time.

        odometer_meters : typing.Optional[int]
            When you provide a manual odometer override, Samsara will begin updating a equipment's odometer using GPS distance traveled since this override was set.

        tag_ids : typing.Optional[typing.Sequence[str]]
            An array of IDs of tags to associate with this equipment. If your access to the API is scoped by one or more tags, this field is required to pass in.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        EquipmentPatchEquipmentResponseBody
            OK response.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.patch_equipment(
            id="id",
        )
        """
        _response = self._raw_client.patch_equipment(
            id,
            attributes=attributes,
            engine_hours=engine_hours,
            equipment_serial_number=equipment_serial_number,
            external_ids=external_ids,
            equipment_patch_equipment_request_body_id=equipment_patch_equipment_request_body_id,
            name=name,
            notes=notes,
            odometer_meters=odometer_meters,
            tag_ids=tag_ids,
            request_options=request_options,
        )
        return _response.data

    def get_hos_eld_events(
        self,
        *,
        start_time: str,
        end_time: str,
        driver_ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        tag_ids: typing.Optional[str] = None,
        parent_tag_ids: typing.Optional[str] = None,
        driver_activation_status: typing.Optional[GetHosEldEventsRequestDriverActivationStatus] = None,
        after: typing.Optional[str] = None,
        limit: typing.Optional[int] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> HosEldEventsGetHosEldEventsResponseBody:
        """
        Get all HOS ELD events in a time range, grouped by driver. Attributes will be populated depending on which ELD Event Type is being returned.

         <b>Rate limit:</b> 5 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read ELD Compliance Settings (US)** under the Compliance category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        start_time : str
             A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).

        end_time : str
             An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).

        driver_ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
             A filter on the data based on this comma-separated list of driver IDs and externalIds. Example: `driverIds=1234,5678,payroll:4841`

        tag_ids : typing.Optional[str]
             A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`

        parent_tag_ids : typing.Optional[str]
             A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`

        driver_activation_status : typing.Optional[GetHosEldEventsRequestDriverActivationStatus]
            If value is `deactivated`, only drivers that are deactivated will appear in the response. This parameter will default to `active` if not provided (fetching only active drivers).  Valid values: `active`, `deactivated`

        after : typing.Optional[str]
             If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        limit : typing.Optional[int]
            The limit for how many objects will be in the response. Default and max for this value is 25 objects.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        HosEldEventsGetHosEldEventsResponseBody
            OK response.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.get_hos_eld_events(
            start_time="startTime",
            end_time="endTime",
            tag_ids="tagIds",
            parent_tag_ids="parentTagIds",
            driver_activation_status="active",
            after="after",
            limit=1,
        )
        """
        _response = self._raw_client.get_hos_eld_events(
            start_time=start_time,
            end_time=end_time,
            driver_ids=driver_ids,
            tag_ids=tag_ids,
            parent_tag_ids=parent_tag_ids,
            driver_activation_status=driver_activation_status,
            after=after,
            limit=limit,
            request_options=request_options,
        )
        return _response.data

    def get_trailer_stats_snapshot(
        self,
        *,
        types: str,
        tag_ids: typing.Optional[str] = None,
        parent_tag_ids: typing.Optional[str] = None,
        after: typing.Optional[str] = None,
        trailer_ids: typing.Optional[str] = None,
        time: typing.Optional[str] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> TrailerStatsGetTrailerStatsSnapshotResponseBody:
        """
        Returns the last known stats of all trailers at the given `time`. If no `time` is specified, the current time is used.

         <b>Rate limit:</b> 25 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Trailer Statistics** under the Trailers category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        types : str
            The stat types you want this endpoint to return information on.

            You may list **up to 3** types using comma-separated format. For example: `types=gps,reeferAmbientAirTemperatureMilliC,gpsOdometerMeters`.

            * `gps`: GPS data including lat/long, heading, speed, and a reverse geocode address.
            * `gpsOdometerMeters`: Odometer reading provided by GPS calculations. You must provide a manual odometer reading before this value is updated. Manual odometer readings can be provided via the PATCH /fleet/trailers/{id} endpoint or through the [cloud dashboard](https://kb.samsara.com/hc/en-us/articles/115005273667-Editing-Odometer-Reading). Odometer readings wthat are manually set will update as GPS trip data is gathered.
            * `reeferAmbientAirTemperatureMilliC`: The ambient air temperature reading of the reefer in millidegree Celsius.
            * `reeferObdEngineSeconds`: The cumulative number of seconds the reefer has run according to onboard diagnostics. Only supported on reefer solutions.
            * `reeferSupplyAirTemperatureMilliCZone1`: The supply or discharge air temperature zone 1 in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.
            * `reeferSupplyAirTemperatureMilliCZone2`: The supply or discharge air temperature zone 2 in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferSupplyAirTemperatureMilliCZone3`: The supply or discharge air temperature zone 3 in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferFuelPercent`: The fuel level of the reefer unit in percentage points (e.g. `99`, `50`, etc). Only supported on reefer solutions.
            * `carrierReeferState`: The overall state of the reefer (`Off`, `On`). Only supported on multizone Carrier reefer solutions.
            * `reeferStateZone1`: The state of the reefer in zone 1. For single zone reefers, this applies tot he single zone. Only supported on multizone reefer solutions.
            * `reeferStateZone2`: The state of the reefer in zone 2. Only supported on multizone reefer solutions.
            * `reeferStateZone3`: The state of the reefer in zone 3. Only supported on multizone reefer solutions.
            * `reeferRunMode`: The operational mode of the reefer (`Start/Stop`, `Continuous`)
            * `reeferAlarms`: Any alarms that are present on the reefer. Only supported on reefer solutions.
            * `reeferReturnAirTemperatureMilliCZone1`: The return air temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.
            * `reeferReturnAirTemperatureMilliCZone2`: The return air temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferReturnAirTemperatureMilliCZone3`: The return air temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferSetPointTemperatureMilliCZone1`: The set point temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.
            * `reeferSetPointTemperatureMilliCZone2`: The set point temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferSetPointTemperatureMilliCZone3`: The set point temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferDoorStateZone1`: The door status in zone 1 of the reefer. For single zone reefers, this applies to the single zone.
            * `reeferDoorStateZone2`: The door status in zone 2 of the reefer. Only supported on multizone reefer solutions.
            * `reeferDoorStateZone3`: The door status in zone 3 of the reefer. Only supported on multizone reefer solutions.

        tag_ids : typing.Optional[str]
             A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`

        parent_tag_ids : typing.Optional[str]
             A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`

        after : typing.Optional[str]
             If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        trailer_ids : typing.Optional[str]
             A filter on the data based on this comma-separated list of trailer IDs and externalIds. Example: `trailerIds=1234,5678,samsara.vin:1HGBH41JXMN109186`

        time : typing.Optional[str]
             A filter on the data that returns the last known data points with timestamps less than or equal to this value. Defaults to now if not provided. Must be a string in RFC 3339 Format. Millisecond precision and timezones are supported.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        TrailerStatsGetTrailerStatsSnapshotResponseBody
            OK response.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.get_trailer_stats_snapshot(
            types="types",
            tag_ids="tagIds",
            parent_tag_ids="parentTagIds",
            after="after",
            trailer_ids="trailerIds",
            time="time",
        )
        """
        _response = self._raw_client.get_trailer_stats_snapshot(
            types=types,
            tag_ids=tag_ids,
            parent_tag_ids=parent_tag_ids,
            after=after,
            trailer_ids=trailer_ids,
            time=time,
            request_options=request_options,
        )
        return _response.data

    def get_trailer_stats_feed(
        self,
        *,
        types: str,
        tag_ids: typing.Optional[str] = None,
        parent_tag_ids: typing.Optional[str] = None,
        after: typing.Optional[str] = None,
        trailer_ids: typing.Optional[str] = None,
        decorations: typing.Optional[str] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> TrailerStatsGetTrailerStatsFeedResponseBody:
        """
        Follow a feed of trailer stats.

        The first call to this endpoint will provide the most recent stats for each trailer and an `endCursor`.

        Providing the `endCursor` value to the `after` query parameter will fetch all updates since the previous API call.

        If `hasNextPage` is false, no new data is immediately available. Please wait a minimum of 5 seconds before making a subsequent request.

         <b>Rate limit:</b> 25 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Trailer Statistics** under the Trailers category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        types : str
            The stat types you want this endpoint to return information on.

            You may list **up to 3** types using comma-separated format. For example: `types=gps,reeferAmbientAirTemperatureMilliC,gpsOdometerMeters`.

            * `gps`: GPS data including lat/long, heading, speed, and a reverse geocode address.
            * `gpsOdometerMeters`: Odometer reading provided by GPS calculations. You must provide a manual odometer reading before this value is updated. Manual odometer readings can be provided via the PATCH /fleet/trailers/{id} endpoint or through the [cloud dashboard](https://kb.samsara.com/hc/en-us/articles/115005273667-Editing-Odometer-Reading). Odometer readings wthat are manually set will update as GPS trip data is gathered.
            * `reeferAmbientAirTemperatureMilliC`: The ambient air temperature reading of the reefer in millidegree Celsius.
            * `reeferObdEngineSeconds`: The cumulative number of seconds the reefer has run according to onboard diagnostics. Only supported on reefer solutions.
            * `reeferSupplyAirTemperatureMilliCZone1`: The supply or discharge air temperature zone 1 in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.
            * `reeferSupplyAirTemperatureMilliCZone2`: The supply or discharge air temperature zone 2 in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferSupplyAirTemperatureMilliCZone3`: The supply or discharge air temperature zone 3 in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferFuelPercent`: The fuel level of the reefer unit in percentage points (e.g. `99`, `50`, etc). Only supported on reefer solutions.
            * `carrierReeferState`: The overall state of the reefer (`Off`, `On`). Only supported on multizone Carrier reefer solutions.
            * `reeferStateZone1`: The state of the reefer in zone 1. For single zone reefers, this applies tot he single zone. Only supported on multizone reefer solutions.
            * `reeferStateZone2`: The state of the reefer in zone 2. Only supported on multizone reefer solutions.
            * `reeferStateZone3`: The state of the reefer in zone 3. Only supported on multizone reefer solutions.
            * `reeferRunMode`: The operational mode of the reefer (`Start/Stop`, `Continuous`)
            * `reeferAlarms`: Any alarms that are present on the reefer. Only supported on reefer solutions.
            * `reeferReturnAirTemperatureMilliCZone1`: The return air temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.
            * `reeferReturnAirTemperatureMilliCZone2`: The return air temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferReturnAirTemperatureMilliCZone3`: The return air temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferSetPointTemperatureMilliCZone1`: The set point temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.
            * `reeferSetPointTemperatureMilliCZone2`: The set point temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferSetPointTemperatureMilliCZone3`: The set point temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferDoorStateZone1`: The door status in zone 1 of the reefer. For single zone reefers, this applies to the single zone.
            * `reeferDoorStateZone2`: The door status in zone 2 of the reefer. Only supported on multizone reefer solutions.
            * `reeferDoorStateZone3`: The door status in zone 3 of the reefer. Only supported on multizone reefer solutions.

        tag_ids : typing.Optional[str]
             A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`

        parent_tag_ids : typing.Optional[str]
             A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`

        after : typing.Optional[str]
             If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        trailer_ids : typing.Optional[str]
             A filter on the data based on this comma-separated list of trailer IDs and externalIds. Example: `trailerIds=1234,5678,samsara.vin:1HGBH41JXMN109186`

        decorations : typing.Optional[str]
            Decorations add to the primary stats listed in the `types` parameter. For example, if you wish to know the trailer's location whenever the odometer updates, you may set `types=gpsOdometerMeters&decorations=gps`.

            You may list **up to 2** types using comma-separated format. If multiple stats are listed in the types parameter, the decorations will be added to each type. For example: `types=reeferStateZone1,reeferAmbientAirTemperatureMilliC,gpsOdometerMeters&decorations=gps` will list GPS decorations for each reeferStateZone1 reading, each reeferAmbientAirTemperatureMilliC reding, and gpsOdometerMeters reading.

            Note that decorations may significantly increase the response payload size.

            * `gps`: GPS data including lat/long, heading, speed, and a reverse geocode address.
            * `gpsOdometerMeters`: Odometer reading provided by GPS calculations. You must provide a manual odometer reading before this value is updated. Manual odometer readings can be provided via the PATCH /fleet/trailers/{id} endpoint or through the [cloud dashboard](https://kb.samsara.com/hc/en-us/articles/115005273667-Editing-Odometer-Reading). Odometer readings wthat are manually set will update as GPS trip data is gathered.
            * `reeferAmbientAirTemperatureMilliC`: The ambient air temperature reading of the reefer in millidegree Celsius.
            * `reeferObdEngineSeconds`: The cumulative number of seconds the reefer has run according to onboard diagnostics. Only supported on reefer solutions.
            * `reeferSupplyAirTemperatureMilliCZone1`: The supply or discharge air temperature zone 1 in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.
            * `reeferSupplyAirTemperatureMilliCZone2`: The supply or discharge air temperature zone 2 in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferSupplyAirTemperatureMilliCZone3`: The supply or discharge air temperature zone 3 in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferFuelPercent`: The fuel level of the reefer unit in percentage points (e.g. `99`, `50`, etc). Only supported on reefer solutions.
            * `carrierReeferState`: The overall state of the reefer (`Off`, `On`). Only supported on multizone Carrier reefer solutions.
            * `reeferStateZone1`: The state of the reefer in zone 1. For single zone reefers, this applies tot he single zone. Only supported on multizone reefer solutions.
            * `reeferStateZone2`: The state of the reefer in zone 2. Only supported on multizone reefer solutions.
            * `reeferStateZone3`: The state of the reefer in zone 3. Only supported on multizone reefer solutions.
            * `reeferRunMode`: The operational mode of the reefer (`Start/Stop`, `Continuous`)
            * `reeferAlarms`: Any alarms that are present on the reefer. Only supported on reefer solutions.
            * `reeferReturnAirTemperatureMilliCZone1`: The return air temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.
            * `reeferReturnAirTemperatureMilliCZone2`: The return air temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferReturnAirTemperatureMilliCZone3`: The return air temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferSetPointTemperatureMilliCZone1`: The set point temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.
            * `reeferSetPointTemperatureMilliCZone2`: The set point temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferSetPointTemperatureMilliCZone3`: The set point temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferDoorStateZone1`: The door status in zone 1 of the reefer. For single zone reefers, this applies to the single zone.
            * `reeferDoorStateZone2`: The door status in zone 2 of the reefer. Only supported on multizone reefer solutions.
            * `reeferDoorStateZone3`: The door status in zone 3 of the reefer. Only supported on multizone reefer solutions.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        TrailerStatsGetTrailerStatsFeedResponseBody
            OK response.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.get_trailer_stats_feed(
            types="types",
            tag_ids="tagIds",
            parent_tag_ids="parentTagIds",
            after="after",
            trailer_ids="trailerIds",
            decorations="decorations",
        )
        """
        _response = self._raw_client.get_trailer_stats_feed(
            types=types,
            tag_ids=tag_ids,
            parent_tag_ids=parent_tag_ids,
            after=after,
            trailer_ids=trailer_ids,
            decorations=decorations,
            request_options=request_options,
        )
        return _response.data

    def get_trailer_stats_history(
        self,
        *,
        start_time: str,
        end_time: str,
        types: str,
        tag_ids: typing.Optional[str] = None,
        parent_tag_ids: typing.Optional[str] = None,
        after: typing.Optional[str] = None,
        trailer_ids: typing.Optional[str] = None,
        decorations: typing.Optional[str] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> TrailerStatsGetTrailerStatsHistoryResponseBody:
        """
        Returns trailer stats during the given time range for all trailers. This can be optionally filtered by tags or specific trailer IDs.

         <b>Rate limit:</b> 10 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Trailer Statistics** under the Trailers category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        start_time : str
             A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).

        end_time : str
             An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).

        types : str
            The stat types you want this endpoint to return information on.

            You may list **up to 3** types using comma-separated format. For example: `types=gps,reeferAmbientAirTemperatureMilliC,gpsOdometerMeters`.

            * `gps`: GPS data including lat/long, heading, speed, and a reverse geocode address.
            * `gpsOdometerMeters`: Odometer reading provided by GPS calculations. You must provide a manual odometer reading before this value is updated. Manual odometer readings can be provided via the PATCH /fleet/trailers/{id} endpoint or through the [cloud dashboard](https://kb.samsara.com/hc/en-us/articles/115005273667-Editing-Odometer-Reading). Odometer readings wthat are manually set will update as GPS trip data is gathered.
            * `reeferAmbientAirTemperatureMilliC`: The ambient air temperature reading of the reefer in millidegree Celsius.
            * `reeferObdEngineSeconds`: The cumulative number of seconds the reefer has run according to onboard diagnostics. Only supported on reefer solutions.
            * `reeferSupplyAirTemperatureMilliCZone1`: The supply or discharge air temperature zone 1 in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.
            * `reeferSupplyAirTemperatureMilliCZone2`: The supply or discharge air temperature zone 2 in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferSupplyAirTemperatureMilliCZone3`: The supply or discharge air temperature zone 3 in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferFuelPercent`: The fuel level of the reefer unit in percentage points (e.g. `99`, `50`, etc). Only supported on reefer solutions.
            * `carrierReeferState`: The overall state of the reefer (`Off`, `On`). Only supported on multizone Carrier reefer solutions.
            * `reeferStateZone1`: The state of the reefer in zone 1. For single zone reefers, this applies tot he single zone. Only supported on multizone reefer solutions.
            * `reeferStateZone2`: The state of the reefer in zone 2. Only supported on multizone reefer solutions.
            * `reeferStateZone3`: The state of the reefer in zone 3. Only supported on multizone reefer solutions.
            * `reeferRunMode`: The operational mode of the reefer (`Start/Stop`, `Continuous`)
            * `reeferAlarms`: Any alarms that are present on the reefer. Only supported on reefer solutions.
            * `reeferReturnAirTemperatureMilliCZone1`: The return air temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.
            * `reeferReturnAirTemperatureMilliCZone2`: The return air temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferReturnAirTemperatureMilliCZone3`: The return air temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferSetPointTemperatureMilliCZone1`: The set point temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.
            * `reeferSetPointTemperatureMilliCZone2`: The set point temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferSetPointTemperatureMilliCZone3`: The set point temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferDoorStateZone1`: The door status in zone 1 of the reefer. For single zone reefers, this applies to the single zone.
            * `reeferDoorStateZone2`: The door status in zone 2 of the reefer. Only supported on multizone reefer solutions.
            * `reeferDoorStateZone3`: The door status in zone 3 of the reefer. Only supported on multizone reefer solutions.

        tag_ids : typing.Optional[str]
             A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`

        parent_tag_ids : typing.Optional[str]
             A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`

        after : typing.Optional[str]
             If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        trailer_ids : typing.Optional[str]
             A filter on the data based on this comma-separated list of trailer IDs and externalIds. Example: `trailerIds=1234,5678,samsara.vin:1HGBH41JXMN109186`

        decorations : typing.Optional[str]
            Decorations add to the primary stats listed in the `types` parameter. For example, if you wish to know the trailer's location whenever the odometer updates, you may set `types=gpsOdometerMeters&decorations=gps`.

            You may list **up to 2** types using comma-separated format. If multiple stats are listed in the types parameter, the decorations will be added to each type. For example: `types=reeferStateZone1,reeferAmbientAirTemperatureMilliC,gpsOdometerMeters&decorations=gps` will list GPS decorations for each reeferStateZone1 reading, each reeferAmbientAirTemperatureMilliC reding, and gpsOdometerMeters reading.

            Note that decorations may significantly increase the response payload size.

            * `gps`: GPS data including lat/long, heading, speed, and a reverse geocode address.
            * `gpsOdometerMeters`: Odometer reading provided by GPS calculations. You must provide a manual odometer reading before this value is updated. Manual odometer readings can be provided via the PATCH /fleet/trailers/{id} endpoint or through the [cloud dashboard](https://kb.samsara.com/hc/en-us/articles/115005273667-Editing-Odometer-Reading). Odometer readings wthat are manually set will update as GPS trip data is gathered.
            * `reeferAmbientAirTemperatureMilliC`: The ambient air temperature reading of the reefer in millidegree Celsius.
            * `reeferObdEngineSeconds`: The cumulative number of seconds the reefer has run according to onboard diagnostics. Only supported on reefer solutions.
            * `reeferSupplyAirTemperatureMilliCZone1`: The supply or discharge air temperature zone 1 in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.
            * `reeferSupplyAirTemperatureMilliCZone2`: The supply or discharge air temperature zone 2 in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferSupplyAirTemperatureMilliCZone3`: The supply or discharge air temperature zone 3 in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferFuelPercent`: The fuel level of the reefer unit in percentage points (e.g. `99`, `50`, etc). Only supported on reefer solutions.
            * `carrierReeferState`: The overall state of the reefer (`Off`, `On`). Only supported on multizone Carrier reefer solutions.
            * `reeferStateZone1`: The state of the reefer in zone 1. For single zone reefers, this applies tot he single zone. Only supported on multizone reefer solutions.
            * `reeferStateZone2`: The state of the reefer in zone 2. Only supported on multizone reefer solutions.
            * `reeferStateZone3`: The state of the reefer in zone 3. Only supported on multizone reefer solutions.
            * `reeferRunMode`: The operational mode of the reefer (`Start/Stop`, `Continuous`)
            * `reeferAlarms`: Any alarms that are present on the reefer. Only supported on reefer solutions.
            * `reeferReturnAirTemperatureMilliCZone1`: The return air temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.
            * `reeferReturnAirTemperatureMilliCZone2`: The return air temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferReturnAirTemperatureMilliCZone3`: The return air temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferSetPointTemperatureMilliCZone1`: The set point temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.
            * `reeferSetPointTemperatureMilliCZone2`: The set point temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferSetPointTemperatureMilliCZone3`: The set point temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferDoorStateZone1`: The door status in zone 1 of the reefer. For single zone reefers, this applies to the single zone.
            * `reeferDoorStateZone2`: The door status in zone 2 of the reefer. Only supported on multizone reefer solutions.
            * `reeferDoorStateZone3`: The door status in zone 3 of the reefer. Only supported on multizone reefer solutions.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        TrailerStatsGetTrailerStatsHistoryResponseBody
            OK response.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.get_trailer_stats_history(
            start_time="startTime",
            end_time="endTime",
            types="types",
            tag_ids="tagIds",
            parent_tag_ids="parentTagIds",
            after="after",
            trailer_ids="trailerIds",
            decorations="decorations",
        )
        """
        _response = self._raw_client.get_trailer_stats_history(
            start_time=start_time,
            end_time=end_time,
            types=types,
            tag_ids=tag_ids,
            parent_tag_ids=parent_tag_ids,
            after=after,
            trailer_ids=trailer_ids,
            decorations=decorations,
            request_options=request_options,
        )
        return _response.data

    def update_engine_immobilizer_state(
        self,
        id: int,
        *,
        relay_states: typing.Sequence[UpdateEngineImmobilizerRelayStateRequestBodyRequestBody],
        request_options: typing.Optional[RequestOptions] = None,
    ) -> None:
        """
        Update the engine immobilizer state of a vehicle. This requires an engine immobilizer to be installed on the vehicle gateway.

         <b>Rate limit:</b> 100 requests/min (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write Vehicle Immobilization** under the Vehicles category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        id : int
            Vehicle ID

        relay_states : typing.Sequence[UpdateEngineImmobilizerRelayStateRequestBodyRequestBody]
            A list of relay states. If a relay is omitted, its state won't be updated. If the list is empty, a 400 bad request status code will be returned. If there are multiple states for the same relay, a 400 bad request status code will be returned.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        None

        Examples
        --------
        from samsara import Samsara
        from samsara.v_20250611 import (
            UpdateEngineImmobilizerRelayStateRequestBodyRequestBody,
        )

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.update_engine_immobilizer_state(
            id=1000000,
            relay_states=[
                UpdateEngineImmobilizerRelayStateRequestBodyRequestBody(
                    id="relay1",
                    is_open=True,
                )
            ],
        )
        """
        _response = self._raw_client.update_engine_immobilizer_state(
            id, relay_states=relay_states, request_options=request_options
        )
        return _response.data

    def get_jobs(
        self,
        *,
        id: typing.Optional[str] = None,
        start_date: typing.Optional[str] = None,
        end_date: typing.Optional[str] = None,
        industrial_asset_ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        fleet_device_ids: typing.Optional[typing.Union[int, typing.Sequence[int]]] = None,
        status: typing.Optional[GetJobsRequestStatus] = None,
        customer_name: typing.Optional[str] = None,
        after: typing.Optional[str] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> JobsGetJobsResponseBody:
        """
        Fetches jobs based on id/uuid or provided filters.

        To use this endpoint, select **Read Jobs** under the Equipment category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        id : typing.Optional[str]
            A jobId or uuid in STRING format. JobId must be prefixed with `jobId:`(Examples: `"8d218e6c-7a16-4f9f-90f7-cc1d93b9e596"`, `"jobId:98765"`).

        start_date : typing.Optional[str]
             A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).

        end_date : typing.Optional[str]
             An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).

        industrial_asset_ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            IndustrialAssetId in STRING format. (Example: `"8d218e6c-7a16-4f9f-90f7-cc1d93b9e596"`).

        fleet_device_ids : typing.Optional[typing.Union[int, typing.Sequence[int]]]
            FleetDeviceId in INTEGER format. (Example: `123456`).

        status : typing.Optional[GetJobsRequestStatus]
            A job status in STRING format. Job statuses can be one of three (ignores case): `"active", "scheduled", "completed"`  Valid values: `active`, `scheduled`, `completed`

        customer_name : typing.Optional[str]
            Customer name to filter by

        after : typing.Optional[str]
             If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        JobsGetJobsResponseBody
            OK response.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.get_jobs(
            id="id",
            start_date="startDate",
            end_date="endDate",
            status="active",
            customer_name="customerName",
            after="after",
        )
        """
        _response = self._raw_client.get_jobs(
            id=id,
            start_date=start_date,
            end_date=end_date,
            industrial_asset_ids=industrial_asset_ids,
            fleet_device_ids=fleet_device_ids,
            status=status,
            customer_name=customer_name,
            after=after,
            request_options=request_options,
        )
        return _response.data

    def create_job(
        self, *, job: PostJobObjectRequestBody, request_options: typing.Optional[RequestOptions] = None
    ) -> JobsCreateJobResponseBody:
        """
        Creates a new job and returns it.

        To use this endpoint, select **Write Jobs** under the Equipment category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        job : PostJobObjectRequestBody

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        JobsCreateJobResponseBody
            OK response.

        Examples
        --------
        from samsara import Samsara
        from samsara.v_20250611 import PostJobObjectRequestBody

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.create_job(
            job=PostJobObjectRequestBody(
                end_date="2019-06-13T19:08:25Z",
                id="8d218e6c-7a16-4f9f-90f7-cc1d93b9e596",
                name="My Job Name",
                start_date="2019-06-13T19:08:25Z",
            ),
        )
        """
        _response = self._raw_client.create_job(job=job, request_options=request_options)
        return _response.data

    def delete_job(
        self, *, id: str, request_options: typing.Optional[RequestOptions] = None
    ) -> JobsDeleteJobResponseBody:
        """
        Deletes an existing job.

        To use this endpoint, select **Write Jobs** under the Equipment category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        id : str
            A jobId or uuid in STRING format. JobId must be prefixed with `jobId:`(Examples: `"8d218e6c-7a16-4f9f-90f7-cc1d93b9e596"`, `"jobId:98765"`).

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        JobsDeleteJobResponseBody
            OK response.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.delete_job(
            id="id",
        )
        """
        _response = self._raw_client.delete_job(id=id, request_options=request_options)
        return _response.data

    def patch_job(
        self,
        *,
        id: str,
        job: PatchJobObjectRequestBody,
        keep_history: typing.Optional[bool] = OMIT,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> JobsPatchJobResponseBody:
        """
        Patches an existing job and returns it.

        To use this endpoint, select **Write Jobs** under the Equipment category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        id : str
            A jobId or uuid in STRING format. JobId must be prefixed with `jobId:`(Examples: `"8d218e6c-7a16-4f9f-90f7-cc1d93b9e596"`, `"jobId:98765"`).

        job : PatchJobObjectRequestBody

        keep_history : typing.Optional[bool]
            Defaults to true if user does not want to overwrite entire history for an active job (irrelevant for scheduled/completed jobs)

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        JobsPatchJobResponseBody
            OK response.

        Examples
        --------
        from samsara import Samsara
        from samsara.v_20250611 import PatchJobObjectRequestBody

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.patch_job(
            id="id",
            job=PatchJobObjectRequestBody(),
        )
        """
        _response = self._raw_client.patch_job(
            id=id, job=job, keep_history=keep_history, request_options=request_options
        )
        return _response.data

    def get_devices(
        self,
        *,
        models: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        health_statuses: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        include_health: typing.Optional[bool] = None,
        after: typing.Optional[str] = None,
        limit: typing.Optional[int] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> DevicesGetDevicesResponseBody:
        """
        Returns all installed cameras (CM3x), vehicle gateways (VGs), and asset gateways (AGs) and their health information within an organization.

        **Beta:** This endpoint is in beta and is likely to change before being broadly available. Reach out to your Samsara Representative to have Devices API enabled for your organization.

         <b>Rate limit:</b> 5 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Devices** under the Devices category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        models : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            Optional string of comma separated device models. Valid values: `CM31`, `CM32`, `CM33`, `CM34`, `VG34`, `VG34M`, `VG34EU`, `VG34FN`, `VG54NA`, `VG54EU`, `VG55NA`, `VG55EU`, `AG24`, `AG24EU`, `AG26`, `AG26EU`, `AG45`, `AG45EU`, `AG46`, `AG46EU`, `AG46P`, `AG46PEU`, `AG51`, `AG51EU`, `AG52`, `AG52EU`, `AG53`, `AG53EU`

        health_statuses : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            Optional string of comma separated device health statuses. Valid values: `healthy`, `needsAttention`, `needsReplacement`, `dataPending`.

        include_health : typing.Optional[bool]
            Optional boolean to control whether device health information is returned in the response. Defaults to false.

        after : typing.Optional[str]
             If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        limit : typing.Optional[int]
            The limit for how many objects will be in the response. Default and max for this value is 100 objects.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        DevicesGetDevicesResponseBody
            OK response.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.get_devices(
            include_health=True,
            after="after",
            limit=1,
        )
        """
        _response = self._raw_client.get_devices(
            models=models,
            health_statuses=health_statuses,
            include_health=include_health,
            after=after,
            limit=limit,
            request_options=request_options,
        )
        return _response.data

    def get_driver_trailer_assignments(
        self,
        *,
        driver_ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        after: typing.Optional[str] = None,
        include_external_ids: typing.Optional[bool] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> TrailerAssignmentsGetDriverTrailerAssignmentsResponseBody:
        """
        Get currently active driver-trailer assignments for driver.

         <b>Rate limit:</b> 5 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Assignments** under the Assignments category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        driver_ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
             A filter on the data based on this comma-separated list of driver IDs and externalIds. Example: `driverIds=1234,5678,payroll:4841`

        after : typing.Optional[str]
             If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        include_external_ids : typing.Optional[bool]
            Optional boolean indicating whether to return external IDs on supported entities

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        TrailerAssignmentsGetDriverTrailerAssignmentsResponseBody
            OK response.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.get_driver_trailer_assignments()
        """
        _response = self._raw_client.get_driver_trailer_assignments(
            driver_ids=driver_ids,
            after=after,
            include_external_ids=include_external_ids,
            request_options=request_options,
        )
        return _response.data

    def create_driver_trailer_assignment(
        self,
        *,
        driver_id: str,
        trailer_id: str,
        start_time: typing.Optional[str] = OMIT,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> TrailerAssignmentsCreateDriverTrailerAssignmentResponseBody:
        """
        Create a new driver-trailer assignment

         <b>Rate limit:</b> 5 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write Assignments** under the Assignments category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        driver_id : str
            ID of the driver. This can be either a unique Samsara ID or an [external ID](https://developers.samsara.com/docs/external-ids) for the driver.

        trailer_id : str
            ID of the trailer. This can be either a unique Samsara ID or an [external ID](https://developers.samsara.com/docs/external-ids) for the trailer.

        start_time : typing.Optional[str]
            The start time in RFC 3339 format. The time needs to be current or within the past 7 days. Defaults to now if not provided

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        TrailerAssignmentsCreateDriverTrailerAssignmentResponseBody
            OK response.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.create_driver_trailer_assignment(
            driver_id="494123",
            trailer_id="12345",
        )
        """
        _response = self._raw_client.create_driver_trailer_assignment(
            driver_id=driver_id, trailer_id=trailer_id, start_time=start_time, request_options=request_options
        )
        return _response.data

    def update_driver_trailer_assignment(
        self, *, id: str, end_time: str, request_options: typing.Optional[RequestOptions] = None
    ) -> TrailerAssignmentsUpdateDriverTrailerAssignmentResponseBody:
        """
        Update an existing driver-trailer assignment.

         <b>Rate limit:</b> 5 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write Assignments** under the Assignments category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        id : str
            Samsara ID for the assignment.

        end_time : str
            The end time in RFC 3339 format. The end time should not be in the future

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        TrailerAssignmentsUpdateDriverTrailerAssignmentResponseBody
            OK response.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.update_driver_trailer_assignment(
            id="id",
            end_time="2019-06-13T19:08:25Z",
        )
        """
        _response = self._raw_client.update_driver_trailer_assignment(
            id=id, end_time=end_time, request_options=request_options
        )
        return _response.data

    def get_engine_immobilizer_states(
        self,
        *,
        vehicle_ids: str,
        start_time: str,
        end_time: typing.Optional[str] = None,
        after: typing.Optional[str] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> EngineImmobilizerGetEngineImmobilizerStatesResponseBody:
        """
        Get the engine immobilizer states of the queried vehicles. If a vehicle has never had an engine immobilizer connected, there won't be any state returned for that vehicle.

         <b>Rate limit:</b> 5 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Vehicle Immobilization** under the Vehicles category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        vehicle_ids : str
             A filter on the data based on this comma-separated list of vehicle IDs and externalIds. Example: `vehicleIds=1234,5678,samsara.vin:1HGBH41JXMN109186`

        start_time : str
            A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).

        end_time : typing.Optional[str]
             An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).

        after : typing.Optional[str]
             If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        EngineImmobilizerGetEngineImmobilizerStatesResponseBody
            OK response.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.get_engine_immobilizer_states(
            vehicle_ids="vehicleIds",
            start_time="startTime",
            end_time="endTime",
            after="after",
        )
        """
        _response = self._raw_client.get_engine_immobilizer_states(
            vehicle_ids=vehicle_ids,
            start_time=start_time,
            end_time=end_time,
            after=after,
            request_options=request_options,
        )
        return _response.data

    def start_function_run(
        self,
        name: str,
        *,
        params_override: FunctionsStartFunctionRunRequestBodyParamsOverride,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> FunctionsStartFunctionRunResponseBody:
        """
        Start an asynchronous run for the specified Function. This endpoint allows you to override parameters available at runtime.

         <b>Rate limit:</b> 2 requests/min (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write Functions** under the Closed Beta category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        name : str
            The name of the Function to run.

        params_override : FunctionsStartFunctionRunRequestBodyParamsOverride
            Parameter overrides for the Function execution. Can be an empty object but must be provided.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        FunctionsStartFunctionRunResponseBody
            OK response.

        Examples
        --------
        from samsara import Samsara
        from samsara.v_20250611.beta_ap_is import (
            FunctionsStartFunctionRunRequestBodyParamsOverride,
        )

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.start_function_run(
            name="name",
            params_override=FunctionsStartFunctionRunRequestBodyParamsOverride(),
        )
        """
        _response = self._raw_client.start_function_run(
            name, params_override=params_override, request_options=request_options
        )
        return _response.data

    def update_shipping_docs(
        self,
        *,
        hos_date: str,
        driver_id: str,
        shipping_docs: str,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> HosDailyLogsUpdateShippingDocsResponseBody:
        """
        Update the shippingDocs field of an existing assignment.

         <b>Rate limit:</b> 5 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write ELD Hours of Service (US)** under the Compliance category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        hos_date : str
            A start date in yyyy-mm-dd format. Required.

        driver_id : str
            ID of the driver for whom the duty status is being set.

        shipping_docs : str
            ShippingDocs associated with the driver for the day.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        HosDailyLogsUpdateShippingDocsResponseBody
            OK response.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.update_shipping_docs(
            hos_date="hosDate",
            driver_id="driverID",
            shipping_docs="ShippingID1, ShippingID2",
        )
        """
        _response = self._raw_client.update_shipping_docs(
            hos_date=hos_date, driver_id=driver_id, shipping_docs=shipping_docs, request_options=request_options
        )
        return _response.data

    def list_hub_capacities(
        self,
        *,
        hub_id: str,
        capacity_ids: typing.Optional[str] = None,
        capacity_names: typing.Optional[str] = None,
        start_time: typing.Optional[dt.datetime] = None,
        end_time: typing.Optional[dt.datetime] = None,
        after: typing.Optional[str] = None,
        limit: typing.Optional[int] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> HubCapacitiesListHubCapacitiesResponseBody:
        """
        Retrieve capacity types for a specific hub.

        **Beta:** This endpoint is in beta and is likely to change before being broadly available. Reach out to your Samsara Representative to have RoutePlanning APIs enabled for your organization.

         <b>Rate limit:</b> 10 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Routes** under the Driver Workflow category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        hub_id : str
            The hub identifier

        capacity_ids : typing.Optional[str]
            Comma-separated list of capacity IDs for filtering.

        capacity_names : typing.Optional[str]
            Comma-separated list of capacity names for filtering.

        start_time : typing.Optional[dt.datetime]
            Time filter of when the capacity was updated, in RFC 3339 format

        end_time : typing.Optional[dt.datetime]
            Time filter of when the capacity was updated, in RFC 3339 format

        after : typing.Optional[str]
            If specified, should be the endCursor from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        limit : typing.Optional[int]
            Maximum number of objects to return. Default and maximum is 100

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        HubCapacitiesListHubCapacitiesResponseBody
            OK response.

        Examples
        --------
        import datetime

        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.list_hub_capacities(
            hub_id="hubId",
            capacity_ids="capacityIds",
            capacity_names="capacityNames",
            start_time=datetime.datetime.fromisoformat(
                "2024-01-15 09:30:00+00:00",
            ),
            end_time=datetime.datetime.fromisoformat(
                "2024-01-15 09:30:00+00:00",
            ),
            after="after",
            limit=1,
        )
        """
        _response = self._raw_client.list_hub_capacities(
            hub_id=hub_id,
            capacity_ids=capacity_ids,
            capacity_names=capacity_names,
            start_time=start_time,
            end_time=end_time,
            after=after,
            limit=limit,
            request_options=request_options,
        )
        return _response.data

    def update_hub_location(
        self,
        id: str,
        *,
        data: UpdateHubLocationRequestBodyRequestBody,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> HubLocationsUpdateHubLocationResponseBody:
        """
        Update existing location by ID.

        **Beta:** This endpoint is in beta and is likely to change before being broadly available. Reach out to your Samsara Representative to have RoutePlanning APIs enabled for your organization.

         <b>Rate limit:</b> 100 requests/min (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write Routes** under the Driver Workflow category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        id : str
            The unique Samsara ID of the hub location to update

        data : UpdateHubLocationRequestBodyRequestBody

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        HubLocationsUpdateHubLocationResponseBody
            OK response.

        Examples
        --------
        from samsara import Samsara
        from samsara.v_20250611 import (
            HubLocationServiceWindowInputRequestBody,
            UpdateHubLocationRequestBodyRequestBody,
        )

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.update_hub_location(
            id="id",
            data=UpdateHubLocationRequestBodyRequestBody(
                address="123 Industrial Blvd, Los Angeles, CA 90210, US",
                customer_location_id="LOC-123",
                driver_instructions="sample instructions",
                is_depot=False,
                latitude=34.0522,
                longitude=-118.2437,
                name="Customer ABC Warehouse",
                planner_notes="sample note",
                service_time_seconds=1800,
                service_windows=[
                    HubLocationServiceWindowInputRequestBody(
                        days_of_week=[
                            "monday",
                            "tuesday",
                            "wednesday",
                            "thursday",
                            "friday",
                        ],
                        end_time="17:00:00",
                        start_time="08:00:00",
                    )
                ],
                skills_required=["650e8400-e29b-41d4-a716-446655440001"],
            ),
        )
        """
        _response = self._raw_client.update_hub_location(id, data=data, request_options=request_options)
        return _response.data

    def list_hub_locations(
        self,
        *,
        hub_id: str,
        location_ids: typing.Optional[str] = None,
        customer_location_ids: typing.Optional[str] = None,
        start_time: typing.Optional[dt.datetime] = None,
        end_time: typing.Optional[dt.datetime] = None,
        after: typing.Optional[str] = None,
        limit: typing.Optional[int] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> HubLocationsListHubLocationsResponseBody:
        """
        Retrieve locations for a specific hub.

        **Beta:** This endpoint is in beta and is likely to change before being broadly available. Reach out to your Samsara Representative to have RoutePlanning APIs enabled for your organization.

         <b>Rate limit:</b> 10 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Routes** under the Driver Workflow category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        hub_id : str
            The hub identifier

        location_ids : typing.Optional[str]
            A comma-separated list of location IDs that can be used for filtering

        customer_location_ids : typing.Optional[str]
            A comma-separated list of customer provided location IDs that can be used for filtering

        start_time : typing.Optional[dt.datetime]
            Time filter of when the location was updated, in RFC 3339 format

        end_time : typing.Optional[dt.datetime]
            Time filter of when the location was updated, in RFC 3339 format

        after : typing.Optional[str]
            If specified, should be the endCursor from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        limit : typing.Optional[int]
            Maximum number of objects to return. Default and maximum is 100

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        HubLocationsListHubLocationsResponseBody
            OK response.

        Examples
        --------
        import datetime

        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.list_hub_locations(
            hub_id="hubId",
            location_ids="locationIds",
            customer_location_ids="customerLocationIds",
            start_time=datetime.datetime.fromisoformat(
                "2024-01-15 09:30:00+00:00",
            ),
            end_time=datetime.datetime.fromisoformat(
                "2024-01-15 09:30:00+00:00",
            ),
            after="after",
            limit=1,
        )
        """
        _response = self._raw_client.list_hub_locations(
            hub_id=hub_id,
            location_ids=location_ids,
            customer_location_ids=customer_location_ids,
            start_time=start_time,
            end_time=end_time,
            after=after,
            limit=limit,
            request_options=request_options,
        )
        return _response.data

    def create_hub_locations(
        self,
        *,
        data: typing.Sequence[HubLocationInputObjectRequestBody],
        request_options: typing.Optional[RequestOptions] = None,
    ) -> HubLocationsCreateHubLocationsResponseBody:
        """
        Create new locations.

        **Beta:** This endpoint is in beta and is likely to change before being broadly available. Reach out to your Samsara Representative to have RoutePlanning APIs enabled for your organization.

         <b>Rate limit:</b> 100 requests/min (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write Routes** under the Driver Workflow category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        data : typing.Sequence[HubLocationInputObjectRequestBody]
            An array of location objects to be created or updated

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        HubLocationsCreateHubLocationsResponseBody
            OK response.

        Examples
        --------
        from samsara import Samsara
        from samsara.v_20250611 import (
            HubLocationInputObjectRequestBody,
            HubLocationServiceWindowInputRequestBody,
        )

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.create_hub_locations(
            data=[
                HubLocationInputObjectRequestBody(
                    address="123 Industrial Blvd, Los Angeles, CA 90210, US",
                    customer_location_id="LOC-123",
                    driver_instructions="sample instructions",
                    hub_id="550e8400-e29b-41d4-a716-446655440000",
                    is_depot=False,
                    latitude=34.0522,
                    longitude=-118.2437,
                    name="Customer ABC Warehouse",
                    planner_notes="sample note",
                    service_time_seconds=1800,
                    service_windows=[
                        HubLocationServiceWindowInputRequestBody(
                            days_of_week=[
                                "monday",
                                "tuesday",
                                "wednesday",
                                "thursday",
                                "friday",
                            ],
                            end_time="17:00:00",
                            start_time="08:00:00",
                        )
                    ],
                    skills_required=["650e8400-e29b-41d4-a716-446655440001"],
                )
            ],
        )
        """
        _response = self._raw_client.create_hub_locations(data=data, request_options=request_options)
        return _response.data

    def create_hub_plan(
        self, *, hub_id: str, name: str, request_options: typing.Optional[RequestOptions] = None
    ) -> HubPlansCreateHubPlanResponseBody:
        """
        Create a new plan.

        **Beta:** This endpoint is in beta and is likely to change before being broadly available. Reach out to your Samsara Representative to have RoutePlanning APIs enabled for your organization.

         <b>Rate limit:</b> 5 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write Routes** under the Driver Workflow category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        hub_id : str
            The ID of the hub the plan belongs to

        name : str
            The name of the plan

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        HubPlansCreateHubPlanResponseBody
            OK response.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.create_hub_plan(
            hub_id="550e8400-e29b-41d4-a716-446655440000",
            name="Weekly Plan - Week 15",
        )
        """
        _response = self._raw_client.create_hub_plan(hub_id=hub_id, name=name, request_options=request_options)
        return _response.data

    def create_plan_orders(
        self,
        *,
        data: typing.Sequence[OrderInputObjectRequestBody],
        enable_update_existing_orders: typing.Optional[bool] = OMIT,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> PlanOrdersCreatePlanOrdersResponseBody:
        """
        Create one or more orders (bulk upsert). Pass an array of order objects; any object whose customerOrderId already exists will be updated, otherwise a new order is created. Functions can return JSON arrays in this Order POST format. Orders are initially created at the plan level but will migrate to hub-level entities, with planId becoming optional in future versions.

        **Beta:** This endpoint is in beta and is likely to change before being broadly available. Reach out to your Samsara Representative to have RoutePlanning APIs enabled for your organization.

         <b>Rate limit:</b> 5 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write Routes** under the Driver Workflow category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        data : typing.Sequence[OrderInputObjectRequestBody]
            An array of order objects to be created or updated

        enable_update_existing_orders : typing.Optional[bool]
            Enable update of existing orders if an order with the same customerOrderId exists. The input must match the same quantity dimensions as the existing order. If not provided, requests will fail if an order's customerOrderId already exists.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        PlanOrdersCreatePlanOrdersResponseBody
            OK response.

        Examples
        --------
        from samsara import Samsara
        from samsara.v_20250611 import OrderInputObjectRequestBody

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.create_plan_orders(
            data=[
                OrderInputObjectRequestBody(
                    customer_order_id="ORDER-2024-001",
                    hub_id="550e8400-e29b-41d4-a716-446655440000",
                    plan_id="650e8400-e29b-41d4-a716-446655440023",
                )
            ],
        )
        """
        _response = self._raw_client.create_plan_orders(
            data=data, enable_update_existing_orders=enable_update_existing_orders, request_options=request_options
        )
        return _response.data

    def list_hub_plan_routes(
        self,
        *,
        plan_id: str,
        route_ids: typing.Optional[str] = None,
        start_time: typing.Optional[dt.datetime] = None,
        end_time: typing.Optional[dt.datetime] = None,
        after: typing.Optional[str] = None,
        limit: typing.Optional[int] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> HubPlanRoutesListHubPlanRoutesResponseBody:
        """
        Retrieve routes for a specific plan.

        **Beta:** This endpoint is in beta and is likely to change before being broadly available. Reach out to your Samsara Representative to have RoutePlanning APIs enabled for your organization.

         <b>Rate limit:</b> 10 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Routes** under the Driver Workflow category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        plan_id : str
            The plan identifier

        route_ids : typing.Optional[str]
            Comma-separated list of route IDs for filtering.

        start_time : typing.Optional[dt.datetime]
            Time filter of when the route was updated, in RFC 3339 format

        end_time : typing.Optional[dt.datetime]
            Time filter of when the route was updated, in RFC 3339 format

        after : typing.Optional[str]
            If specified, should be the endCursor from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        limit : typing.Optional[int]
            Maximum number of objects to return. Default and maximum is 100

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        HubPlanRoutesListHubPlanRoutesResponseBody
            OK response.

        Examples
        --------
        import datetime

        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.list_hub_plan_routes(
            plan_id="planId",
            route_ids="routeIds",
            start_time=datetime.datetime.fromisoformat(
                "2024-01-15 09:30:00+00:00",
            ),
            end_time=datetime.datetime.fromisoformat(
                "2024-01-15 09:30:00+00:00",
            ),
            after="after",
            limit=1,
        )
        """
        _response = self._raw_client.list_hub_plan_routes(
            plan_id=plan_id,
            route_ids=route_ids,
            start_time=start_time,
            end_time=end_time,
            after=after,
            limit=limit,
            request_options=request_options,
        )
        return _response.data

    def list_hub_plans(
        self,
        *,
        hub_id: str,
        plan_ids: typing.Optional[str] = None,
        start_time: typing.Optional[dt.datetime] = None,
        end_time: typing.Optional[dt.datetime] = None,
        after: typing.Optional[str] = None,
        limit: typing.Optional[int] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> HubPlansListHubPlansResponseBody:
        """
        Retrieve all plans for a specific hub.

        **Beta:** This endpoint is in beta and is likely to change before being broadly available. Reach out to your Samsara Representative to have RoutePlanning APIs enabled for your organization.

         <b>Rate limit:</b> 10 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Routes** under the Driver Workflow category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        hub_id : str
            The hub identifier

        plan_ids : typing.Optional[str]
            Comma-separated list of plan IDs for filtering.

        start_time : typing.Optional[dt.datetime]
            Time filter of when the plan was updated, in RFC 3339 format

        end_time : typing.Optional[dt.datetime]
            Time filter of when the plan was updated, in RFC 3339 format

        after : typing.Optional[str]
            If specified, should be the endCursor from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        limit : typing.Optional[int]
            Maximum number of objects to return. Default and maximum is 100

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        HubPlansListHubPlansResponseBody
            OK response.

        Examples
        --------
        import datetime

        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.list_hub_plans(
            hub_id="hubId",
            plan_ids="planIds",
            start_time=datetime.datetime.fromisoformat(
                "2024-01-15 09:30:00+00:00",
            ),
            end_time=datetime.datetime.fromisoformat(
                "2024-01-15 09:30:00+00:00",
            ),
            after="after",
            limit=1,
        )
        """
        _response = self._raw_client.list_hub_plans(
            hub_id=hub_id,
            plan_ids=plan_ids,
            start_time=start_time,
            end_time=end_time,
            after=after,
            limit=limit,
            request_options=request_options,
        )
        return _response.data

    def list_hub_skills(
        self,
        *,
        hub_id: str,
        skill_ids: typing.Optional[str] = None,
        skill_names: typing.Optional[str] = None,
        start_time: typing.Optional[dt.datetime] = None,
        end_time: typing.Optional[dt.datetime] = None,
        after: typing.Optional[str] = None,
        limit: typing.Optional[int] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> HubSkillsListHubSkillsResponseBody:
        """
        Retrieve skills for a specific hub.

        **Beta:** This endpoint is in beta and is likely to change before being broadly available. Reach out to your Samsara Representative to have RoutePlanning APIs enabled for your organization.

         <b>Rate limit:</b> 10 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Routes** under the Driver Workflow category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        hub_id : str
            The hub identifier

        skill_ids : typing.Optional[str]
            A comma-separated list of skill IDs that can be used for filtering.

        skill_names : typing.Optional[str]
            A comma-separated list of skill namess that can be used for filtering.

        start_time : typing.Optional[dt.datetime]
            Time filter of when the skill was updated, in RFC 3339 format

        end_time : typing.Optional[dt.datetime]
            Time filter of when the skill was updated, in RFC 3339 format

        after : typing.Optional[str]
            If specified, should be the endCursor from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        limit : typing.Optional[int]
            Maximum number of objects to return. Default and maximum is 100

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        HubSkillsListHubSkillsResponseBody
            OK response.

        Examples
        --------
        import datetime

        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.list_hub_skills(
            hub_id="hubId",
            skill_ids="skillIds",
            skill_names="skillNames",
            start_time=datetime.datetime.fromisoformat(
                "2024-01-15 09:30:00+00:00",
            ),
            end_time=datetime.datetime.fromisoformat(
                "2024-01-15 09:30:00+00:00",
            ),
            after="after",
            limit=1,
        )
        """
        _response = self._raw_client.list_hub_skills(
            hub_id=hub_id,
            skill_ids=skill_ids,
            skill_names=skill_names,
            start_time=start_time,
            end_time=end_time,
            after=after,
            limit=limit,
            request_options=request_options,
        )
        return _response.data

    def list_hubs(
        self,
        *,
        hub_ids: typing.Optional[str] = None,
        start_time: typing.Optional[dt.datetime] = None,
        end_time: typing.Optional[dt.datetime] = None,
        after: typing.Optional[str] = None,
        limit: typing.Optional[int] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> HubsListHubsResponseBody:
        """
        Retrieve all hubs (planners) in the organization. This endpoint supports pagination and filtering based on hub IDs and update times.

        **Beta:** This endpoint is in beta and is likely to change before being broadly available. Reach out to your Samsara Representative to have RoutePlanning APIs enabled for your organization.

         <b>Rate limit:</b> 10 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Routes** under the Driver Workflow category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        hub_ids : typing.Optional[str]
            A comma-separated list of hub IDs for filtering results.

        start_time : typing.Optional[dt.datetime]
            Returns hubs updated after the specified time in UTC

        end_time : typing.Optional[dt.datetime]
            Returns hubs updated before the specified time in UTC

        after : typing.Optional[str]
            If specified, should be the endCursor from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        limit : typing.Optional[int]
            Maximum number of objects to return. Default and maximum is 100

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        HubsListHubsResponseBody
            OK response.

        Examples
        --------
        import datetime

        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.list_hubs(
            hub_ids="hubIds",
            start_time=datetime.datetime.fromisoformat(
                "2024-01-15 09:30:00+00:00",
            ),
            end_time=datetime.datetime.fromisoformat(
                "2024-01-15 09:30:00+00:00",
            ),
            after="after",
            limit=1,
        )
        """
        _response = self._raw_client.list_hubs(
            hub_ids=hub_ids,
            start_time=start_time,
            end_time=end_time,
            after=after,
            limit=limit,
            request_options=request_options,
        )
        return _response.data

    def get_service_tasks(
        self,
        *,
        ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        include_archived: typing.Optional[bool] = None,
        after: typing.Optional[str] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> WorkOrdersGetServiceTasksResponseBody:
        """
        Gets service tasks.

         <b>Rate limit:</b> 5 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Work Orders** under the Closed Beta category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            Filter by the IDs. If not provided, won't filter by id.

        include_archived : typing.Optional[bool]
            Include archived service task definitions.

        after : typing.Optional[str]
             If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        WorkOrdersGetServiceTasksResponseBody
            OK response.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.get_service_tasks(
            include_archived=True,
            after="after",
        )
        """
        _response = self._raw_client.get_service_tasks(
            ids=ids, include_archived=include_archived, after=after, request_options=request_options
        )
        return _response.data

    def get_work_orders(
        self,
        *,
        ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        after: typing.Optional[str] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> WorkOrdersGetWorkOrdersResponseBody:
        """
        Gets work orders.

         <b>Rate limit:</b> 5 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Work Orders** under the Closed Beta category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            Filter by the IDs. Up to 100 ids. Returns all if no ids are provided.

        after : typing.Optional[str]
             If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        WorkOrdersGetWorkOrdersResponseBody
            OK response.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.get_work_orders(
            after="after",
        )
        """
        _response = self._raw_client.get_work_orders(ids=ids, after=after, request_options=request_options)
        return _response.data

    def post_work_orders(
        self,
        *,
        asset_id: str,
        assigned_user_id: typing.Optional[str] = OMIT,
        category: typing.Optional[WorkOrdersPostWorkOrdersRequestBodyCategory] = OMIT,
        created_by_user_id: typing.Optional[str] = OMIT,
        description: typing.Optional[str] = OMIT,
        discount: typing.Optional[WorkOrderDiscountObjectRequestBody] = OMIT,
        due_at_time: typing.Optional[dt.datetime] = OMIT,
        engine_hours: typing.Optional[int] = OMIT,
        items: typing.Optional[typing.Sequence[WorkOrderItemObjectRequestBody]] = OMIT,
        odometer_meters: typing.Optional[int] = OMIT,
        priority: typing.Optional[WorkOrdersPostWorkOrdersRequestBodyPriority] = OMIT,
        service_task_instances: typing.Optional[typing.Sequence[ServiceTaskInstanceInputObjectRequestBody]] = OMIT,
        tax: typing.Optional[WorkOrderTaxObjectRequestBody] = OMIT,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> WorkOrdersPostWorkOrdersResponseBody:
        """
        Creates a work order.

         <b>Rate limit:</b> 100 requests/min (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write Work Orders** under the Closed Beta category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        asset_id : str
            The ID of the asset.

        assigned_user_id : typing.Optional[str]
            The ID of the assigned mechanic.

        category : typing.Optional[WorkOrdersPostWorkOrdersRequestBodyCategory]
            The category of the work order  Valid values: `Annual`, `Corrective`, `Damage Repair`, `Preventive`, `Recall`, `Unspecified`

        created_by_user_id : typing.Optional[str]
            The ID of the creator of the work order.

        description : typing.Optional[str]
            A description of what needs to be fixed.

        discount : typing.Optional[WorkOrderDiscountObjectRequestBody]

        due_at_time : typing.Optional[dt.datetime]
            The due date of the work order in RFC 3339 format.

        engine_hours : typing.Optional[int]
            The engine hours at the time of the work order. Will default to current asset reading if unset.

        items : typing.Optional[typing.Sequence[WorkOrderItemObjectRequestBody]]
            Items related to the work order.

        odometer_meters : typing.Optional[int]
            The odometer reading at the time of the work order. Will default to current asset reading if unset.

        priority : typing.Optional[WorkOrdersPostWorkOrdersRequestBodyPriority]
            The priority of the work order  Valid values: `High`, `Low`, `Medium`, `Urgent`

        service_task_instances : typing.Optional[typing.Sequence[ServiceTaskInstanceInputObjectRequestBody]]
            Service Tasks for the work order.

        tax : typing.Optional[WorkOrderTaxObjectRequestBody]

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        WorkOrdersPostWorkOrdersResponseBody
            OK response.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.post_work_orders(
            asset_id="12443",
        )
        """
        _response = self._raw_client.post_work_orders(
            asset_id=asset_id,
            assigned_user_id=assigned_user_id,
            category=category,
            created_by_user_id=created_by_user_id,
            description=description,
            discount=discount,
            due_at_time=due_at_time,
            engine_hours=engine_hours,
            items=items,
            odometer_meters=odometer_meters,
            priority=priority,
            service_task_instances=service_task_instances,
            tax=tax,
            request_options=request_options,
        )
        return _response.data

    def delete_work_orders(self, *, id: str, request_options: typing.Optional[RequestOptions] = None) -> None:
        """
        Deletes a work order.

         <b>Rate limit:</b> 100 requests/min (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write Work Orders** under the Closed Beta category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        id : str
            The unique id of the work order.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        None

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.delete_work_orders(
            id="id",
        )
        """
        _response = self._raw_client.delete_work_orders(id=id, request_options=request_options)
        return _response.data

    def patch_work_orders(
        self,
        *,
        id: str,
        assigned_user_id: typing.Optional[str] = OMIT,
        category: typing.Optional[WorkOrdersPatchWorkOrdersRequestBodyCategory] = OMIT,
        closing_notes: typing.Optional[str] = OMIT,
        completed_at_time: typing.Optional[dt.datetime] = OMIT,
        description: typing.Optional[str] = OMIT,
        discount: typing.Optional[WorkOrderDiscountObjectRequestBody] = OMIT,
        due_at_time: typing.Optional[dt.datetime] = OMIT,
        engine_hours: typing.Optional[int] = OMIT,
        items: typing.Optional[typing.Sequence[WorkOrderItemObjectRequestBody]] = OMIT,
        odometer_meters: typing.Optional[int] = OMIT,
        priority: typing.Optional[WorkOrdersPatchWorkOrdersRequestBodyPriority] = OMIT,
        service_task_instances: typing.Optional[typing.Sequence[ServiceTaskInstanceInputObjectRequestBody]] = OMIT,
        status: typing.Optional[WorkOrdersPatchWorkOrdersRequestBodyStatus] = OMIT,
        tax: typing.Optional[WorkOrderTaxObjectRequestBody] = OMIT,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> WorkOrdersPatchWorkOrdersResponseBody:
        """
        Updates a work order.

         <b>Rate limit:</b> 100 requests/min (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write Work Orders** under the Closed Beta category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        id : str
            The unique id of the work order.

        assigned_user_id : typing.Optional[str]
            The ID of the assigned mechanic.

        category : typing.Optional[WorkOrdersPatchWorkOrdersRequestBodyCategory]
            The category of the work order  Valid values: `Annual`, `Corrective`, `Damage Repair`, `Preventive`, `Recall`, `Unspecified`

        closing_notes : typing.Optional[str]
            Notes on the work order.

        completed_at_time : typing.Optional[dt.datetime]
            The time the work order was completed in RFC 3339 format. Is automatically set when the status changes and this field is not provided.

        description : typing.Optional[str]
            A description of what needs to be fixed.

        discount : typing.Optional[WorkOrderDiscountObjectRequestBody]

        due_at_time : typing.Optional[dt.datetime]
            The due date of the work order in RFC 3339 format.

        engine_hours : typing.Optional[int]
            The engine hours at the time of the work order. Will default to current asset reading if unset.

        items : typing.Optional[typing.Sequence[WorkOrderItemObjectRequestBody]]
            Items related to the work order.

        odometer_meters : typing.Optional[int]
            The odometer reading at the time of the work order. Will default to current asset reading if unset.

        priority : typing.Optional[WorkOrdersPatchWorkOrdersRequestBodyPriority]
            The priority of the work order  Valid values: `High`, `Low`, `Medium`, `Urgent`

        service_task_instances : typing.Optional[typing.Sequence[ServiceTaskInstanceInputObjectRequestBody]]
            Service Tasks for the work order.

        status : typing.Optional[WorkOrdersPatchWorkOrdersRequestBodyStatus]
            The status of the work order  Valid values: `Assigned`, `Cancelled`, `Closed`, `Completed`, `In Progress`, `On Hold`, `Open`, `Pending Approval`, `Pending Parts`

        tax : typing.Optional[WorkOrderTaxObjectRequestBody]

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        WorkOrdersPatchWorkOrdersResponseBody
            OK response.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.patch_work_orders(
            id="5",
        )
        """
        _response = self._raw_client.patch_work_orders(
            id=id,
            assigned_user_id=assigned_user_id,
            category=category,
            closing_notes=closing_notes,
            completed_at_time=completed_at_time,
            description=description,
            discount=discount,
            due_at_time=due_at_time,
            engine_hours=engine_hours,
            items=items,
            odometer_meters=odometer_meters,
            priority=priority,
            service_task_instances=service_task_instances,
            status=status,
            tax=tax,
            request_options=request_options,
        )
        return _response.data

    def stream_work_orders(
        self,
        *,
        start_time: str,
        after: typing.Optional[str] = None,
        end_time: typing.Optional[str] = None,
        work_order_statuses: typing.Optional[
            typing.Union[
                StreamWorkOrdersRequestWorkOrderStatusesItem,
                typing.Sequence[StreamWorkOrdersRequestWorkOrderStatusesItem],
            ]
        ] = None,
        asset_ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        assigned_user_ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> WorkOrdersStreamWorkOrdersResponseBody:
        """
        Stream work orders.

         <b>Rate limit:</b> 5 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Work Orders** under the Closed Beta category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        start_time : str
            A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).

        after : typing.Optional[str]
             If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        end_time : typing.Optional[str]
             An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).

        work_order_statuses : typing.Optional[typing.Union[StreamWorkOrdersRequestWorkOrderStatusesItem, typing.Sequence[StreamWorkOrdersRequestWorkOrderStatusesItem]]]
            Work Order status filter.

        asset_ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            Work Order asset id filter. Up to 50 ids.

        assigned_user_ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            Work Order assigned user id filter. Up to 50 ids.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        WorkOrdersStreamWorkOrdersResponseBody
            OK response.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.stream_work_orders(
            after="after",
            start_time="startTime",
            end_time="endTime",
        )
        """
        _response = self._raw_client.stream_work_orders(
            start_time=start_time,
            after=after,
            end_time=end_time,
            work_order_statuses=work_order_statuses,
            asset_ids=asset_ids,
            assigned_user_ids=assigned_user_ids,
            request_options=request_options,
        )
        return _response.data

    def post_readings(
        self,
        *,
        data: typing.Sequence[ReadingDatapointRequestBody],
        request_options: typing.Optional[RequestOptions] = None,
    ) -> None:
        """
        Ingest new readings. This endpoint allows the ingestion of batches of readings.

        Ingesting readings is only supported for assets created using the POST /assets API endpoint with readingsIngestionEnabled set to true. To see a full list of readings available for ingestion use the GET readings definitions API. When ingesting location data, the readingID 'location' must be used and the value object must contain at least the following fields: 'speed', 'latitude', 'longitude'.

         <b>Rate limit:</b> 10 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write Readings** under the Closed Beta category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        data : typing.Sequence[ReadingDatapointRequestBody]
            An array of readings data points to create.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        None

        Examples
        --------
        from samsara import Samsara
        from samsara.v_20250611 import ReadingDatapointRequestBody

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.post_readings(
            data=[
                ReadingDatapointRequestBody(
                    entity_id="123451234512345",
                    happened_at_time="2023-10-27T10:00:00Z",
                    reading_id="airInletPressure",
                    value={"key": "value"},
                )
            ],
        )
        """
        _response = self._raw_client.post_readings(data=data, request_options=request_options)
        return _response.data

    def list_readings_definitions(
        self,
        *,
        after: typing.Optional[str] = None,
        ids: typing.Optional[str] = None,
        entity_types: typing.Optional[str] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> ReadingsListReadingsDefinitionsResponseBody:
        """
        An introspection endpoint for discovering the set of readings including their name, description, data type, unit, and other metadata.

         <b>Rate limit:</b> 10 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Readings** under the Closed Beta category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        after : typing.Optional[str]
             If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        ids : typing.Optional[str]
            A String of comma separated reading IDs. Include up to 50 readings IDs. If not set, all readings are returned.

        entity_types : typing.Optional[str]
            A list of entity type to return readings for.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        ReadingsListReadingsDefinitionsResponseBody
            OK response.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.list_readings_definitions(
            after="after",
            ids="ids",
            entity_types="entityTypes",
        )
        """
        _response = self._raw_client.list_readings_definitions(
            after=after, ids=ids, entity_types=entity_types, request_options=request_options
        )
        return _response.data

    def get_readings_history(
        self,
        *,
        reading_id: str,
        entity_type: str,
        after: typing.Optional[str] = None,
        entity_ids: typing.Optional[str] = None,
        external_ids: typing.Optional[str] = None,
        start_time: typing.Optional[str] = None,
        end_time: typing.Optional[str] = None,
        feed: typing.Optional[bool] = None,
        include_external_ids: typing.Optional[bool] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> ReadingsGetReadingsHistoryResponseBody:
        """
        Get the values of a reading for a set of entities within the specified time range. Returns a paginated response with data for the specified resource IDs where startTime <= happenedAtTime < endTime. End time of null implies endTime is infinite and all known readings are returned.

         <b>Rate limit:</b> 10 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Readings** under the Closed Beta category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        reading_id : str
            The reading ID to retrieve data for. Use /readings/definitions endpoint to get a list of valid reading IDs.

        entity_type : str
            A entity type of the entityIds or externalIds to fetch readings for. Use /readings/definitions endpoint to get a list of valid entity types.

        after : typing.Optional[str]
             If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        entity_ids : typing.Optional[str]
            A filter on the data based on this comma-separated list of entity IDs or external IDs.

        external_ids : typing.Optional[str]
            A filter on the data based on this comma-separated list of external IDs.

        start_time : typing.Optional[str]
            A filter on the data that returns the last known data points with timestamps greater than or equal to this value. Must be a string in RFC 3339 format. Millisecond precision and timezones are supported.

        end_time : typing.Optional[str]
            A filter on the data that returns the last known data points with timestamps less than or equal to this value. If not set, the time of the request is considered the endTime. Must be a string in RFC 3339 format. Millisecond precision and timezones are supported.

        feed : typing.Optional[bool]
            Set to true to enable feed mode for continuous reading updates. When enabled, the API always includes an endCursor in the response. If hasNextPage is false, it indicates that no new data is currently available — wait at least 5 seconds before making the next request to avoid unnecessary polling.

        include_external_ids : typing.Optional[bool]
            Optional boolean indicating whether to return external IDs on supported entities

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        ReadingsGetReadingsHistoryResponseBody
            OK response.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.get_readings_history(
            after="after",
            reading_id="readingId",
            entity_ids="entityIds",
            entity_type="entityType",
            external_ids="externalIds",
            start_time="startTime",
            end_time="endTime",
            feed=True,
            include_external_ids=True,
        )
        """
        _response = self._raw_client.get_readings_history(
            reading_id=reading_id,
            entity_type=entity_type,
            after=after,
            entity_ids=entity_ids,
            external_ids=external_ids,
            start_time=start_time,
            end_time=end_time,
            feed=feed,
            include_external_ids=include_external_ids,
            request_options=request_options,
        )
        return _response.data

    def get_readings_snapshot(
        self,
        *,
        reading_ids: str,
        entity_type: str,
        after: typing.Optional[str] = None,
        entity_ids: typing.Optional[str] = None,
        external_ids: typing.Optional[str] = None,
        as_of_time: typing.Optional[str] = None,
        include_external_ids: typing.Optional[bool] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> ReadingsGetReadingsSnapshotResponseBody:
        """
        An endpoint to get the last value of a reading for a set of entities at the specified time.

         <b>Rate limit:</b> 10 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Readings** under the Closed Beta category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        reading_ids : str
            A collection of comma separated reading IDs. Include up to 3 readings IDs. Use /readings/definitions endpoint to get a list of valid reading IDs.

        entity_type : str
            A entity type of the entityIds or externalIds to fetch readings for. Use /readings/definitions endpoint to get a list of valid entity types.

        after : typing.Optional[str]
             If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        entity_ids : typing.Optional[str]
            A filter on the data based on this comma-separated list of entity IDs or external IDs.

        external_ids : typing.Optional[str]
            A filter on the data based on this comma-separated list of external IDs.

        as_of_time : typing.Optional[str]
            A filter on the data that returns the last known data points with timestamps less than or equal to this value. Defaults to now if not provided. Must be a string in RFC 3339 format. Millisecond precision and timezones are supported.

        include_external_ids : typing.Optional[bool]
            Optional boolean indicating whether to return external IDs on supported entities

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        ReadingsGetReadingsSnapshotResponseBody
            OK response.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.get_readings_snapshot(
            after="after",
            reading_ids="readingIds",
            entity_ids="entityIds",
            external_ids="externalIds",
            as_of_time="asOfTime",
            entity_type="entityType",
            include_external_ids=True,
        )
        """
        _response = self._raw_client.get_readings_snapshot(
            reading_ids=reading_ids,
            entity_type=entity_type,
            after=after,
            entity_ids=entity_ids,
            external_ids=external_ids,
            as_of_time=as_of_time,
            include_external_ids=include_external_ids,
            request_options=request_options,
        )
        return _response.data

    def post_training_assignments(
        self,
        *,
        course_id: str,
        due_at_time: str,
        learner_ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> TrainingAssignmentsPostTrainingAssignmentsResponseBody:
        """
        Create training assignments. Existing assignments will remain unchanged.

        **Beta:** This endpoint is in beta and is likely to change before being broadly available. Reach out to your Samsara Representative to have Training APIs enabled for your organization.

         <b>Rate limit:</b> 10 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write Training Assignments** under the Training Assignments category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        course_id : str
            String for the course ID.

        due_at_time : str
            Due date of the training assignment in RFC 3339 format. Millisecond precision and timezones are supported.

        learner_ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            Optional string of comma separated learner IDs. If learner ID is present, training assignments for the specified learner(s) will be returned. Max value for this value is 100 objects. Example: `learnerIds=driver-281474,driver-46282156`

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        TrainingAssignmentsPostTrainingAssignmentsResponseBody
            OK response.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.post_training_assignments(
            course_id="courseId",
            due_at_time="dueAtTime",
        )
        """
        _response = self._raw_client.post_training_assignments(
            course_id=course_id, due_at_time=due_at_time, learner_ids=learner_ids, request_options=request_options
        )
        return _response.data

    def delete_training_assignments(
        self,
        *,
        ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> None:
        """
        This endpoint supports batch deletion operations. The response does not indicate which specific deletions, if any, have failed. On a successful deletion or partial failure, a ‘204 No Content’ status is returned.

        **Beta:** This endpoint is in beta and is likely to change before being broadly available. Reach out to your Samsara Representative to have Training APIs enabled for your organization.

         <b>Rate limit:</b> 10 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write Training Assignments** under the Training Assignments category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            String of comma separated assignments IDs. Max value for this value is 100 objects .Example: `ids=a4db8702-79d5-4396-a717-e301d52ecc11,c6490f6a-d84e-49b5-b0ad-b6baae304075`

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        None

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.delete_training_assignments()
        """
        _response = self._raw_client.delete_training_assignments(ids=ids, request_options=request_options)
        return _response.data

    def patch_training_assignments(
        self,
        *,
        due_at_time: str,
        ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> TrainingAssignmentsPatchTrainingAssignmentsResponseBody:
        """
        Update training assignments.

        **Beta:** This endpoint is in beta and is likely to change before being broadly available. Reach out to your Samsara Representative to have Training APIs enabled for your organization.

         <b>Rate limit:</b> 10 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write Training Assignments** under the Training Assignments category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        due_at_time : str
            Due date of the training assignment in RFC 3339 format. Millisecond precision and timezones are supported.

        ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            String of comma separated assignments IDs. Max value for this value is 100 objects .Example: `ids=a4db8702-79d5-4396-a717-e301d52ecc11,c6490f6a-d84e-49b5-b0ad-b6baae304075`

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        TrainingAssignmentsPatchTrainingAssignmentsResponseBody
            OK response.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.patch_training_assignments(
            due_at_time="dueAtTime",
        )
        """
        _response = self._raw_client.patch_training_assignments(
            due_at_time=due_at_time, ids=ids, request_options=request_options
        )
        return _response.data

    def get_training_assignments_stream(
        self,
        *,
        start_time: str,
        after: typing.Optional[str] = None,
        end_time: typing.Optional[str] = None,
        learner_ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        course_ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        status: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> TrainingAssignmentsGetTrainingAssignmentsStreamResponseBody:
        """
        Returns all training assignments data that has been created or modified for your organization based on the time parameters passed in. Results are paginated and are sorted by last modified date. If you include an endTime, the endpoint will return data up until that point (exclusive). If you don't include an endTime, you can continue to poll the API real-time with the pagination cursor that gets returned on every call.

        **Beta:** This endpoint is in beta and is likely to change before being broadly available. Reach out to your Samsara Representative to have Training APIs enabled for your organization.

         <b>Rate limit:</b> 5 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Training Assignments** under the Training Assignments category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        start_time : str
             A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).

        after : typing.Optional[str]
             If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        end_time : typing.Optional[str]
             An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).

        learner_ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            Optional string of comma separated learner IDs. If learner ID is present, training assignments for the specified learner(s) will be returned. Max value for this value is 100 objects. Example: `learnerIds=driver-281474,driver-46282156`

        course_ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            Optional string of comma separated course IDs. If course ID is present, training assignments for the specified course ID(s) will be returned. Max value for this value is 100 objects. Defaults to returning all courses. Example: `courseIds=a4db8702-79d5-4396-a717-e301d52ecc11,c6490f6a-d84e-49b5-b0ad-b6baae304075`

        status : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            Optional string of comma separated values. If status is present, training assignments for the specified status(s) will be returned. Valid values: "notStarted", "inProgress", "completed". Defaults to returning all courses.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        TrainingAssignmentsGetTrainingAssignmentsStreamResponseBody
            OK response.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.get_training_assignments_stream(
            after="after",
            start_time="startTime",
            end_time="endTime",
        )
        """
        _response = self._raw_client.get_training_assignments_stream(
            start_time=start_time,
            after=after,
            end_time=end_time,
            learner_ids=learner_ids,
            course_ids=course_ids,
            status=status,
            request_options=request_options,
        )
        return _response.data

    def get_training_courses(
        self,
        *,
        after: typing.Optional[str] = None,
        course_ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        category_ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        status: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> TrainingCoursesGetTrainingCoursesResponseBody:
        """
        Returns all training courses data. Results are paginated.
         Courses in the ‘draft’ status are excluded from the data returned by this endpoint.

         <b>Rate limit:</b> 5 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Training Courses** under the Training Courses category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        after : typing.Optional[str]
             If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        course_ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            Optional string of comma separated course IDs. If course ID is present, training assignments for the specified course ID(s) will be returned. Max value for this value is 100 objects. Defaults to returning all courses. Example: `courseIds=a4db8702-79d5-4396-a717-e301d52ecc11,c6490f6a-d84e-49b5-b0ad-b6baae304075`

        category_ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            Optional string of comma separated course category IDs. If courseCategoryId is present, training courses for the specified course category(s) will be returned. Max value for this value is 100 objects. Defaults to returning all courses.  Example: `categoryIds=a4db8702-79d5-4396-a717-e301d52ecc11,c6490f6a-d84e-49b5-b0ad-b6baae304075`

        status : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            Optional string of comma separated values. If status is present, training courses with the specified status(s) will be returned. Valid values: “published”, “deleted”, “archived”. Defaults to returning all courses.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        TrainingCoursesGetTrainingCoursesResponseBody
            OK response.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.get_training_courses(
            after="after",
        )
        """
        _response = self._raw_client.get_training_courses(
            after=after,
            course_ids=course_ids,
            category_ids=category_ids,
            status=status,
            request_options=request_options,
        )
        return _response.data

    def get_trips(
        self,
        *,
        start_time: str,
        include_asset: typing.Optional[bool] = None,
        completion_status: typing.Optional[GetTripsRequestCompletionStatus] = None,
        end_time: typing.Optional[str] = None,
        query_by: typing.Optional[GetTripsRequestQueryBy] = None,
        after: typing.Optional[str] = None,
        ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> TripsGetTripsResponseBody:
        """
        This endpoint will return trips that have been collected for your organization based on the time parameters passed in. Results are paginated. Reach out to your Samsara Representative to have this API enabled for your organization.

         <b>Rate limit:</b> 5 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Trips** under the Trips category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        start_time : str
            RFC 3339 timestamp that indicates when to begin receiving data. Value is compared against `updatedAtTime` or `tripStartTime` depending on the queryBy parameter.

        include_asset : typing.Optional[bool]
            Indicates whether or not to return expanded “asset” data

        completion_status : typing.Optional[GetTripsRequestCompletionStatus]
            Filters trips based on a specific completion status  Valid values: `inProgress`, `completed`, `all`

        end_time : typing.Optional[str]
            RFC 3339 timestamp which is compared against `updatedAtTime` or `tripStartTime` depending on the queryBy parameter. If not provided then the endpoint behaves as an unending feed of changes.

        query_by : typing.Optional[GetTripsRequestQueryBy]
            Decide which timestamp the `startTime` and `endTime` are compared to.  Valid values: `updatedAtTime`, `tripStartTime`

        after : typing.Optional[str]
             If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            Comma-separated list of asset IDs. Include up to 50 asset IDs.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        TripsGetTripsResponseBody
            OK response.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.v_20250611.beta_ap_is.get_trips(
            start_time="startTime",
        )
        """
        _response = self._raw_client.get_trips(
            start_time=start_time,
            include_asset=include_asset,
            completion_status=completion_status,
            end_time=end_time,
            query_by=query_by,
            after=after,
            ids=ids,
            request_options=request_options,
        )
        return _response.data


class AsyncBetaApIsClient:
    def __init__(self, *, client_wrapper: AsyncClientWrapper):
        self._raw_client = AsyncRawBetaApIsClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> AsyncRawBetaApIsClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        AsyncRawBetaApIsClient
        """
        return self._raw_client

    async def get_assets_inputs(
        self,
        *,
        type: GetAssetsInputsRequestType,
        start_time: str,
        ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        after: typing.Optional[str] = None,
        end_time: typing.Optional[str] = None,
        include_external_ids: typing.Optional[bool] = None,
        include_tags: typing.Optional[bool] = None,
        include_attributes: typing.Optional[bool] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> AssetsInputsGetAssetsInputsResponseBody:
        """
        This endpoint will return data collected from the inputs of your organization's assets based on the time parameters passed in. Results are paginated. If you include an endTime, the endpoint will return data up until that point. If you don’t include an endTime, you can continue to poll the API real-time with the pagination cursor that gets returned on every call. The endpoint will only return data up until the endTime that has been processed by the server at the time of the original request. You will need to request the same [startTime, endTime) range again to receive data for assets processed after the original request time. This endpoint sorts data by time ascending.

         <b>Rate limit:</b> 10 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Assets** under the Assets category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        type : GetAssetsInputsRequestType
            Input stat type to query for.  Valid values: `auxInput1`, `auxInput2`, `auxInput3`, `auxInput4`, `auxInput5`, `auxInput6`, `auxInput7`, `auxInput8`, `auxInput9`, `auxInput10`, `auxInput11`, `auxInput12`, `auxInput13`, `analogInput1Voltage`, `analogInput2Voltage`, `analogInput1Current`, `analogInput2Current`, `batteryVoltage`

        start_time : str
            A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).

        ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            Comma-separated list of asset IDs. Limited to 100 ID's for each request.

        after : typing.Optional[str]
             If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        end_time : typing.Optional[str]
             An end time in RFC 3339 format. Defaults to never if not provided; if not provided then pagination will not cease, and a valid pagination cursor will always be returned. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).

        include_external_ids : typing.Optional[bool]
            Optional boolean indicating whether to return external IDs on supported entities

        include_tags : typing.Optional[bool]
            Optional boolean indicating whether to return tags on supported entities

        include_attributes : typing.Optional[bool]
            Optional boolean indicating whether to return attributes on supported entities

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        AssetsInputsGetAssetsInputsResponseBody
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.get_assets_inputs(
                type="auxInput1",
                start_time="startTime",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.get_assets_inputs(
            type=type,
            start_time=start_time,
            ids=ids,
            after=after,
            end_time=end_time,
            include_external_ids=include_external_ids,
            include_tags=include_tags,
            include_attributes=include_attributes,
            request_options=request_options,
        )
        return _response.data

    async def get_aemp_equipment_list(
        self, page_number: str, *, request_options: typing.Optional[RequestOptions] = None
    ) -> AempEquipmentGetAempEquipmentListResponseBody:
        """
        Get a list of equipment following the AEMP ISO 15143-3 standard.

         <b>Rate limit:</b> 5 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read AEMP** under the Equipment category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        page_number : str
            The number corresponding to a specific page of paginated results, defaulting to the first page if not provided. The default page size is 100 records.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        AempEquipmentGetAempEquipmentListResponseBody
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.get_aemp_equipment_list(
                page_number="pageNumber",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.get_aemp_equipment_list(page_number, request_options=request_options)
        return _response.data

    async def get_driver_efficiency(
        self,
        *,
        driver_activation_status: typing.Optional[GetDriverEfficiencyRequestDriverActivationStatus] = None,
        driver_ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        after: typing.Optional[str] = None,
        driver_tag_ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        driver_parent_tag_ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        start_time: typing.Optional[dt.datetime] = None,
        end_time: typing.Optional[dt.datetime] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> DriverEfficienciesResponse:
        """
        Get all driver and associated vehicle efficiency data.

         This is a legacy endpoint, consider using this endpoint [/driver-efficiency/drivers](https://developers.samsara.com/reference/getdriverefficiencybydrivers) instead. The endpoint will continue to function as documented.

         <b>Rate limit:</b> 50 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        To use this endpoint, select **Read Fuel & Energy** under the Fuel & Energy category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>

        Parameters
        ----------
        driver_activation_status : typing.Optional[GetDriverEfficiencyRequestDriverActivationStatus]
            If value is `deactivated`, only drivers that are deactivated will appear in the response. This parameter will default to `active` if not provided (fetching only active drivers).

        driver_ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            A filter on the data based on this comma-separated list of driver IDs. Cannot be used with tag filtering or driver status. Example: `driverIds=1234,5678`

        after : typing.Optional[str]
            If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        driver_tag_ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            Filters summary to drivers based on this comma-separated list of tag IDs. Data from all the drivers' respective vehicles will be included in the summary, regardless of which tag the vehicle is associated with. Should not be provided in addition to `driverIds`. Example: driverTagIds=1234,5678

        driver_parent_tag_ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            Filters like `driverTagIds` but includes descendants of all the given parent tags. Should not be provided in addition to `driverIds`. Example: `driverParentTagIds=1234,5678`

        start_time : typing.Optional[dt.datetime]
            A start time in RFC 3339 format. The results will be truncated to the hour mark for the provided time. For example, if `startTime` is 2020-03-17T12:06:19Z then the results will include data starting from 2020-03-17T12:00:00Z. The provided start time cannot be in the future. Start time can be at most 31 days before the end time. If the start time is within the last hour, the results will be empty. Default: 24 hours prior to endTime.

            Note that the most recent 72 hours of data may still be processing and is subject to change and latency, so it is not recommended to request data for the most recent 72 hours.

        end_time : typing.Optional[dt.datetime]
            An end time in RFC 3339 format. The results will be truncated to the hour mark for the provided time. For example, if `endTime` is 2020-03-17T12:06:19Z then the results will include data up until 2020-03-17T12:00:00Z. The provided end time cannot be in the future. End time can be at most 31 days after the start time. Default: The current time truncated to the hour mark.

            Note that the most recent 72 hours of data may still be processing and is subject to change and latency, so it is not recommended to request data for the most recent 72 hours

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        DriverEfficienciesResponse
            List of all driver and associated vehicle efficiency data

        Examples
        --------
        import asyncio
        import datetime

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.get_driver_efficiency(
                driver_activation_status="active",
                after="after",
                start_time=datetime.datetime.fromisoformat(
                    "2024-01-15 09:30:00+00:00",
                ),
                end_time=datetime.datetime.fromisoformat(
                    "2024-01-15 09:30:00+00:00",
                ),
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.get_driver_efficiency(
            driver_activation_status=driver_activation_status,
            driver_ids=driver_ids,
            after=after,
            driver_tag_ids=driver_tag_ids,
            driver_parent_tag_ids=driver_parent_tag_ids,
            start_time=start_time,
            end_time=end_time,
            request_options=request_options,
        )
        return _response.data

    async def patch_equipment(
        self,
        id: str,
        *,
        attributes: typing.Optional[typing.Sequence[GoaAttributeTiny]] = OMIT,
        engine_hours: typing.Optional[int] = OMIT,
        equipment_serial_number: typing.Optional[str] = OMIT,
        external_ids: typing.Optional[typing.Dict[str, str]] = OMIT,
        equipment_patch_equipment_request_body_id: typing.Optional[str] = OMIT,
        name: typing.Optional[str] = OMIT,
        notes: typing.Optional[str] = OMIT,
        odometer_meters: typing.Optional[int] = OMIT,
        tag_ids: typing.Optional[typing.Sequence[str]] = OMIT,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> EquipmentPatchEquipmentResponseBody:
        """
        Update an equipment.  **Note** this implementation of patch uses [the JSON merge patch](https://tools.ietf.org/html/rfc7396) proposed standard.
         This means that any fields included in the patch request will _overwrite_ fields which exist on the target resource.
         For arrays, this means any array included in the request will _replace_ the array that exists at the specified path, it will not _add_ to the existing array

         <b>Rate limit:</b> 100 requests/min (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write Equipment** under the Equipment category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        id : str
            The unique Samsara ID of the Equipment. This is automatically generated when the Equipment object is created. It cannot be changed.

        attributes : typing.Optional[typing.Sequence[GoaAttributeTiny]]
            List of attributes associated with the entity

        engine_hours : typing.Optional[int]
            When you provide a manual engine hours override, Samsara will begin updating a equipment's engine hours used since this override was set.

        equipment_serial_number : typing.Optional[str]
            The serial number of the equipment.

        external_ids : typing.Optional[typing.Dict[str, str]]
            A map of external ids

        equipment_patch_equipment_request_body_id : typing.Optional[str]
            The unique Samsara ID of the Equipment. This is automatically generated when the Equipment object is created. It cannot be changed.

        name : typing.Optional[str]
            The human-readable name of the Equipment. This is set by a fleet administrator and will appear in both Samsara’s cloud dashboard as well as the Samsara Driver mobile app. By default, this name is the serial number of the Samsara Asset Gateway. It can be set or updated through the Samsara Dashboard or through the API at any time.

        notes : typing.Optional[str]
            These are generic notes about the Equipment. Empty by default. Can be set or updated through the Samsara Dashboard or the API at any time.

        odometer_meters : typing.Optional[int]
            When you provide a manual odometer override, Samsara will begin updating a equipment's odometer using GPS distance traveled since this override was set.

        tag_ids : typing.Optional[typing.Sequence[str]]
            An array of IDs of tags to associate with this equipment. If your access to the API is scoped by one or more tags, this field is required to pass in.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        EquipmentPatchEquipmentResponseBody
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.patch_equipment(
                id="id",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.patch_equipment(
            id,
            attributes=attributes,
            engine_hours=engine_hours,
            equipment_serial_number=equipment_serial_number,
            external_ids=external_ids,
            equipment_patch_equipment_request_body_id=equipment_patch_equipment_request_body_id,
            name=name,
            notes=notes,
            odometer_meters=odometer_meters,
            tag_ids=tag_ids,
            request_options=request_options,
        )
        return _response.data

    async def get_hos_eld_events(
        self,
        *,
        start_time: str,
        end_time: str,
        driver_ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        tag_ids: typing.Optional[str] = None,
        parent_tag_ids: typing.Optional[str] = None,
        driver_activation_status: typing.Optional[GetHosEldEventsRequestDriverActivationStatus] = None,
        after: typing.Optional[str] = None,
        limit: typing.Optional[int] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> HosEldEventsGetHosEldEventsResponseBody:
        """
        Get all HOS ELD events in a time range, grouped by driver. Attributes will be populated depending on which ELD Event Type is being returned.

         <b>Rate limit:</b> 5 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read ELD Compliance Settings (US)** under the Compliance category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        start_time : str
             A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).

        end_time : str
             An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).

        driver_ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
             A filter on the data based on this comma-separated list of driver IDs and externalIds. Example: `driverIds=1234,5678,payroll:4841`

        tag_ids : typing.Optional[str]
             A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`

        parent_tag_ids : typing.Optional[str]
             A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`

        driver_activation_status : typing.Optional[GetHosEldEventsRequestDriverActivationStatus]
            If value is `deactivated`, only drivers that are deactivated will appear in the response. This parameter will default to `active` if not provided (fetching only active drivers).  Valid values: `active`, `deactivated`

        after : typing.Optional[str]
             If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        limit : typing.Optional[int]
            The limit for how many objects will be in the response. Default and max for this value is 25 objects.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        HosEldEventsGetHosEldEventsResponseBody
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.get_hos_eld_events(
                start_time="startTime",
                end_time="endTime",
                tag_ids="tagIds",
                parent_tag_ids="parentTagIds",
                driver_activation_status="active",
                after="after",
                limit=1,
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.get_hos_eld_events(
            start_time=start_time,
            end_time=end_time,
            driver_ids=driver_ids,
            tag_ids=tag_ids,
            parent_tag_ids=parent_tag_ids,
            driver_activation_status=driver_activation_status,
            after=after,
            limit=limit,
            request_options=request_options,
        )
        return _response.data

    async def get_trailer_stats_snapshot(
        self,
        *,
        types: str,
        tag_ids: typing.Optional[str] = None,
        parent_tag_ids: typing.Optional[str] = None,
        after: typing.Optional[str] = None,
        trailer_ids: typing.Optional[str] = None,
        time: typing.Optional[str] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> TrailerStatsGetTrailerStatsSnapshotResponseBody:
        """
        Returns the last known stats of all trailers at the given `time`. If no `time` is specified, the current time is used.

         <b>Rate limit:</b> 25 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Trailer Statistics** under the Trailers category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        types : str
            The stat types you want this endpoint to return information on.

            You may list **up to 3** types using comma-separated format. For example: `types=gps,reeferAmbientAirTemperatureMilliC,gpsOdometerMeters`.

            * `gps`: GPS data including lat/long, heading, speed, and a reverse geocode address.
            * `gpsOdometerMeters`: Odometer reading provided by GPS calculations. You must provide a manual odometer reading before this value is updated. Manual odometer readings can be provided via the PATCH /fleet/trailers/{id} endpoint or through the [cloud dashboard](https://kb.samsara.com/hc/en-us/articles/115005273667-Editing-Odometer-Reading). Odometer readings wthat are manually set will update as GPS trip data is gathered.
            * `reeferAmbientAirTemperatureMilliC`: The ambient air temperature reading of the reefer in millidegree Celsius.
            * `reeferObdEngineSeconds`: The cumulative number of seconds the reefer has run according to onboard diagnostics. Only supported on reefer solutions.
            * `reeferSupplyAirTemperatureMilliCZone1`: The supply or discharge air temperature zone 1 in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.
            * `reeferSupplyAirTemperatureMilliCZone2`: The supply or discharge air temperature zone 2 in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferSupplyAirTemperatureMilliCZone3`: The supply or discharge air temperature zone 3 in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferFuelPercent`: The fuel level of the reefer unit in percentage points (e.g. `99`, `50`, etc). Only supported on reefer solutions.
            * `carrierReeferState`: The overall state of the reefer (`Off`, `On`). Only supported on multizone Carrier reefer solutions.
            * `reeferStateZone1`: The state of the reefer in zone 1. For single zone reefers, this applies tot he single zone. Only supported on multizone reefer solutions.
            * `reeferStateZone2`: The state of the reefer in zone 2. Only supported on multizone reefer solutions.
            * `reeferStateZone3`: The state of the reefer in zone 3. Only supported on multizone reefer solutions.
            * `reeferRunMode`: The operational mode of the reefer (`Start/Stop`, `Continuous`)
            * `reeferAlarms`: Any alarms that are present on the reefer. Only supported on reefer solutions.
            * `reeferReturnAirTemperatureMilliCZone1`: The return air temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.
            * `reeferReturnAirTemperatureMilliCZone2`: The return air temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferReturnAirTemperatureMilliCZone3`: The return air temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferSetPointTemperatureMilliCZone1`: The set point temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.
            * `reeferSetPointTemperatureMilliCZone2`: The set point temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferSetPointTemperatureMilliCZone3`: The set point temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferDoorStateZone1`: The door status in zone 1 of the reefer. For single zone reefers, this applies to the single zone.
            * `reeferDoorStateZone2`: The door status in zone 2 of the reefer. Only supported on multizone reefer solutions.
            * `reeferDoorStateZone3`: The door status in zone 3 of the reefer. Only supported on multizone reefer solutions.

        tag_ids : typing.Optional[str]
             A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`

        parent_tag_ids : typing.Optional[str]
             A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`

        after : typing.Optional[str]
             If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        trailer_ids : typing.Optional[str]
             A filter on the data based on this comma-separated list of trailer IDs and externalIds. Example: `trailerIds=1234,5678,samsara.vin:1HGBH41JXMN109186`

        time : typing.Optional[str]
             A filter on the data that returns the last known data points with timestamps less than or equal to this value. Defaults to now if not provided. Must be a string in RFC 3339 Format. Millisecond precision and timezones are supported.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        TrailerStatsGetTrailerStatsSnapshotResponseBody
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.get_trailer_stats_snapshot(
                types="types",
                tag_ids="tagIds",
                parent_tag_ids="parentTagIds",
                after="after",
                trailer_ids="trailerIds",
                time="time",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.get_trailer_stats_snapshot(
            types=types,
            tag_ids=tag_ids,
            parent_tag_ids=parent_tag_ids,
            after=after,
            trailer_ids=trailer_ids,
            time=time,
            request_options=request_options,
        )
        return _response.data

    async def get_trailer_stats_feed(
        self,
        *,
        types: str,
        tag_ids: typing.Optional[str] = None,
        parent_tag_ids: typing.Optional[str] = None,
        after: typing.Optional[str] = None,
        trailer_ids: typing.Optional[str] = None,
        decorations: typing.Optional[str] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> TrailerStatsGetTrailerStatsFeedResponseBody:
        """
        Follow a feed of trailer stats.

        The first call to this endpoint will provide the most recent stats for each trailer and an `endCursor`.

        Providing the `endCursor` value to the `after` query parameter will fetch all updates since the previous API call.

        If `hasNextPage` is false, no new data is immediately available. Please wait a minimum of 5 seconds before making a subsequent request.

         <b>Rate limit:</b> 25 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Trailer Statistics** under the Trailers category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        types : str
            The stat types you want this endpoint to return information on.

            You may list **up to 3** types using comma-separated format. For example: `types=gps,reeferAmbientAirTemperatureMilliC,gpsOdometerMeters`.

            * `gps`: GPS data including lat/long, heading, speed, and a reverse geocode address.
            * `gpsOdometerMeters`: Odometer reading provided by GPS calculations. You must provide a manual odometer reading before this value is updated. Manual odometer readings can be provided via the PATCH /fleet/trailers/{id} endpoint or through the [cloud dashboard](https://kb.samsara.com/hc/en-us/articles/115005273667-Editing-Odometer-Reading). Odometer readings wthat are manually set will update as GPS trip data is gathered.
            * `reeferAmbientAirTemperatureMilliC`: The ambient air temperature reading of the reefer in millidegree Celsius.
            * `reeferObdEngineSeconds`: The cumulative number of seconds the reefer has run according to onboard diagnostics. Only supported on reefer solutions.
            * `reeferSupplyAirTemperatureMilliCZone1`: The supply or discharge air temperature zone 1 in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.
            * `reeferSupplyAirTemperatureMilliCZone2`: The supply or discharge air temperature zone 2 in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferSupplyAirTemperatureMilliCZone3`: The supply or discharge air temperature zone 3 in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferFuelPercent`: The fuel level of the reefer unit in percentage points (e.g. `99`, `50`, etc). Only supported on reefer solutions.
            * `carrierReeferState`: The overall state of the reefer (`Off`, `On`). Only supported on multizone Carrier reefer solutions.
            * `reeferStateZone1`: The state of the reefer in zone 1. For single zone reefers, this applies tot he single zone. Only supported on multizone reefer solutions.
            * `reeferStateZone2`: The state of the reefer in zone 2. Only supported on multizone reefer solutions.
            * `reeferStateZone3`: The state of the reefer in zone 3. Only supported on multizone reefer solutions.
            * `reeferRunMode`: The operational mode of the reefer (`Start/Stop`, `Continuous`)
            * `reeferAlarms`: Any alarms that are present on the reefer. Only supported on reefer solutions.
            * `reeferReturnAirTemperatureMilliCZone1`: The return air temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.
            * `reeferReturnAirTemperatureMilliCZone2`: The return air temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferReturnAirTemperatureMilliCZone3`: The return air temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferSetPointTemperatureMilliCZone1`: The set point temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.
            * `reeferSetPointTemperatureMilliCZone2`: The set point temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferSetPointTemperatureMilliCZone3`: The set point temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferDoorStateZone1`: The door status in zone 1 of the reefer. For single zone reefers, this applies to the single zone.
            * `reeferDoorStateZone2`: The door status in zone 2 of the reefer. Only supported on multizone reefer solutions.
            * `reeferDoorStateZone3`: The door status in zone 3 of the reefer. Only supported on multizone reefer solutions.

        tag_ids : typing.Optional[str]
             A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`

        parent_tag_ids : typing.Optional[str]
             A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`

        after : typing.Optional[str]
             If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        trailer_ids : typing.Optional[str]
             A filter on the data based on this comma-separated list of trailer IDs and externalIds. Example: `trailerIds=1234,5678,samsara.vin:1HGBH41JXMN109186`

        decorations : typing.Optional[str]
            Decorations add to the primary stats listed in the `types` parameter. For example, if you wish to know the trailer's location whenever the odometer updates, you may set `types=gpsOdometerMeters&decorations=gps`.

            You may list **up to 2** types using comma-separated format. If multiple stats are listed in the types parameter, the decorations will be added to each type. For example: `types=reeferStateZone1,reeferAmbientAirTemperatureMilliC,gpsOdometerMeters&decorations=gps` will list GPS decorations for each reeferStateZone1 reading, each reeferAmbientAirTemperatureMilliC reding, and gpsOdometerMeters reading.

            Note that decorations may significantly increase the response payload size.

            * `gps`: GPS data including lat/long, heading, speed, and a reverse geocode address.
            * `gpsOdometerMeters`: Odometer reading provided by GPS calculations. You must provide a manual odometer reading before this value is updated. Manual odometer readings can be provided via the PATCH /fleet/trailers/{id} endpoint or through the [cloud dashboard](https://kb.samsara.com/hc/en-us/articles/115005273667-Editing-Odometer-Reading). Odometer readings wthat are manually set will update as GPS trip data is gathered.
            * `reeferAmbientAirTemperatureMilliC`: The ambient air temperature reading of the reefer in millidegree Celsius.
            * `reeferObdEngineSeconds`: The cumulative number of seconds the reefer has run according to onboard diagnostics. Only supported on reefer solutions.
            * `reeferSupplyAirTemperatureMilliCZone1`: The supply or discharge air temperature zone 1 in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.
            * `reeferSupplyAirTemperatureMilliCZone2`: The supply or discharge air temperature zone 2 in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferSupplyAirTemperatureMilliCZone3`: The supply or discharge air temperature zone 3 in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferFuelPercent`: The fuel level of the reefer unit in percentage points (e.g. `99`, `50`, etc). Only supported on reefer solutions.
            * `carrierReeferState`: The overall state of the reefer (`Off`, `On`). Only supported on multizone Carrier reefer solutions.
            * `reeferStateZone1`: The state of the reefer in zone 1. For single zone reefers, this applies tot he single zone. Only supported on multizone reefer solutions.
            * `reeferStateZone2`: The state of the reefer in zone 2. Only supported on multizone reefer solutions.
            * `reeferStateZone3`: The state of the reefer in zone 3. Only supported on multizone reefer solutions.
            * `reeferRunMode`: The operational mode of the reefer (`Start/Stop`, `Continuous`)
            * `reeferAlarms`: Any alarms that are present on the reefer. Only supported on reefer solutions.
            * `reeferReturnAirTemperatureMilliCZone1`: The return air temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.
            * `reeferReturnAirTemperatureMilliCZone2`: The return air temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferReturnAirTemperatureMilliCZone3`: The return air temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferSetPointTemperatureMilliCZone1`: The set point temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.
            * `reeferSetPointTemperatureMilliCZone2`: The set point temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferSetPointTemperatureMilliCZone3`: The set point temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferDoorStateZone1`: The door status in zone 1 of the reefer. For single zone reefers, this applies to the single zone.
            * `reeferDoorStateZone2`: The door status in zone 2 of the reefer. Only supported on multizone reefer solutions.
            * `reeferDoorStateZone3`: The door status in zone 3 of the reefer. Only supported on multizone reefer solutions.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        TrailerStatsGetTrailerStatsFeedResponseBody
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.get_trailer_stats_feed(
                types="types",
                tag_ids="tagIds",
                parent_tag_ids="parentTagIds",
                after="after",
                trailer_ids="trailerIds",
                decorations="decorations",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.get_trailer_stats_feed(
            types=types,
            tag_ids=tag_ids,
            parent_tag_ids=parent_tag_ids,
            after=after,
            trailer_ids=trailer_ids,
            decorations=decorations,
            request_options=request_options,
        )
        return _response.data

    async def get_trailer_stats_history(
        self,
        *,
        start_time: str,
        end_time: str,
        types: str,
        tag_ids: typing.Optional[str] = None,
        parent_tag_ids: typing.Optional[str] = None,
        after: typing.Optional[str] = None,
        trailer_ids: typing.Optional[str] = None,
        decorations: typing.Optional[str] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> TrailerStatsGetTrailerStatsHistoryResponseBody:
        """
        Returns trailer stats during the given time range for all trailers. This can be optionally filtered by tags or specific trailer IDs.

         <b>Rate limit:</b> 10 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Trailer Statistics** under the Trailers category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        start_time : str
             A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).

        end_time : str
             An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).

        types : str
            The stat types you want this endpoint to return information on.

            You may list **up to 3** types using comma-separated format. For example: `types=gps,reeferAmbientAirTemperatureMilliC,gpsOdometerMeters`.

            * `gps`: GPS data including lat/long, heading, speed, and a reverse geocode address.
            * `gpsOdometerMeters`: Odometer reading provided by GPS calculations. You must provide a manual odometer reading before this value is updated. Manual odometer readings can be provided via the PATCH /fleet/trailers/{id} endpoint or through the [cloud dashboard](https://kb.samsara.com/hc/en-us/articles/115005273667-Editing-Odometer-Reading). Odometer readings wthat are manually set will update as GPS trip data is gathered.
            * `reeferAmbientAirTemperatureMilliC`: The ambient air temperature reading of the reefer in millidegree Celsius.
            * `reeferObdEngineSeconds`: The cumulative number of seconds the reefer has run according to onboard diagnostics. Only supported on reefer solutions.
            * `reeferSupplyAirTemperatureMilliCZone1`: The supply or discharge air temperature zone 1 in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.
            * `reeferSupplyAirTemperatureMilliCZone2`: The supply or discharge air temperature zone 2 in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferSupplyAirTemperatureMilliCZone3`: The supply or discharge air temperature zone 3 in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferFuelPercent`: The fuel level of the reefer unit in percentage points (e.g. `99`, `50`, etc). Only supported on reefer solutions.
            * `carrierReeferState`: The overall state of the reefer (`Off`, `On`). Only supported on multizone Carrier reefer solutions.
            * `reeferStateZone1`: The state of the reefer in zone 1. For single zone reefers, this applies tot he single zone. Only supported on multizone reefer solutions.
            * `reeferStateZone2`: The state of the reefer in zone 2. Only supported on multizone reefer solutions.
            * `reeferStateZone3`: The state of the reefer in zone 3. Only supported on multizone reefer solutions.
            * `reeferRunMode`: The operational mode of the reefer (`Start/Stop`, `Continuous`)
            * `reeferAlarms`: Any alarms that are present on the reefer. Only supported on reefer solutions.
            * `reeferReturnAirTemperatureMilliCZone1`: The return air temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.
            * `reeferReturnAirTemperatureMilliCZone2`: The return air temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferReturnAirTemperatureMilliCZone3`: The return air temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferSetPointTemperatureMilliCZone1`: The set point temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.
            * `reeferSetPointTemperatureMilliCZone2`: The set point temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferSetPointTemperatureMilliCZone3`: The set point temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferDoorStateZone1`: The door status in zone 1 of the reefer. For single zone reefers, this applies to the single zone.
            * `reeferDoorStateZone2`: The door status in zone 2 of the reefer. Only supported on multizone reefer solutions.
            * `reeferDoorStateZone3`: The door status in zone 3 of the reefer. Only supported on multizone reefer solutions.

        tag_ids : typing.Optional[str]
             A filter on the data based on this comma-separated list of tag IDs. Example: `tagIds=1234,5678`

        parent_tag_ids : typing.Optional[str]
             A filter on the data based on this comma-separated list of parent tag IDs, for use by orgs with tag hierarchies. Specifying a parent tag will implicitly include all descendent tags of the parent tag. Example: `parentTagIds=345,678`

        after : typing.Optional[str]
             If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        trailer_ids : typing.Optional[str]
             A filter on the data based on this comma-separated list of trailer IDs and externalIds. Example: `trailerIds=1234,5678,samsara.vin:1HGBH41JXMN109186`

        decorations : typing.Optional[str]
            Decorations add to the primary stats listed in the `types` parameter. For example, if you wish to know the trailer's location whenever the odometer updates, you may set `types=gpsOdometerMeters&decorations=gps`.

            You may list **up to 2** types using comma-separated format. If multiple stats are listed in the types parameter, the decorations will be added to each type. For example: `types=reeferStateZone1,reeferAmbientAirTemperatureMilliC,gpsOdometerMeters&decorations=gps` will list GPS decorations for each reeferStateZone1 reading, each reeferAmbientAirTemperatureMilliC reding, and gpsOdometerMeters reading.

            Note that decorations may significantly increase the response payload size.

            * `gps`: GPS data including lat/long, heading, speed, and a reverse geocode address.
            * `gpsOdometerMeters`: Odometer reading provided by GPS calculations. You must provide a manual odometer reading before this value is updated. Manual odometer readings can be provided via the PATCH /fleet/trailers/{id} endpoint or through the [cloud dashboard](https://kb.samsara.com/hc/en-us/articles/115005273667-Editing-Odometer-Reading). Odometer readings wthat are manually set will update as GPS trip data is gathered.
            * `reeferAmbientAirTemperatureMilliC`: The ambient air temperature reading of the reefer in millidegree Celsius.
            * `reeferObdEngineSeconds`: The cumulative number of seconds the reefer has run according to onboard diagnostics. Only supported on reefer solutions.
            * `reeferSupplyAirTemperatureMilliCZone1`: The supply or discharge air temperature zone 1 in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.
            * `reeferSupplyAirTemperatureMilliCZone2`: The supply or discharge air temperature zone 2 in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferSupplyAirTemperatureMilliCZone3`: The supply or discharge air temperature zone 3 in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferFuelPercent`: The fuel level of the reefer unit in percentage points (e.g. `99`, `50`, etc). Only supported on reefer solutions.
            * `carrierReeferState`: The overall state of the reefer (`Off`, `On`). Only supported on multizone Carrier reefer solutions.
            * `reeferStateZone1`: The state of the reefer in zone 1. For single zone reefers, this applies tot he single zone. Only supported on multizone reefer solutions.
            * `reeferStateZone2`: The state of the reefer in zone 2. Only supported on multizone reefer solutions.
            * `reeferStateZone3`: The state of the reefer in zone 3. Only supported on multizone reefer solutions.
            * `reeferRunMode`: The operational mode of the reefer (`Start/Stop`, `Continuous`)
            * `reeferAlarms`: Any alarms that are present on the reefer. Only supported on reefer solutions.
            * `reeferReturnAirTemperatureMilliCZone1`: The return air temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.
            * `reeferReturnAirTemperatureMilliCZone2`: The return air temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferReturnAirTemperatureMilliCZone3`: The return air temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferSetPointTemperatureMilliCZone1`: The set point temperature in zone 1 of the reefer in millidegrees Celsius. For single zone reefers, this applies to the single zone. Only supported on multizone reefer solutions.
            * `reeferSetPointTemperatureMilliCZone2`: The set point temperature in zone 2 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferSetPointTemperatureMilliCZone3`: The set point temperature in zone 3 of the reefer in millidegrees Celsius. Only supported on multizone reefer solutions.
            * `reeferDoorStateZone1`: The door status in zone 1 of the reefer. For single zone reefers, this applies to the single zone.
            * `reeferDoorStateZone2`: The door status in zone 2 of the reefer. Only supported on multizone reefer solutions.
            * `reeferDoorStateZone3`: The door status in zone 3 of the reefer. Only supported on multizone reefer solutions.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        TrailerStatsGetTrailerStatsHistoryResponseBody
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.get_trailer_stats_history(
                start_time="startTime",
                end_time="endTime",
                types="types",
                tag_ids="tagIds",
                parent_tag_ids="parentTagIds",
                after="after",
                trailer_ids="trailerIds",
                decorations="decorations",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.get_trailer_stats_history(
            start_time=start_time,
            end_time=end_time,
            types=types,
            tag_ids=tag_ids,
            parent_tag_ids=parent_tag_ids,
            after=after,
            trailer_ids=trailer_ids,
            decorations=decorations,
            request_options=request_options,
        )
        return _response.data

    async def update_engine_immobilizer_state(
        self,
        id: int,
        *,
        relay_states: typing.Sequence[UpdateEngineImmobilizerRelayStateRequestBodyRequestBody],
        request_options: typing.Optional[RequestOptions] = None,
    ) -> None:
        """
        Update the engine immobilizer state of a vehicle. This requires an engine immobilizer to be installed on the vehicle gateway.

         <b>Rate limit:</b> 100 requests/min (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write Vehicle Immobilization** under the Vehicles category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        id : int
            Vehicle ID

        relay_states : typing.Sequence[UpdateEngineImmobilizerRelayStateRequestBodyRequestBody]
            A list of relay states. If a relay is omitted, its state won't be updated. If the list is empty, a 400 bad request status code will be returned. If there are multiple states for the same relay, a 400 bad request status code will be returned.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        None

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara
        from samsara.v_20250611 import (
            UpdateEngineImmobilizerRelayStateRequestBodyRequestBody,
        )

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.update_engine_immobilizer_state(
                id=1000000,
                relay_states=[
                    UpdateEngineImmobilizerRelayStateRequestBodyRequestBody(
                        id="relay1",
                        is_open=True,
                    )
                ],
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.update_engine_immobilizer_state(
            id, relay_states=relay_states, request_options=request_options
        )
        return _response.data

    async def get_jobs(
        self,
        *,
        id: typing.Optional[str] = None,
        start_date: typing.Optional[str] = None,
        end_date: typing.Optional[str] = None,
        industrial_asset_ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        fleet_device_ids: typing.Optional[typing.Union[int, typing.Sequence[int]]] = None,
        status: typing.Optional[GetJobsRequestStatus] = None,
        customer_name: typing.Optional[str] = None,
        after: typing.Optional[str] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> JobsGetJobsResponseBody:
        """
        Fetches jobs based on id/uuid or provided filters.

        To use this endpoint, select **Read Jobs** under the Equipment category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        id : typing.Optional[str]
            A jobId or uuid in STRING format. JobId must be prefixed with `jobId:`(Examples: `"8d218e6c-7a16-4f9f-90f7-cc1d93b9e596"`, `"jobId:98765"`).

        start_date : typing.Optional[str]
             A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).

        end_date : typing.Optional[str]
             An end time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).

        industrial_asset_ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            IndustrialAssetId in STRING format. (Example: `"8d218e6c-7a16-4f9f-90f7-cc1d93b9e596"`).

        fleet_device_ids : typing.Optional[typing.Union[int, typing.Sequence[int]]]
            FleetDeviceId in INTEGER format. (Example: `123456`).

        status : typing.Optional[GetJobsRequestStatus]
            A job status in STRING format. Job statuses can be one of three (ignores case): `"active", "scheduled", "completed"`  Valid values: `active`, `scheduled`, `completed`

        customer_name : typing.Optional[str]
            Customer name to filter by

        after : typing.Optional[str]
             If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        JobsGetJobsResponseBody
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.get_jobs(
                id="id",
                start_date="startDate",
                end_date="endDate",
                status="active",
                customer_name="customerName",
                after="after",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.get_jobs(
            id=id,
            start_date=start_date,
            end_date=end_date,
            industrial_asset_ids=industrial_asset_ids,
            fleet_device_ids=fleet_device_ids,
            status=status,
            customer_name=customer_name,
            after=after,
            request_options=request_options,
        )
        return _response.data

    async def create_job(
        self, *, job: PostJobObjectRequestBody, request_options: typing.Optional[RequestOptions] = None
    ) -> JobsCreateJobResponseBody:
        """
        Creates a new job and returns it.

        To use this endpoint, select **Write Jobs** under the Equipment category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        job : PostJobObjectRequestBody

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        JobsCreateJobResponseBody
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara
        from samsara.v_20250611 import PostJobObjectRequestBody

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.create_job(
                job=PostJobObjectRequestBody(
                    end_date="2019-06-13T19:08:25Z",
                    id="8d218e6c-7a16-4f9f-90f7-cc1d93b9e596",
                    name="My Job Name",
                    start_date="2019-06-13T19:08:25Z",
                ),
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.create_job(job=job, request_options=request_options)
        return _response.data

    async def delete_job(
        self, *, id: str, request_options: typing.Optional[RequestOptions] = None
    ) -> JobsDeleteJobResponseBody:
        """
        Deletes an existing job.

        To use this endpoint, select **Write Jobs** under the Equipment category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        id : str
            A jobId or uuid in STRING format. JobId must be prefixed with `jobId:`(Examples: `"8d218e6c-7a16-4f9f-90f7-cc1d93b9e596"`, `"jobId:98765"`).

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        JobsDeleteJobResponseBody
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.delete_job(
                id="id",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.delete_job(id=id, request_options=request_options)
        return _response.data

    async def patch_job(
        self,
        *,
        id: str,
        job: PatchJobObjectRequestBody,
        keep_history: typing.Optional[bool] = OMIT,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> JobsPatchJobResponseBody:
        """
        Patches an existing job and returns it.

        To use this endpoint, select **Write Jobs** under the Equipment category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        id : str
            A jobId or uuid in STRING format. JobId must be prefixed with `jobId:`(Examples: `"8d218e6c-7a16-4f9f-90f7-cc1d93b9e596"`, `"jobId:98765"`).

        job : PatchJobObjectRequestBody

        keep_history : typing.Optional[bool]
            Defaults to true if user does not want to overwrite entire history for an active job (irrelevant for scheduled/completed jobs)

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        JobsPatchJobResponseBody
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara
        from samsara.v_20250611 import PatchJobObjectRequestBody

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.patch_job(
                id="id",
                job=PatchJobObjectRequestBody(),
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.patch_job(
            id=id, job=job, keep_history=keep_history, request_options=request_options
        )
        return _response.data

    async def get_devices(
        self,
        *,
        models: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        health_statuses: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        include_health: typing.Optional[bool] = None,
        after: typing.Optional[str] = None,
        limit: typing.Optional[int] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> DevicesGetDevicesResponseBody:
        """
        Returns all installed cameras (CM3x), vehicle gateways (VGs), and asset gateways (AGs) and their health information within an organization.

        **Beta:** This endpoint is in beta and is likely to change before being broadly available. Reach out to your Samsara Representative to have Devices API enabled for your organization.

         <b>Rate limit:</b> 5 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Devices** under the Devices category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        models : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            Optional string of comma separated device models. Valid values: `CM31`, `CM32`, `CM33`, `CM34`, `VG34`, `VG34M`, `VG34EU`, `VG34FN`, `VG54NA`, `VG54EU`, `VG55NA`, `VG55EU`, `AG24`, `AG24EU`, `AG26`, `AG26EU`, `AG45`, `AG45EU`, `AG46`, `AG46EU`, `AG46P`, `AG46PEU`, `AG51`, `AG51EU`, `AG52`, `AG52EU`, `AG53`, `AG53EU`

        health_statuses : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            Optional string of comma separated device health statuses. Valid values: `healthy`, `needsAttention`, `needsReplacement`, `dataPending`.

        include_health : typing.Optional[bool]
            Optional boolean to control whether device health information is returned in the response. Defaults to false.

        after : typing.Optional[str]
             If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        limit : typing.Optional[int]
            The limit for how many objects will be in the response. Default and max for this value is 100 objects.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        DevicesGetDevicesResponseBody
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.get_devices(
                include_health=True,
                after="after",
                limit=1,
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.get_devices(
            models=models,
            health_statuses=health_statuses,
            include_health=include_health,
            after=after,
            limit=limit,
            request_options=request_options,
        )
        return _response.data

    async def get_driver_trailer_assignments(
        self,
        *,
        driver_ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        after: typing.Optional[str] = None,
        include_external_ids: typing.Optional[bool] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> TrailerAssignmentsGetDriverTrailerAssignmentsResponseBody:
        """
        Get currently active driver-trailer assignments for driver.

         <b>Rate limit:</b> 5 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Assignments** under the Assignments category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        driver_ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
             A filter on the data based on this comma-separated list of driver IDs and externalIds. Example: `driverIds=1234,5678,payroll:4841`

        after : typing.Optional[str]
             If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        include_external_ids : typing.Optional[bool]
            Optional boolean indicating whether to return external IDs on supported entities

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        TrailerAssignmentsGetDriverTrailerAssignmentsResponseBody
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.get_driver_trailer_assignments()


        asyncio.run(main())
        """
        _response = await self._raw_client.get_driver_trailer_assignments(
            driver_ids=driver_ids,
            after=after,
            include_external_ids=include_external_ids,
            request_options=request_options,
        )
        return _response.data

    async def create_driver_trailer_assignment(
        self,
        *,
        driver_id: str,
        trailer_id: str,
        start_time: typing.Optional[str] = OMIT,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> TrailerAssignmentsCreateDriverTrailerAssignmentResponseBody:
        """
        Create a new driver-trailer assignment

         <b>Rate limit:</b> 5 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write Assignments** under the Assignments category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        driver_id : str
            ID of the driver. This can be either a unique Samsara ID or an [external ID](https://developers.samsara.com/docs/external-ids) for the driver.

        trailer_id : str
            ID of the trailer. This can be either a unique Samsara ID or an [external ID](https://developers.samsara.com/docs/external-ids) for the trailer.

        start_time : typing.Optional[str]
            The start time in RFC 3339 format. The time needs to be current or within the past 7 days. Defaults to now if not provided

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        TrailerAssignmentsCreateDriverTrailerAssignmentResponseBody
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.create_driver_trailer_assignment(
                driver_id="494123",
                trailer_id="12345",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.create_driver_trailer_assignment(
            driver_id=driver_id, trailer_id=trailer_id, start_time=start_time, request_options=request_options
        )
        return _response.data

    async def update_driver_trailer_assignment(
        self, *, id: str, end_time: str, request_options: typing.Optional[RequestOptions] = None
    ) -> TrailerAssignmentsUpdateDriverTrailerAssignmentResponseBody:
        """
        Update an existing driver-trailer assignment.

         <b>Rate limit:</b> 5 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write Assignments** under the Assignments category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        id : str
            Samsara ID for the assignment.

        end_time : str
            The end time in RFC 3339 format. The end time should not be in the future

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        TrailerAssignmentsUpdateDriverTrailerAssignmentResponseBody
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.update_driver_trailer_assignment(
                id="id",
                end_time="2019-06-13T19:08:25Z",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.update_driver_trailer_assignment(
            id=id, end_time=end_time, request_options=request_options
        )
        return _response.data

    async def get_engine_immobilizer_states(
        self,
        *,
        vehicle_ids: str,
        start_time: str,
        end_time: typing.Optional[str] = None,
        after: typing.Optional[str] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> EngineImmobilizerGetEngineImmobilizerStatesResponseBody:
        """
        Get the engine immobilizer states of the queried vehicles. If a vehicle has never had an engine immobilizer connected, there won't be any state returned for that vehicle.

         <b>Rate limit:</b> 5 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Vehicle Immobilization** under the Vehicles category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        vehicle_ids : str
             A filter on the data based on this comma-separated list of vehicle IDs and externalIds. Example: `vehicleIds=1234,5678,samsara.vin:1HGBH41JXMN109186`

        start_time : str
            A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).

        end_time : typing.Optional[str]
             An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).

        after : typing.Optional[str]
             If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        EngineImmobilizerGetEngineImmobilizerStatesResponseBody
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.get_engine_immobilizer_states(
                vehicle_ids="vehicleIds",
                start_time="startTime",
                end_time="endTime",
                after="after",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.get_engine_immobilizer_states(
            vehicle_ids=vehicle_ids,
            start_time=start_time,
            end_time=end_time,
            after=after,
            request_options=request_options,
        )
        return _response.data

    async def start_function_run(
        self,
        name: str,
        *,
        params_override: FunctionsStartFunctionRunRequestBodyParamsOverride,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> FunctionsStartFunctionRunResponseBody:
        """
        Start an asynchronous run for the specified Function. This endpoint allows you to override parameters available at runtime.

         <b>Rate limit:</b> 2 requests/min (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write Functions** under the Closed Beta category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        name : str
            The name of the Function to run.

        params_override : FunctionsStartFunctionRunRequestBodyParamsOverride
            Parameter overrides for the Function execution. Can be an empty object but must be provided.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        FunctionsStartFunctionRunResponseBody
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara
        from samsara.v_20250611.beta_ap_is import (
            FunctionsStartFunctionRunRequestBodyParamsOverride,
        )

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.start_function_run(
                name="name",
                params_override=FunctionsStartFunctionRunRequestBodyParamsOverride(),
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.start_function_run(
            name, params_override=params_override, request_options=request_options
        )
        return _response.data

    async def update_shipping_docs(
        self,
        *,
        hos_date: str,
        driver_id: str,
        shipping_docs: str,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> HosDailyLogsUpdateShippingDocsResponseBody:
        """
        Update the shippingDocs field of an existing assignment.

         <b>Rate limit:</b> 5 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write ELD Hours of Service (US)** under the Compliance category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        hos_date : str
            A start date in yyyy-mm-dd format. Required.

        driver_id : str
            ID of the driver for whom the duty status is being set.

        shipping_docs : str
            ShippingDocs associated with the driver for the day.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        HosDailyLogsUpdateShippingDocsResponseBody
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.update_shipping_docs(
                hos_date="hosDate",
                driver_id="driverID",
                shipping_docs="ShippingID1, ShippingID2",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.update_shipping_docs(
            hos_date=hos_date, driver_id=driver_id, shipping_docs=shipping_docs, request_options=request_options
        )
        return _response.data

    async def list_hub_capacities(
        self,
        *,
        hub_id: str,
        capacity_ids: typing.Optional[str] = None,
        capacity_names: typing.Optional[str] = None,
        start_time: typing.Optional[dt.datetime] = None,
        end_time: typing.Optional[dt.datetime] = None,
        after: typing.Optional[str] = None,
        limit: typing.Optional[int] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> HubCapacitiesListHubCapacitiesResponseBody:
        """
        Retrieve capacity types for a specific hub.

        **Beta:** This endpoint is in beta and is likely to change before being broadly available. Reach out to your Samsara Representative to have RoutePlanning APIs enabled for your organization.

         <b>Rate limit:</b> 10 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Routes** under the Driver Workflow category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        hub_id : str
            The hub identifier

        capacity_ids : typing.Optional[str]
            Comma-separated list of capacity IDs for filtering.

        capacity_names : typing.Optional[str]
            Comma-separated list of capacity names for filtering.

        start_time : typing.Optional[dt.datetime]
            Time filter of when the capacity was updated, in RFC 3339 format

        end_time : typing.Optional[dt.datetime]
            Time filter of when the capacity was updated, in RFC 3339 format

        after : typing.Optional[str]
            If specified, should be the endCursor from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        limit : typing.Optional[int]
            Maximum number of objects to return. Default and maximum is 100

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        HubCapacitiesListHubCapacitiesResponseBody
            OK response.

        Examples
        --------
        import asyncio
        import datetime

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.list_hub_capacities(
                hub_id="hubId",
                capacity_ids="capacityIds",
                capacity_names="capacityNames",
                start_time=datetime.datetime.fromisoformat(
                    "2024-01-15 09:30:00+00:00",
                ),
                end_time=datetime.datetime.fromisoformat(
                    "2024-01-15 09:30:00+00:00",
                ),
                after="after",
                limit=1,
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.list_hub_capacities(
            hub_id=hub_id,
            capacity_ids=capacity_ids,
            capacity_names=capacity_names,
            start_time=start_time,
            end_time=end_time,
            after=after,
            limit=limit,
            request_options=request_options,
        )
        return _response.data

    async def update_hub_location(
        self,
        id: str,
        *,
        data: UpdateHubLocationRequestBodyRequestBody,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> HubLocationsUpdateHubLocationResponseBody:
        """
        Update existing location by ID.

        **Beta:** This endpoint is in beta and is likely to change before being broadly available. Reach out to your Samsara Representative to have RoutePlanning APIs enabled for your organization.

         <b>Rate limit:</b> 100 requests/min (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write Routes** under the Driver Workflow category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        id : str
            The unique Samsara ID of the hub location to update

        data : UpdateHubLocationRequestBodyRequestBody

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        HubLocationsUpdateHubLocationResponseBody
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara
        from samsara.v_20250611 import (
            HubLocationServiceWindowInputRequestBody,
            UpdateHubLocationRequestBodyRequestBody,
        )

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.update_hub_location(
                id="id",
                data=UpdateHubLocationRequestBodyRequestBody(
                    address="123 Industrial Blvd, Los Angeles, CA 90210, US",
                    customer_location_id="LOC-123",
                    driver_instructions="sample instructions",
                    is_depot=False,
                    latitude=34.0522,
                    longitude=-118.2437,
                    name="Customer ABC Warehouse",
                    planner_notes="sample note",
                    service_time_seconds=1800,
                    service_windows=[
                        HubLocationServiceWindowInputRequestBody(
                            days_of_week=[
                                "monday",
                                "tuesday",
                                "wednesday",
                                "thursday",
                                "friday",
                            ],
                            end_time="17:00:00",
                            start_time="08:00:00",
                        )
                    ],
                    skills_required=["650e8400-e29b-41d4-a716-446655440001"],
                ),
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.update_hub_location(id, data=data, request_options=request_options)
        return _response.data

    async def list_hub_locations(
        self,
        *,
        hub_id: str,
        location_ids: typing.Optional[str] = None,
        customer_location_ids: typing.Optional[str] = None,
        start_time: typing.Optional[dt.datetime] = None,
        end_time: typing.Optional[dt.datetime] = None,
        after: typing.Optional[str] = None,
        limit: typing.Optional[int] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> HubLocationsListHubLocationsResponseBody:
        """
        Retrieve locations for a specific hub.

        **Beta:** This endpoint is in beta and is likely to change before being broadly available. Reach out to your Samsara Representative to have RoutePlanning APIs enabled for your organization.

         <b>Rate limit:</b> 10 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Routes** under the Driver Workflow category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        hub_id : str
            The hub identifier

        location_ids : typing.Optional[str]
            A comma-separated list of location IDs that can be used for filtering

        customer_location_ids : typing.Optional[str]
            A comma-separated list of customer provided location IDs that can be used for filtering

        start_time : typing.Optional[dt.datetime]
            Time filter of when the location was updated, in RFC 3339 format

        end_time : typing.Optional[dt.datetime]
            Time filter of when the location was updated, in RFC 3339 format

        after : typing.Optional[str]
            If specified, should be the endCursor from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        limit : typing.Optional[int]
            Maximum number of objects to return. Default and maximum is 100

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        HubLocationsListHubLocationsResponseBody
            OK response.

        Examples
        --------
        import asyncio
        import datetime

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.list_hub_locations(
                hub_id="hubId",
                location_ids="locationIds",
                customer_location_ids="customerLocationIds",
                start_time=datetime.datetime.fromisoformat(
                    "2024-01-15 09:30:00+00:00",
                ),
                end_time=datetime.datetime.fromisoformat(
                    "2024-01-15 09:30:00+00:00",
                ),
                after="after",
                limit=1,
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.list_hub_locations(
            hub_id=hub_id,
            location_ids=location_ids,
            customer_location_ids=customer_location_ids,
            start_time=start_time,
            end_time=end_time,
            after=after,
            limit=limit,
            request_options=request_options,
        )
        return _response.data

    async def create_hub_locations(
        self,
        *,
        data: typing.Sequence[HubLocationInputObjectRequestBody],
        request_options: typing.Optional[RequestOptions] = None,
    ) -> HubLocationsCreateHubLocationsResponseBody:
        """
        Create new locations.

        **Beta:** This endpoint is in beta and is likely to change before being broadly available. Reach out to your Samsara Representative to have RoutePlanning APIs enabled for your organization.

         <b>Rate limit:</b> 100 requests/min (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write Routes** under the Driver Workflow category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        data : typing.Sequence[HubLocationInputObjectRequestBody]
            An array of location objects to be created or updated

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        HubLocationsCreateHubLocationsResponseBody
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara
        from samsara.v_20250611 import (
            HubLocationInputObjectRequestBody,
            HubLocationServiceWindowInputRequestBody,
        )

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.create_hub_locations(
                data=[
                    HubLocationInputObjectRequestBody(
                        address="123 Industrial Blvd, Los Angeles, CA 90210, US",
                        customer_location_id="LOC-123",
                        driver_instructions="sample instructions",
                        hub_id="550e8400-e29b-41d4-a716-446655440000",
                        is_depot=False,
                        latitude=34.0522,
                        longitude=-118.2437,
                        name="Customer ABC Warehouse",
                        planner_notes="sample note",
                        service_time_seconds=1800,
                        service_windows=[
                            HubLocationServiceWindowInputRequestBody(
                                days_of_week=[
                                    "monday",
                                    "tuesday",
                                    "wednesday",
                                    "thursday",
                                    "friday",
                                ],
                                end_time="17:00:00",
                                start_time="08:00:00",
                            )
                        ],
                        skills_required=["650e8400-e29b-41d4-a716-446655440001"],
                    )
                ],
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.create_hub_locations(data=data, request_options=request_options)
        return _response.data

    async def create_hub_plan(
        self, *, hub_id: str, name: str, request_options: typing.Optional[RequestOptions] = None
    ) -> HubPlansCreateHubPlanResponseBody:
        """
        Create a new plan.

        **Beta:** This endpoint is in beta and is likely to change before being broadly available. Reach out to your Samsara Representative to have RoutePlanning APIs enabled for your organization.

         <b>Rate limit:</b> 5 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write Routes** under the Driver Workflow category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        hub_id : str
            The ID of the hub the plan belongs to

        name : str
            The name of the plan

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        HubPlansCreateHubPlanResponseBody
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.create_hub_plan(
                hub_id="550e8400-e29b-41d4-a716-446655440000",
                name="Weekly Plan - Week 15",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.create_hub_plan(hub_id=hub_id, name=name, request_options=request_options)
        return _response.data

    async def create_plan_orders(
        self,
        *,
        data: typing.Sequence[OrderInputObjectRequestBody],
        enable_update_existing_orders: typing.Optional[bool] = OMIT,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> PlanOrdersCreatePlanOrdersResponseBody:
        """
        Create one or more orders (bulk upsert). Pass an array of order objects; any object whose customerOrderId already exists will be updated, otherwise a new order is created. Functions can return JSON arrays in this Order POST format. Orders are initially created at the plan level but will migrate to hub-level entities, with planId becoming optional in future versions.

        **Beta:** This endpoint is in beta and is likely to change before being broadly available. Reach out to your Samsara Representative to have RoutePlanning APIs enabled for your organization.

         <b>Rate limit:</b> 5 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write Routes** under the Driver Workflow category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        data : typing.Sequence[OrderInputObjectRequestBody]
            An array of order objects to be created or updated

        enable_update_existing_orders : typing.Optional[bool]
            Enable update of existing orders if an order with the same customerOrderId exists. The input must match the same quantity dimensions as the existing order. If not provided, requests will fail if an order's customerOrderId already exists.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        PlanOrdersCreatePlanOrdersResponseBody
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara
        from samsara.v_20250611 import OrderInputObjectRequestBody

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.create_plan_orders(
                data=[
                    OrderInputObjectRequestBody(
                        customer_order_id="ORDER-2024-001",
                        hub_id="550e8400-e29b-41d4-a716-446655440000",
                        plan_id="650e8400-e29b-41d4-a716-446655440023",
                    )
                ],
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.create_plan_orders(
            data=data, enable_update_existing_orders=enable_update_existing_orders, request_options=request_options
        )
        return _response.data

    async def list_hub_plan_routes(
        self,
        *,
        plan_id: str,
        route_ids: typing.Optional[str] = None,
        start_time: typing.Optional[dt.datetime] = None,
        end_time: typing.Optional[dt.datetime] = None,
        after: typing.Optional[str] = None,
        limit: typing.Optional[int] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> HubPlanRoutesListHubPlanRoutesResponseBody:
        """
        Retrieve routes for a specific plan.

        **Beta:** This endpoint is in beta and is likely to change before being broadly available. Reach out to your Samsara Representative to have RoutePlanning APIs enabled for your organization.

         <b>Rate limit:</b> 10 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Routes** under the Driver Workflow category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        plan_id : str
            The plan identifier

        route_ids : typing.Optional[str]
            Comma-separated list of route IDs for filtering.

        start_time : typing.Optional[dt.datetime]
            Time filter of when the route was updated, in RFC 3339 format

        end_time : typing.Optional[dt.datetime]
            Time filter of when the route was updated, in RFC 3339 format

        after : typing.Optional[str]
            If specified, should be the endCursor from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        limit : typing.Optional[int]
            Maximum number of objects to return. Default and maximum is 100

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        HubPlanRoutesListHubPlanRoutesResponseBody
            OK response.

        Examples
        --------
        import asyncio
        import datetime

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.list_hub_plan_routes(
                plan_id="planId",
                route_ids="routeIds",
                start_time=datetime.datetime.fromisoformat(
                    "2024-01-15 09:30:00+00:00",
                ),
                end_time=datetime.datetime.fromisoformat(
                    "2024-01-15 09:30:00+00:00",
                ),
                after="after",
                limit=1,
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.list_hub_plan_routes(
            plan_id=plan_id,
            route_ids=route_ids,
            start_time=start_time,
            end_time=end_time,
            after=after,
            limit=limit,
            request_options=request_options,
        )
        return _response.data

    async def list_hub_plans(
        self,
        *,
        hub_id: str,
        plan_ids: typing.Optional[str] = None,
        start_time: typing.Optional[dt.datetime] = None,
        end_time: typing.Optional[dt.datetime] = None,
        after: typing.Optional[str] = None,
        limit: typing.Optional[int] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> HubPlansListHubPlansResponseBody:
        """
        Retrieve all plans for a specific hub.

        **Beta:** This endpoint is in beta and is likely to change before being broadly available. Reach out to your Samsara Representative to have RoutePlanning APIs enabled for your organization.

         <b>Rate limit:</b> 10 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Routes** under the Driver Workflow category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        hub_id : str
            The hub identifier

        plan_ids : typing.Optional[str]
            Comma-separated list of plan IDs for filtering.

        start_time : typing.Optional[dt.datetime]
            Time filter of when the plan was updated, in RFC 3339 format

        end_time : typing.Optional[dt.datetime]
            Time filter of when the plan was updated, in RFC 3339 format

        after : typing.Optional[str]
            If specified, should be the endCursor from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        limit : typing.Optional[int]
            Maximum number of objects to return. Default and maximum is 100

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        HubPlansListHubPlansResponseBody
            OK response.

        Examples
        --------
        import asyncio
        import datetime

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.list_hub_plans(
                hub_id="hubId",
                plan_ids="planIds",
                start_time=datetime.datetime.fromisoformat(
                    "2024-01-15 09:30:00+00:00",
                ),
                end_time=datetime.datetime.fromisoformat(
                    "2024-01-15 09:30:00+00:00",
                ),
                after="after",
                limit=1,
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.list_hub_plans(
            hub_id=hub_id,
            plan_ids=plan_ids,
            start_time=start_time,
            end_time=end_time,
            after=after,
            limit=limit,
            request_options=request_options,
        )
        return _response.data

    async def list_hub_skills(
        self,
        *,
        hub_id: str,
        skill_ids: typing.Optional[str] = None,
        skill_names: typing.Optional[str] = None,
        start_time: typing.Optional[dt.datetime] = None,
        end_time: typing.Optional[dt.datetime] = None,
        after: typing.Optional[str] = None,
        limit: typing.Optional[int] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> HubSkillsListHubSkillsResponseBody:
        """
        Retrieve skills for a specific hub.

        **Beta:** This endpoint is in beta and is likely to change before being broadly available. Reach out to your Samsara Representative to have RoutePlanning APIs enabled for your organization.

         <b>Rate limit:</b> 10 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Routes** under the Driver Workflow category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        hub_id : str
            The hub identifier

        skill_ids : typing.Optional[str]
            A comma-separated list of skill IDs that can be used for filtering.

        skill_names : typing.Optional[str]
            A comma-separated list of skill namess that can be used for filtering.

        start_time : typing.Optional[dt.datetime]
            Time filter of when the skill was updated, in RFC 3339 format

        end_time : typing.Optional[dt.datetime]
            Time filter of when the skill was updated, in RFC 3339 format

        after : typing.Optional[str]
            If specified, should be the endCursor from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        limit : typing.Optional[int]
            Maximum number of objects to return. Default and maximum is 100

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        HubSkillsListHubSkillsResponseBody
            OK response.

        Examples
        --------
        import asyncio
        import datetime

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.list_hub_skills(
                hub_id="hubId",
                skill_ids="skillIds",
                skill_names="skillNames",
                start_time=datetime.datetime.fromisoformat(
                    "2024-01-15 09:30:00+00:00",
                ),
                end_time=datetime.datetime.fromisoformat(
                    "2024-01-15 09:30:00+00:00",
                ),
                after="after",
                limit=1,
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.list_hub_skills(
            hub_id=hub_id,
            skill_ids=skill_ids,
            skill_names=skill_names,
            start_time=start_time,
            end_time=end_time,
            after=after,
            limit=limit,
            request_options=request_options,
        )
        return _response.data

    async def list_hubs(
        self,
        *,
        hub_ids: typing.Optional[str] = None,
        start_time: typing.Optional[dt.datetime] = None,
        end_time: typing.Optional[dt.datetime] = None,
        after: typing.Optional[str] = None,
        limit: typing.Optional[int] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> HubsListHubsResponseBody:
        """
        Retrieve all hubs (planners) in the organization. This endpoint supports pagination and filtering based on hub IDs and update times.

        **Beta:** This endpoint is in beta and is likely to change before being broadly available. Reach out to your Samsara Representative to have RoutePlanning APIs enabled for your organization.

         <b>Rate limit:</b> 10 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Routes** under the Driver Workflow category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        hub_ids : typing.Optional[str]
            A comma-separated list of hub IDs for filtering results.

        start_time : typing.Optional[dt.datetime]
            Returns hubs updated after the specified time in UTC

        end_time : typing.Optional[dt.datetime]
            Returns hubs updated before the specified time in UTC

        after : typing.Optional[str]
            If specified, should be the endCursor from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        limit : typing.Optional[int]
            Maximum number of objects to return. Default and maximum is 100

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        HubsListHubsResponseBody
            OK response.

        Examples
        --------
        import asyncio
        import datetime

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.list_hubs(
                hub_ids="hubIds",
                start_time=datetime.datetime.fromisoformat(
                    "2024-01-15 09:30:00+00:00",
                ),
                end_time=datetime.datetime.fromisoformat(
                    "2024-01-15 09:30:00+00:00",
                ),
                after="after",
                limit=1,
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.list_hubs(
            hub_ids=hub_ids,
            start_time=start_time,
            end_time=end_time,
            after=after,
            limit=limit,
            request_options=request_options,
        )
        return _response.data

    async def get_service_tasks(
        self,
        *,
        ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        include_archived: typing.Optional[bool] = None,
        after: typing.Optional[str] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> WorkOrdersGetServiceTasksResponseBody:
        """
        Gets service tasks.

         <b>Rate limit:</b> 5 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Work Orders** under the Closed Beta category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            Filter by the IDs. If not provided, won't filter by id.

        include_archived : typing.Optional[bool]
            Include archived service task definitions.

        after : typing.Optional[str]
             If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        WorkOrdersGetServiceTasksResponseBody
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.get_service_tasks(
                include_archived=True,
                after="after",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.get_service_tasks(
            ids=ids, include_archived=include_archived, after=after, request_options=request_options
        )
        return _response.data

    async def get_work_orders(
        self,
        *,
        ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        after: typing.Optional[str] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> WorkOrdersGetWorkOrdersResponseBody:
        """
        Gets work orders.

         <b>Rate limit:</b> 5 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Work Orders** under the Closed Beta category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            Filter by the IDs. Up to 100 ids. Returns all if no ids are provided.

        after : typing.Optional[str]
             If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        WorkOrdersGetWorkOrdersResponseBody
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.get_work_orders(
                after="after",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.get_work_orders(ids=ids, after=after, request_options=request_options)
        return _response.data

    async def post_work_orders(
        self,
        *,
        asset_id: str,
        assigned_user_id: typing.Optional[str] = OMIT,
        category: typing.Optional[WorkOrdersPostWorkOrdersRequestBodyCategory] = OMIT,
        created_by_user_id: typing.Optional[str] = OMIT,
        description: typing.Optional[str] = OMIT,
        discount: typing.Optional[WorkOrderDiscountObjectRequestBody] = OMIT,
        due_at_time: typing.Optional[dt.datetime] = OMIT,
        engine_hours: typing.Optional[int] = OMIT,
        items: typing.Optional[typing.Sequence[WorkOrderItemObjectRequestBody]] = OMIT,
        odometer_meters: typing.Optional[int] = OMIT,
        priority: typing.Optional[WorkOrdersPostWorkOrdersRequestBodyPriority] = OMIT,
        service_task_instances: typing.Optional[typing.Sequence[ServiceTaskInstanceInputObjectRequestBody]] = OMIT,
        tax: typing.Optional[WorkOrderTaxObjectRequestBody] = OMIT,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> WorkOrdersPostWorkOrdersResponseBody:
        """
        Creates a work order.

         <b>Rate limit:</b> 100 requests/min (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write Work Orders** under the Closed Beta category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        asset_id : str
            The ID of the asset.

        assigned_user_id : typing.Optional[str]
            The ID of the assigned mechanic.

        category : typing.Optional[WorkOrdersPostWorkOrdersRequestBodyCategory]
            The category of the work order  Valid values: `Annual`, `Corrective`, `Damage Repair`, `Preventive`, `Recall`, `Unspecified`

        created_by_user_id : typing.Optional[str]
            The ID of the creator of the work order.

        description : typing.Optional[str]
            A description of what needs to be fixed.

        discount : typing.Optional[WorkOrderDiscountObjectRequestBody]

        due_at_time : typing.Optional[dt.datetime]
            The due date of the work order in RFC 3339 format.

        engine_hours : typing.Optional[int]
            The engine hours at the time of the work order. Will default to current asset reading if unset.

        items : typing.Optional[typing.Sequence[WorkOrderItemObjectRequestBody]]
            Items related to the work order.

        odometer_meters : typing.Optional[int]
            The odometer reading at the time of the work order. Will default to current asset reading if unset.

        priority : typing.Optional[WorkOrdersPostWorkOrdersRequestBodyPriority]
            The priority of the work order  Valid values: `High`, `Low`, `Medium`, `Urgent`

        service_task_instances : typing.Optional[typing.Sequence[ServiceTaskInstanceInputObjectRequestBody]]
            Service Tasks for the work order.

        tax : typing.Optional[WorkOrderTaxObjectRequestBody]

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        WorkOrdersPostWorkOrdersResponseBody
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.post_work_orders(
                asset_id="12443",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.post_work_orders(
            asset_id=asset_id,
            assigned_user_id=assigned_user_id,
            category=category,
            created_by_user_id=created_by_user_id,
            description=description,
            discount=discount,
            due_at_time=due_at_time,
            engine_hours=engine_hours,
            items=items,
            odometer_meters=odometer_meters,
            priority=priority,
            service_task_instances=service_task_instances,
            tax=tax,
            request_options=request_options,
        )
        return _response.data

    async def delete_work_orders(self, *, id: str, request_options: typing.Optional[RequestOptions] = None) -> None:
        """
        Deletes a work order.

         <b>Rate limit:</b> 100 requests/min (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write Work Orders** under the Closed Beta category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        id : str
            The unique id of the work order.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        None

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.delete_work_orders(
                id="id",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.delete_work_orders(id=id, request_options=request_options)
        return _response.data

    async def patch_work_orders(
        self,
        *,
        id: str,
        assigned_user_id: typing.Optional[str] = OMIT,
        category: typing.Optional[WorkOrdersPatchWorkOrdersRequestBodyCategory] = OMIT,
        closing_notes: typing.Optional[str] = OMIT,
        completed_at_time: typing.Optional[dt.datetime] = OMIT,
        description: typing.Optional[str] = OMIT,
        discount: typing.Optional[WorkOrderDiscountObjectRequestBody] = OMIT,
        due_at_time: typing.Optional[dt.datetime] = OMIT,
        engine_hours: typing.Optional[int] = OMIT,
        items: typing.Optional[typing.Sequence[WorkOrderItemObjectRequestBody]] = OMIT,
        odometer_meters: typing.Optional[int] = OMIT,
        priority: typing.Optional[WorkOrdersPatchWorkOrdersRequestBodyPriority] = OMIT,
        service_task_instances: typing.Optional[typing.Sequence[ServiceTaskInstanceInputObjectRequestBody]] = OMIT,
        status: typing.Optional[WorkOrdersPatchWorkOrdersRequestBodyStatus] = OMIT,
        tax: typing.Optional[WorkOrderTaxObjectRequestBody] = OMIT,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> WorkOrdersPatchWorkOrdersResponseBody:
        """
        Updates a work order.

         <b>Rate limit:</b> 100 requests/min (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write Work Orders** under the Closed Beta category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        id : str
            The unique id of the work order.

        assigned_user_id : typing.Optional[str]
            The ID of the assigned mechanic.

        category : typing.Optional[WorkOrdersPatchWorkOrdersRequestBodyCategory]
            The category of the work order  Valid values: `Annual`, `Corrective`, `Damage Repair`, `Preventive`, `Recall`, `Unspecified`

        closing_notes : typing.Optional[str]
            Notes on the work order.

        completed_at_time : typing.Optional[dt.datetime]
            The time the work order was completed in RFC 3339 format. Is automatically set when the status changes and this field is not provided.

        description : typing.Optional[str]
            A description of what needs to be fixed.

        discount : typing.Optional[WorkOrderDiscountObjectRequestBody]

        due_at_time : typing.Optional[dt.datetime]
            The due date of the work order in RFC 3339 format.

        engine_hours : typing.Optional[int]
            The engine hours at the time of the work order. Will default to current asset reading if unset.

        items : typing.Optional[typing.Sequence[WorkOrderItemObjectRequestBody]]
            Items related to the work order.

        odometer_meters : typing.Optional[int]
            The odometer reading at the time of the work order. Will default to current asset reading if unset.

        priority : typing.Optional[WorkOrdersPatchWorkOrdersRequestBodyPriority]
            The priority of the work order  Valid values: `High`, `Low`, `Medium`, `Urgent`

        service_task_instances : typing.Optional[typing.Sequence[ServiceTaskInstanceInputObjectRequestBody]]
            Service Tasks for the work order.

        status : typing.Optional[WorkOrdersPatchWorkOrdersRequestBodyStatus]
            The status of the work order  Valid values: `Assigned`, `Cancelled`, `Closed`, `Completed`, `In Progress`, `On Hold`, `Open`, `Pending Approval`, `Pending Parts`

        tax : typing.Optional[WorkOrderTaxObjectRequestBody]

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        WorkOrdersPatchWorkOrdersResponseBody
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.patch_work_orders(
                id="5",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.patch_work_orders(
            id=id,
            assigned_user_id=assigned_user_id,
            category=category,
            closing_notes=closing_notes,
            completed_at_time=completed_at_time,
            description=description,
            discount=discount,
            due_at_time=due_at_time,
            engine_hours=engine_hours,
            items=items,
            odometer_meters=odometer_meters,
            priority=priority,
            service_task_instances=service_task_instances,
            status=status,
            tax=tax,
            request_options=request_options,
        )
        return _response.data

    async def stream_work_orders(
        self,
        *,
        start_time: str,
        after: typing.Optional[str] = None,
        end_time: typing.Optional[str] = None,
        work_order_statuses: typing.Optional[
            typing.Union[
                StreamWorkOrdersRequestWorkOrderStatusesItem,
                typing.Sequence[StreamWorkOrdersRequestWorkOrderStatusesItem],
            ]
        ] = None,
        asset_ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        assigned_user_ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> WorkOrdersStreamWorkOrdersResponseBody:
        """
        Stream work orders.

         <b>Rate limit:</b> 5 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Work Orders** under the Closed Beta category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        start_time : str
            A start time in RFC 3339 format. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).

        after : typing.Optional[str]
             If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        end_time : typing.Optional[str]
             An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).

        work_order_statuses : typing.Optional[typing.Union[StreamWorkOrdersRequestWorkOrderStatusesItem, typing.Sequence[StreamWorkOrdersRequestWorkOrderStatusesItem]]]
            Work Order status filter.

        asset_ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            Work Order asset id filter. Up to 50 ids.

        assigned_user_ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            Work Order assigned user id filter. Up to 50 ids.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        WorkOrdersStreamWorkOrdersResponseBody
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.stream_work_orders(
                after="after",
                start_time="startTime",
                end_time="endTime",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.stream_work_orders(
            start_time=start_time,
            after=after,
            end_time=end_time,
            work_order_statuses=work_order_statuses,
            asset_ids=asset_ids,
            assigned_user_ids=assigned_user_ids,
            request_options=request_options,
        )
        return _response.data

    async def post_readings(
        self,
        *,
        data: typing.Sequence[ReadingDatapointRequestBody],
        request_options: typing.Optional[RequestOptions] = None,
    ) -> None:
        """
        Ingest new readings. This endpoint allows the ingestion of batches of readings.

        Ingesting readings is only supported for assets created using the POST /assets API endpoint with readingsIngestionEnabled set to true. To see a full list of readings available for ingestion use the GET readings definitions API. When ingesting location data, the readingID 'location' must be used and the value object must contain at least the following fields: 'speed', 'latitude', 'longitude'.

         <b>Rate limit:</b> 10 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write Readings** under the Closed Beta category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        data : typing.Sequence[ReadingDatapointRequestBody]
            An array of readings data points to create.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        None

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara
        from samsara.v_20250611 import ReadingDatapointRequestBody

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.post_readings(
                data=[
                    ReadingDatapointRequestBody(
                        entity_id="123451234512345",
                        happened_at_time="2023-10-27T10:00:00Z",
                        reading_id="airInletPressure",
                        value={"key": "value"},
                    )
                ],
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.post_readings(data=data, request_options=request_options)
        return _response.data

    async def list_readings_definitions(
        self,
        *,
        after: typing.Optional[str] = None,
        ids: typing.Optional[str] = None,
        entity_types: typing.Optional[str] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> ReadingsListReadingsDefinitionsResponseBody:
        """
        An introspection endpoint for discovering the set of readings including their name, description, data type, unit, and other metadata.

         <b>Rate limit:</b> 10 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Readings** under the Closed Beta category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        after : typing.Optional[str]
             If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        ids : typing.Optional[str]
            A String of comma separated reading IDs. Include up to 50 readings IDs. If not set, all readings are returned.

        entity_types : typing.Optional[str]
            A list of entity type to return readings for.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        ReadingsListReadingsDefinitionsResponseBody
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.list_readings_definitions(
                after="after",
                ids="ids",
                entity_types="entityTypes",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.list_readings_definitions(
            after=after, ids=ids, entity_types=entity_types, request_options=request_options
        )
        return _response.data

    async def get_readings_history(
        self,
        *,
        reading_id: str,
        entity_type: str,
        after: typing.Optional[str] = None,
        entity_ids: typing.Optional[str] = None,
        external_ids: typing.Optional[str] = None,
        start_time: typing.Optional[str] = None,
        end_time: typing.Optional[str] = None,
        feed: typing.Optional[bool] = None,
        include_external_ids: typing.Optional[bool] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> ReadingsGetReadingsHistoryResponseBody:
        """
        Get the values of a reading for a set of entities within the specified time range. Returns a paginated response with data for the specified resource IDs where startTime <= happenedAtTime < endTime. End time of null implies endTime is infinite and all known readings are returned.

         <b>Rate limit:</b> 10 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Readings** under the Closed Beta category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        reading_id : str
            The reading ID to retrieve data for. Use /readings/definitions endpoint to get a list of valid reading IDs.

        entity_type : str
            A entity type of the entityIds or externalIds to fetch readings for. Use /readings/definitions endpoint to get a list of valid entity types.

        after : typing.Optional[str]
             If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        entity_ids : typing.Optional[str]
            A filter on the data based on this comma-separated list of entity IDs or external IDs.

        external_ids : typing.Optional[str]
            A filter on the data based on this comma-separated list of external IDs.

        start_time : typing.Optional[str]
            A filter on the data that returns the last known data points with timestamps greater than or equal to this value. Must be a string in RFC 3339 format. Millisecond precision and timezones are supported.

        end_time : typing.Optional[str]
            A filter on the data that returns the last known data points with timestamps less than or equal to this value. If not set, the time of the request is considered the endTime. Must be a string in RFC 3339 format. Millisecond precision and timezones are supported.

        feed : typing.Optional[bool]
            Set to true to enable feed mode for continuous reading updates. When enabled, the API always includes an endCursor in the response. If hasNextPage is false, it indicates that no new data is currently available — wait at least 5 seconds before making the next request to avoid unnecessary polling.

        include_external_ids : typing.Optional[bool]
            Optional boolean indicating whether to return external IDs on supported entities

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        ReadingsGetReadingsHistoryResponseBody
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.get_readings_history(
                after="after",
                reading_id="readingId",
                entity_ids="entityIds",
                entity_type="entityType",
                external_ids="externalIds",
                start_time="startTime",
                end_time="endTime",
                feed=True,
                include_external_ids=True,
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.get_readings_history(
            reading_id=reading_id,
            entity_type=entity_type,
            after=after,
            entity_ids=entity_ids,
            external_ids=external_ids,
            start_time=start_time,
            end_time=end_time,
            feed=feed,
            include_external_ids=include_external_ids,
            request_options=request_options,
        )
        return _response.data

    async def get_readings_snapshot(
        self,
        *,
        reading_ids: str,
        entity_type: str,
        after: typing.Optional[str] = None,
        entity_ids: typing.Optional[str] = None,
        external_ids: typing.Optional[str] = None,
        as_of_time: typing.Optional[str] = None,
        include_external_ids: typing.Optional[bool] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> ReadingsGetReadingsSnapshotResponseBody:
        """
        An endpoint to get the last value of a reading for a set of entities at the specified time.

         <b>Rate limit:</b> 10 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Readings** under the Closed Beta category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        reading_ids : str
            A collection of comma separated reading IDs. Include up to 3 readings IDs. Use /readings/definitions endpoint to get a list of valid reading IDs.

        entity_type : str
            A entity type of the entityIds or externalIds to fetch readings for. Use /readings/definitions endpoint to get a list of valid entity types.

        after : typing.Optional[str]
             If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        entity_ids : typing.Optional[str]
            A filter on the data based on this comma-separated list of entity IDs or external IDs.

        external_ids : typing.Optional[str]
            A filter on the data based on this comma-separated list of external IDs.

        as_of_time : typing.Optional[str]
            A filter on the data that returns the last known data points with timestamps less than or equal to this value. Defaults to now if not provided. Must be a string in RFC 3339 format. Millisecond precision and timezones are supported.

        include_external_ids : typing.Optional[bool]
            Optional boolean indicating whether to return external IDs on supported entities

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        ReadingsGetReadingsSnapshotResponseBody
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.get_readings_snapshot(
                after="after",
                reading_ids="readingIds",
                entity_ids="entityIds",
                external_ids="externalIds",
                as_of_time="asOfTime",
                entity_type="entityType",
                include_external_ids=True,
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.get_readings_snapshot(
            reading_ids=reading_ids,
            entity_type=entity_type,
            after=after,
            entity_ids=entity_ids,
            external_ids=external_ids,
            as_of_time=as_of_time,
            include_external_ids=include_external_ids,
            request_options=request_options,
        )
        return _response.data

    async def post_training_assignments(
        self,
        *,
        course_id: str,
        due_at_time: str,
        learner_ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> TrainingAssignmentsPostTrainingAssignmentsResponseBody:
        """
        Create training assignments. Existing assignments will remain unchanged.

        **Beta:** This endpoint is in beta and is likely to change before being broadly available. Reach out to your Samsara Representative to have Training APIs enabled for your organization.

         <b>Rate limit:</b> 10 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write Training Assignments** under the Training Assignments category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        course_id : str
            String for the course ID.

        due_at_time : str
            Due date of the training assignment in RFC 3339 format. Millisecond precision and timezones are supported.

        learner_ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            Optional string of comma separated learner IDs. If learner ID is present, training assignments for the specified learner(s) will be returned. Max value for this value is 100 objects. Example: `learnerIds=driver-281474,driver-46282156`

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        TrainingAssignmentsPostTrainingAssignmentsResponseBody
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.post_training_assignments(
                course_id="courseId",
                due_at_time="dueAtTime",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.post_training_assignments(
            course_id=course_id, due_at_time=due_at_time, learner_ids=learner_ids, request_options=request_options
        )
        return _response.data

    async def delete_training_assignments(
        self,
        *,
        ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> None:
        """
        This endpoint supports batch deletion operations. The response does not indicate which specific deletions, if any, have failed. On a successful deletion or partial failure, a ‘204 No Content’ status is returned.

        **Beta:** This endpoint is in beta and is likely to change before being broadly available. Reach out to your Samsara Representative to have Training APIs enabled for your organization.

         <b>Rate limit:</b> 10 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write Training Assignments** under the Training Assignments category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            String of comma separated assignments IDs. Max value for this value is 100 objects .Example: `ids=a4db8702-79d5-4396-a717-e301d52ecc11,c6490f6a-d84e-49b5-b0ad-b6baae304075`

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        None

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.delete_training_assignments()


        asyncio.run(main())
        """
        _response = await self._raw_client.delete_training_assignments(ids=ids, request_options=request_options)
        return _response.data

    async def patch_training_assignments(
        self,
        *,
        due_at_time: str,
        ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> TrainingAssignmentsPatchTrainingAssignmentsResponseBody:
        """
        Update training assignments.

        **Beta:** This endpoint is in beta and is likely to change before being broadly available. Reach out to your Samsara Representative to have Training APIs enabled for your organization.

         <b>Rate limit:</b> 10 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write Training Assignments** under the Training Assignments category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        due_at_time : str
            Due date of the training assignment in RFC 3339 format. Millisecond precision and timezones are supported.

        ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            String of comma separated assignments IDs. Max value for this value is 100 objects .Example: `ids=a4db8702-79d5-4396-a717-e301d52ecc11,c6490f6a-d84e-49b5-b0ad-b6baae304075`

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        TrainingAssignmentsPatchTrainingAssignmentsResponseBody
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.patch_training_assignments(
                due_at_time="dueAtTime",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.patch_training_assignments(
            due_at_time=due_at_time, ids=ids, request_options=request_options
        )
        return _response.data

    async def get_training_assignments_stream(
        self,
        *,
        start_time: str,
        after: typing.Optional[str] = None,
        end_time: typing.Optional[str] = None,
        learner_ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        course_ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        status: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> TrainingAssignmentsGetTrainingAssignmentsStreamResponseBody:
        """
        Returns all training assignments data that has been created or modified for your organization based on the time parameters passed in. Results are paginated and are sorted by last modified date. If you include an endTime, the endpoint will return data up until that point (exclusive). If you don't include an endTime, you can continue to poll the API real-time with the pagination cursor that gets returned on every call.

        **Beta:** This endpoint is in beta and is likely to change before being broadly available. Reach out to your Samsara Representative to have Training APIs enabled for your organization.

         <b>Rate limit:</b> 5 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Training Assignments** under the Training Assignments category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        start_time : str
             A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).

        after : typing.Optional[str]
             If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        end_time : typing.Optional[str]
             An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).

        learner_ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            Optional string of comma separated learner IDs. If learner ID is present, training assignments for the specified learner(s) will be returned. Max value for this value is 100 objects. Example: `learnerIds=driver-281474,driver-46282156`

        course_ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            Optional string of comma separated course IDs. If course ID is present, training assignments for the specified course ID(s) will be returned. Max value for this value is 100 objects. Defaults to returning all courses. Example: `courseIds=a4db8702-79d5-4396-a717-e301d52ecc11,c6490f6a-d84e-49b5-b0ad-b6baae304075`

        status : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            Optional string of comma separated values. If status is present, training assignments for the specified status(s) will be returned. Valid values: "notStarted", "inProgress", "completed". Defaults to returning all courses.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        TrainingAssignmentsGetTrainingAssignmentsStreamResponseBody
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.get_training_assignments_stream(
                after="after",
                start_time="startTime",
                end_time="endTime",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.get_training_assignments_stream(
            start_time=start_time,
            after=after,
            end_time=end_time,
            learner_ids=learner_ids,
            course_ids=course_ids,
            status=status,
            request_options=request_options,
        )
        return _response.data

    async def get_training_courses(
        self,
        *,
        after: typing.Optional[str] = None,
        course_ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        category_ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        status: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> TrainingCoursesGetTrainingCoursesResponseBody:
        """
        Returns all training courses data. Results are paginated.
         Courses in the ‘draft’ status are excluded from the data returned by this endpoint.

         <b>Rate limit:</b> 5 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Training Courses** under the Training Courses category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        after : typing.Optional[str]
             If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        course_ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            Optional string of comma separated course IDs. If course ID is present, training assignments for the specified course ID(s) will be returned. Max value for this value is 100 objects. Defaults to returning all courses. Example: `courseIds=a4db8702-79d5-4396-a717-e301d52ecc11,c6490f6a-d84e-49b5-b0ad-b6baae304075`

        category_ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            Optional string of comma separated course category IDs. If courseCategoryId is present, training courses for the specified course category(s) will be returned. Max value for this value is 100 objects. Defaults to returning all courses.  Example: `categoryIds=a4db8702-79d5-4396-a717-e301d52ecc11,c6490f6a-d84e-49b5-b0ad-b6baae304075`

        status : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            Optional string of comma separated values. If status is present, training courses with the specified status(s) will be returned. Valid values: “published”, “deleted”, “archived”. Defaults to returning all courses.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        TrainingCoursesGetTrainingCoursesResponseBody
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.get_training_courses(
                after="after",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.get_training_courses(
            after=after,
            course_ids=course_ids,
            category_ids=category_ids,
            status=status,
            request_options=request_options,
        )
        return _response.data

    async def get_trips(
        self,
        *,
        start_time: str,
        include_asset: typing.Optional[bool] = None,
        completion_status: typing.Optional[GetTripsRequestCompletionStatus] = None,
        end_time: typing.Optional[str] = None,
        query_by: typing.Optional[GetTripsRequestQueryBy] = None,
        after: typing.Optional[str] = None,
        ids: typing.Optional[typing.Union[str, typing.Sequence[str]]] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> TripsGetTripsResponseBody:
        """
        This endpoint will return trips that have been collected for your organization based on the time parameters passed in. Results are paginated. Reach out to your Samsara Representative to have this API enabled for your organization.

         <b>Rate limit:</b> 5 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Trips** under the Trips category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        start_time : str
            RFC 3339 timestamp that indicates when to begin receiving data. Value is compared against `updatedAtTime` or `tripStartTime` depending on the queryBy parameter.

        include_asset : typing.Optional[bool]
            Indicates whether or not to return expanded “asset” data

        completion_status : typing.Optional[GetTripsRequestCompletionStatus]
            Filters trips based on a specific completion status  Valid values: `inProgress`, `completed`, `all`

        end_time : typing.Optional[str]
            RFC 3339 timestamp which is compared against `updatedAtTime` or `tripStartTime` depending on the queryBy parameter. If not provided then the endpoint behaves as an unending feed of changes.

        query_by : typing.Optional[GetTripsRequestQueryBy]
            Decide which timestamp the `startTime` and `endTime` are compared to.  Valid values: `updatedAtTime`, `tripStartTime`

        after : typing.Optional[str]
             If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        ids : typing.Optional[typing.Union[str, typing.Sequence[str]]]
            Comma-separated list of asset IDs. Include up to 50 asset IDs.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        TripsGetTripsResponseBody
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.v_20250611.beta_ap_is.get_trips(
                start_time="startTime",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.get_trips(
            start_time=start_time,
            include_asset=include_asset,
            completion_status=completion_status,
            end_time=end_time,
            query_by=query_by,
            after=after,
            ids=ids,
            request_options=request_options,
        )
        return _response.data
