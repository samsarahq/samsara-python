# This file was auto-generated by Fern from our API Definition.

from ..core.client_wrapper import AsyncClientWrapper, SyncClientWrapper
from .addresses.client import AddressesClient, AsyncAddressesClient
from .alerts.client import AlertsClient, AsyncAlertsClient
from .assets.client import AssetsClient, AsyncAssetsClient
from .attributes.client import AsyncAttributesClient, AttributesClient
from .beta_ap_is.client import AsyncBetaApIsClient, BetaApIsClient
from .carrier_proposed_assignments.client import AsyncCarrierProposedAssignmentsClient, CarrierProposedAssignmentsClient
from .coaching.client import AsyncCoachingClient, CoachingClient
from .contacts.client import AsyncContactsClient, ContactsClient
from .documents.client import AsyncDocumentsClient, DocumentsClient
from .driver_qr_codes.client import AsyncDriverQrCodesClient, DriverQrCodesClient
from .driver_vehicle_assignments.client import AsyncDriverVehicleAssignmentsClient, DriverVehicleAssignmentsClient
from .drivers.client import AsyncDriversClient, DriversClient
from .equipment.client import AsyncEquipmentClient, EquipmentClient
from .fleet.client import AsyncFleetClient, FleetClient
from .forms.client import AsyncFormsClient, FormsClient
from .fuel_and_energy.client import AsyncFuelAndEnergyClient, FuelAndEnergyClient
from .gateways.client import AsyncGatewaysClient, GatewaysClient
from .hours_of_service.client import AsyncHoursOfServiceClient, HoursOfServiceClient
from .idling.client import AsyncIdlingClient, IdlingClient
from .ifta.client import AsyncIftaClient, IftaClient
from .industrial.client import AsyncIndustrialClient, IndustrialClient
from .issues.client import AsyncIssuesClient, IssuesClient
from .legacy.client import AsyncLegacyClient, LegacyClient
from .legacy_ap_is.client import AsyncLegacyApIsClient, LegacyApIsClient
from .live_sharing_links.client import AsyncLiveSharingLinksClient, LiveSharingLinksClient
from .location_and_speed.client import AsyncLocationAndSpeedClient, LocationAndSpeedClient
from .maintenance.client import AsyncMaintenanceClient, MaintenanceClient
from .media.client import AsyncMediaClient, MediaClient
from .messages.client import AsyncMessagesClient, MessagesClient
from .organization_info.client import AsyncOrganizationInfoClient, OrganizationInfoClient
from .preview_ap_is.client import AsyncPreviewApIsClient, PreviewApIsClient
from .raw_client import AsyncRawV20250611Client, RawV20250611Client
from .routes.client import AsyncRoutesClient, RoutesClient
from .safety.client import AsyncSafetyClient, SafetyClient
from .sensors.client import AsyncSensorsClient, SensorsClient
from .settings.client import AsyncSettingsClient, SettingsClient
from .speeding_intervals.client import AsyncSpeedingIntervalsClient, SpeedingIntervalsClient
from .tachograph_eu_only.client import AsyncTachographEuOnlyClient, TachographEuOnlyClient
from .tags.client import AsyncTagsClient, TagsClient
from .trailer_assignments.client import AsyncTrailerAssignmentsClient, TrailerAssignmentsClient
from .trailers.client import AsyncTrailersClient, TrailersClient
from .trips.client import AsyncTripsClient, TripsClient
from .users.client import AsyncUsersClient, UsersClient
from .vehicle_locations.client import AsyncVehicleLocationsClient, VehicleLocationsClient
from .vehicle_stats.client import AsyncVehicleStatsClient, VehicleStatsClient
from .vehicles.client import AsyncVehiclesClient, VehiclesClient
from .webhooks.client import AsyncWebhooksClient, WebhooksClient


class V20250611Client:
    def __init__(self, *, client_wrapper: SyncClientWrapper):
        self._raw_client = RawV20250611Client(client_wrapper=client_wrapper)
        self.addresses = AddressesClient(client_wrapper=client_wrapper)

        self.alerts = AlertsClient(client_wrapper=client_wrapper)

        self.assets = AssetsClient(client_wrapper=client_wrapper)

        self.beta_ap_is = BetaApIsClient(client_wrapper=client_wrapper)

        self.location_and_speed = LocationAndSpeedClient(client_wrapper=client_wrapper)

        self.attributes = AttributesClient(client_wrapper=client_wrapper)

        self.media = MediaClient(client_wrapper=client_wrapper)

        self.coaching = CoachingClient(client_wrapper=client_wrapper)

        self.contacts = ContactsClient(client_wrapper=client_wrapper)

        self.maintenance = MaintenanceClient(client_wrapper=client_wrapper)

        self.fuel_and_energy = FuelAndEnergyClient(client_wrapper=client_wrapper)

        self.driver_qr_codes = DriverQrCodesClient(client_wrapper=client_wrapper)

        self.carrier_proposed_assignments = CarrierProposedAssignmentsClient(client_wrapper=client_wrapper)

        self.legacy_ap_is = LegacyApIsClient(client_wrapper=client_wrapper)

        self.documents = DocumentsClient(client_wrapper=client_wrapper)

        self.driver_vehicle_assignments = DriverVehicleAssignmentsClient(client_wrapper=client_wrapper)

        self.drivers = DriversClient(client_wrapper=client_wrapper)

        self.tachograph_eu_only = TachographEuOnlyClient(client_wrapper=client_wrapper)

        self.equipment = EquipmentClient(client_wrapper=client_wrapper)

        self.hours_of_service = HoursOfServiceClient(client_wrapper=client_wrapper)

        self.ifta = IftaClient(client_wrapper=client_wrapper)

        self.routes = RoutesClient(client_wrapper=client_wrapper)

        self.safety = SafetyClient(client_wrapper=client_wrapper)

        self.settings = SettingsClient(client_wrapper=client_wrapper)

        self.trailers = TrailersClient(client_wrapper=client_wrapper)

        self.vehicles = VehiclesClient(client_wrapper=client_wrapper)

        self.vehicle_locations = VehicleLocationsClient(client_wrapper=client_wrapper)

        self.vehicle_stats = VehicleStatsClient(client_wrapper=client_wrapper)

        self.forms = FormsClient(client_wrapper=client_wrapper)

        self.gateways = GatewaysClient(client_wrapper=client_wrapper)

        self.idling = IdlingClient(client_wrapper=client_wrapper)

        self.industrial = IndustrialClient(client_wrapper=client_wrapper)

        self.issues = IssuesClient(client_wrapper=client_wrapper)

        self.live_sharing_links = LiveSharingLinksClient(client_wrapper=client_wrapper)

        self.organization_info = OrganizationInfoClient(client_wrapper=client_wrapper)

        self.preview_ap_is = PreviewApIsClient(client_wrapper=client_wrapper)

        self.speeding_intervals = SpeedingIntervalsClient(client_wrapper=client_wrapper)

        self.tags = TagsClient(client_wrapper=client_wrapper)

        self.users = UsersClient(client_wrapper=client_wrapper)

        self.legacy = LegacyClient(client_wrapper=client_wrapper)

        self.messages = MessagesClient(client_wrapper=client_wrapper)

        self.trailer_assignments = TrailerAssignmentsClient(client_wrapper=client_wrapper)

        self.trips = TripsClient(client_wrapper=client_wrapper)

        self.sensors = SensorsClient(client_wrapper=client_wrapper)

        self.webhooks = WebhooksClient(client_wrapper=client_wrapper)

        self.fleet = FleetClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> RawV20250611Client:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        RawV20250611Client
        """
        return self._raw_client


class AsyncV20250611Client:
    def __init__(self, *, client_wrapper: AsyncClientWrapper):
        self._raw_client = AsyncRawV20250611Client(client_wrapper=client_wrapper)
        self.addresses = AsyncAddressesClient(client_wrapper=client_wrapper)

        self.alerts = AsyncAlertsClient(client_wrapper=client_wrapper)

        self.assets = AsyncAssetsClient(client_wrapper=client_wrapper)

        self.beta_ap_is = AsyncBetaApIsClient(client_wrapper=client_wrapper)

        self.location_and_speed = AsyncLocationAndSpeedClient(client_wrapper=client_wrapper)

        self.attributes = AsyncAttributesClient(client_wrapper=client_wrapper)

        self.media = AsyncMediaClient(client_wrapper=client_wrapper)

        self.coaching = AsyncCoachingClient(client_wrapper=client_wrapper)

        self.contacts = AsyncContactsClient(client_wrapper=client_wrapper)

        self.maintenance = AsyncMaintenanceClient(client_wrapper=client_wrapper)

        self.fuel_and_energy = AsyncFuelAndEnergyClient(client_wrapper=client_wrapper)

        self.driver_qr_codes = AsyncDriverQrCodesClient(client_wrapper=client_wrapper)

        self.carrier_proposed_assignments = AsyncCarrierProposedAssignmentsClient(client_wrapper=client_wrapper)

        self.legacy_ap_is = AsyncLegacyApIsClient(client_wrapper=client_wrapper)

        self.documents = AsyncDocumentsClient(client_wrapper=client_wrapper)

        self.driver_vehicle_assignments = AsyncDriverVehicleAssignmentsClient(client_wrapper=client_wrapper)

        self.drivers = AsyncDriversClient(client_wrapper=client_wrapper)

        self.tachograph_eu_only = AsyncTachographEuOnlyClient(client_wrapper=client_wrapper)

        self.equipment = AsyncEquipmentClient(client_wrapper=client_wrapper)

        self.hours_of_service = AsyncHoursOfServiceClient(client_wrapper=client_wrapper)

        self.ifta = AsyncIftaClient(client_wrapper=client_wrapper)

        self.routes = AsyncRoutesClient(client_wrapper=client_wrapper)

        self.safety = AsyncSafetyClient(client_wrapper=client_wrapper)

        self.settings = AsyncSettingsClient(client_wrapper=client_wrapper)

        self.trailers = AsyncTrailersClient(client_wrapper=client_wrapper)

        self.vehicles = AsyncVehiclesClient(client_wrapper=client_wrapper)

        self.vehicle_locations = AsyncVehicleLocationsClient(client_wrapper=client_wrapper)

        self.vehicle_stats = AsyncVehicleStatsClient(client_wrapper=client_wrapper)

        self.forms = AsyncFormsClient(client_wrapper=client_wrapper)

        self.gateways = AsyncGatewaysClient(client_wrapper=client_wrapper)

        self.idling = AsyncIdlingClient(client_wrapper=client_wrapper)

        self.industrial = AsyncIndustrialClient(client_wrapper=client_wrapper)

        self.issues = AsyncIssuesClient(client_wrapper=client_wrapper)

        self.live_sharing_links = AsyncLiveSharingLinksClient(client_wrapper=client_wrapper)

        self.organization_info = AsyncOrganizationInfoClient(client_wrapper=client_wrapper)

        self.preview_ap_is = AsyncPreviewApIsClient(client_wrapper=client_wrapper)

        self.speeding_intervals = AsyncSpeedingIntervalsClient(client_wrapper=client_wrapper)

        self.tags = AsyncTagsClient(client_wrapper=client_wrapper)

        self.users = AsyncUsersClient(client_wrapper=client_wrapper)

        self.legacy = AsyncLegacyClient(client_wrapper=client_wrapper)

        self.messages = AsyncMessagesClient(client_wrapper=client_wrapper)

        self.trailer_assignments = AsyncTrailerAssignmentsClient(client_wrapper=client_wrapper)

        self.trips = AsyncTripsClient(client_wrapper=client_wrapper)

        self.sensors = AsyncSensorsClient(client_wrapper=client_wrapper)

        self.webhooks = AsyncWebhooksClient(client_wrapper=client_wrapper)

        self.fleet = AsyncFleetClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> AsyncRawV20250611Client:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        AsyncRawV20250611Client
        """
        return self._raw_client
