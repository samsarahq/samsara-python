# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

from ..core.client_wrapper import AsyncClientWrapper, SyncClientWrapper
from ..core.request_options import RequestOptions
from ..types.create_routes_stop_request_object_request_body import CreateRoutesStopRequestObjectRequestBody
from ..types.hub_plan_routes_list_hub_plan_routes_response_body import HubPlanRoutesListHubPlanRoutesResponseBody
from ..types.route_settings_request_body import RouteSettingsRequestBody
from ..types.routes_create_route_response_body import RoutesCreateRouteResponseBody
from ..types.routes_fetch_route_response_body import RoutesFetchRouteResponseBody
from ..types.routes_fetch_routes_response_body import RoutesFetchRoutesResponseBody
from ..types.routes_get_routes_feed_response_body import RoutesGetRoutesFeedResponseBody
from ..types.routes_patch_route_response_body import RoutesPatchRouteResponseBody
from ..types.update_routes_stop_request_object_request_body import UpdateRoutesStopRequestObjectRequestBody
from .raw_client import AsyncRawRoutesClient, RawRoutesClient

# this is used as the default value for optional parameters
OMIT = typing.cast(typing.Any, ...)


class RoutesClient:
    def __init__(self, *, client_wrapper: SyncClientWrapper):
        self._raw_client = RawRoutesClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> RawRoutesClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        RawRoutesClient
        """
        return self._raw_client

    def fetch_routes(
        self,
        *,
        start_time: str,
        end_time: str,
        limit: typing.Optional[int] = None,
        after: typing.Optional[str] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> RoutesFetchRoutesResponseBody:
        """
        Returns multiple routes. The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/fetchAllDispatchRoutes).

         <b>Rate limit:</b> 5 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Routes** under the Driver Workflow category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        start_time : str
             A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).

        end_time : str
             An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).

        limit : typing.Optional[int]
            The limit for how many objects will be in the response. Default and max for this value is 512 objects.

        after : typing.Optional[str]
             If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        RoutesFetchRoutesResponseBody
            OK response.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.routes.fetch_routes(
            start_time="startTime",
            end_time="endTime",
            limit=1,
            after="after",
        )
        """
        _response = self._raw_client.fetch_routes(
            start_time=start_time, end_time=end_time, limit=limit, after=after, request_options=request_options
        )
        return _response.data

    def create_route(
        self,
        *,
        name: str,
        stops: typing.Sequence[CreateRoutesStopRequestObjectRequestBody],
        driver_id: typing.Optional[str] = OMIT,
        external_ids: typing.Optional[typing.Dict[str, str]] = OMIT,
        notes: typing.Optional[str] = OMIT,
        recompute_scheduled_times: typing.Optional[bool] = OMIT,
        settings: typing.Optional[RouteSettingsRequestBody] = OMIT,
        tag_ids: typing.Optional[typing.Sequence[str]] = OMIT,
        vehicle_id: typing.Optional[str] = OMIT,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> RoutesCreateRouteResponseBody:
        """
        Create a route. The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/createDispatchRoute).

         <b>Rate limit:</b> 100 requests/min (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write Routes** under the Driver Workflow category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        name : str
            Name for the route

        stops : typing.Sequence[CreateRoutesStopRequestObjectRequestBody]
            List of stops along the route. For each stop, exactly one of `addressId` and `singleUseLocation` are required. Depending on the `settings` on your route, either a `scheduledArrivalTime` or `scheduledDepartureTime` must be specified for the first job.

        driver_id : typing.Optional[str]
            ID of the driver. Can be either a unique Samsara ID or an [external ID](https://developers.samsara.com/docs/external-ids) for the driver.

        external_ids : typing.Optional[typing.Dict[str, str]]
            A map of external ids

        notes : typing.Optional[str]
            Notes about the route.

        recompute_scheduled_times : typing.Optional[bool]
            This optional boolean parameter controls whether route schedule arrival and departure times are recalculated. When set to true, the system will automatically recompute the scheduledArrivalTime and scheduledDepartureTime for each stop along the route during route creation. This process overrides any manually provided values, with the exception of the first stop, which retains its user-defined schedule.

        settings : typing.Optional[RouteSettingsRequestBody]

        tag_ids : typing.Optional[typing.Sequence[str]]
            An array of IDs of tags to associate with this route.

        vehicle_id : typing.Optional[str]
            ID of the vehicle. Can be either a unique Samsara ID or an [external ID](https://developers.samsara.com/docs/external-ids) for the vehicle.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        RoutesCreateRouteResponseBody
            OK response.

        Examples
        --------
        from samsara import CreateRoutesStopRequestObjectRequestBody, Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.routes.create_route(
            name="Bid 123",
            stops=[CreateRoutesStopRequestObjectRequestBody()],
        )
        """
        _response = self._raw_client.create_route(
            name=name,
            stops=stops,
            driver_id=driver_id,
            external_ids=external_ids,
            notes=notes,
            recompute_scheduled_times=recompute_scheduled_times,
            settings=settings,
            tag_ids=tag_ids,
            vehicle_id=vehicle_id,
            request_options=request_options,
        )
        return _response.data

    def get_routes_feed(
        self,
        *,
        after: typing.Optional[str] = None,
        expand: typing.Optional[typing.Literal["route"]] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> RoutesGetRoutesFeedResponseBody:
        """
        Subscribes to a feed of immutable, append-only updates for routes. The initial request to this feed endpoint returns a cursor, which can be used on the next request to fetch updated routes that have had state changes since that request.

        The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/fetchAllRouteJobUpdates).

         <b>Rate limit:</b> 5 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Routes** under the Driver Workflow category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        after : typing.Optional[str]
             If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        expand : typing.Optional[typing.Literal["route"]]
            Expands the specified value(s) in the response object. Expansion populates additional fields in an object, if supported. Unsupported fields are ignored. To expand multiple fields, input a comma-separated list.

            Valid value: `route`  Valid values: `route`

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        RoutesGetRoutesFeedResponseBody
            OK response.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.routes.get_routes_feed(
            after="after",
        )
        """
        _response = self._raw_client.get_routes_feed(after=after, expand=expand, request_options=request_options)
        return _response.data

    def fetch_route(
        self, id: str, *, request_options: typing.Optional[RequestOptions] = None
    ) -> RoutesFetchRouteResponseBody:
        """
        Returns a single route. The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/getDispatchRouteById).

         <b>Rate limit:</b> 25 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Routes** under the Driver Workflow category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        id : str
            ID of the route. This can either be the Samsara-specified ID, or an external ID. External IDs are customer specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `payrollId:ABFS18600`

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        RoutesFetchRouteResponseBody
            OK response.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.routes.fetch_route(
            id="id",
        )
        """
        _response = self._raw_client.fetch_route(id, request_options=request_options)
        return _response.data

    def delete_route(self, id: str, *, request_options: typing.Optional[RequestOptions] = None) -> None:
        """
        Delete a dispatch route and its associated stops.

         <b>Rate limit:</b> 100 requests/min (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write Routes** under the Driver Workflow category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        id : str
            ID of the route. This can either be the Samsara-specified ID, or an external ID. External IDs are customer specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `payrollId:ABFS18600`

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        None

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.routes.delete_route(
            id="id",
        )
        """
        _response = self._raw_client.delete_route(id, request_options=request_options)
        return _response.data

    def patch_route(
        self,
        id: str,
        *,
        driver_id: typing.Optional[str] = OMIT,
        external_ids: typing.Optional[typing.Dict[str, str]] = OMIT,
        name: typing.Optional[str] = OMIT,
        notes: typing.Optional[str] = OMIT,
        recompute_scheduled_times: typing.Optional[bool] = OMIT,
        settings: typing.Optional[RouteSettingsRequestBody] = OMIT,
        stops: typing.Optional[typing.Sequence[UpdateRoutesStopRequestObjectRequestBody]] = OMIT,
        tag_ids: typing.Optional[typing.Sequence[str]] = OMIT,
        vehicle_id: typing.Optional[str] = OMIT,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> RoutesPatchRouteResponseBody:
        """
        Update a route.  **Note** this implementation of patch uses [the JSON merge patch](https://tools.ietf.org/html/rfc7396) proposed standard.
         This means that any fields included in the patch request will _overwrite_ fields which exist on the target resource.
         For arrays, this means any array included in the request will _replace_ the array that exists at the specified path, it will not _add_ to the existing array.

        The legacy version of this endpoint (which uses PUT instead of PATCH) can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/updateDispatchRouteById).

         <b>Rate limit:</b> 100 requests/min (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write Routes** under the Driver Workflow category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        id : str
            ID of the route. This can either be the Samsara-specified ID, or an external ID. External IDs are customer specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `payrollId:ABFS18600`

        driver_id : typing.Optional[str]
            ID of the driver. Can be either a unique Samsara ID or an [external ID](https://developers.samsara.com/docs/external-ids) for the driver.

        external_ids : typing.Optional[typing.Dict[str, str]]
            A map of external ids

        name : typing.Optional[str]
            Name for the route

        notes : typing.Optional[str]
            Notes about the route.

        recompute_scheduled_times : typing.Optional[bool]
            This optional boolean parameter controls whether route schedule arrival and departure times are recalculated. When set to true, the system will automatically recompute the scheduledArrivalTime and scheduledDepartureTime for each stop along the route during route creation. This process overrides any manually provided values, with the exception of the first stop, which retains its user-defined schedule.

        settings : typing.Optional[RouteSettingsRequestBody]

        stops : typing.Optional[typing.Sequence[UpdateRoutesStopRequestObjectRequestBody]]
            List of stops along the route. If a valid `id` of a stop is provided, that stop will be updated. If no `id` is provided for a passed in stop, that stop will be created. If `id` value are passed in for some stops and not for others, those with `id` value specified will be retained and updated in the original route, those without `id` value specified in the body will be created, and those without `id` value specified that already existed on the route will be deleted. For each new stop, exactly one of `addressId` and `singleUseLocation` are required. Depending on the `settings` on your route, either a `scheduledArrivalTime` or `scheduledDepartureTime` must be specified for the first job, if a new first job is being added.

        tag_ids : typing.Optional[typing.Sequence[str]]
            An array of IDs of tags to associate with this route.

        vehicle_id : typing.Optional[str]
            ID of the vehicle. Can be either a unique Samsara ID or an [external ID](https://developers.samsara.com/docs/external-ids) for the vehicle.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        RoutesPatchRouteResponseBody
            OK response.

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.routes.patch_route(
            id="id",
        )
        """
        _response = self._raw_client.patch_route(
            id,
            driver_id=driver_id,
            external_ids=external_ids,
            name=name,
            notes=notes,
            recompute_scheduled_times=recompute_scheduled_times,
            settings=settings,
            stops=stops,
            tag_ids=tag_ids,
            vehicle_id=vehicle_id,
            request_options=request_options,
        )
        return _response.data

    def list_hub_plan_routes(
        self,
        *,
        plan_id: str,
        route_ids: typing.Optional[str] = None,
        start_time: typing.Optional[dt.datetime] = None,
        end_time: typing.Optional[dt.datetime] = None,
        after: typing.Optional[str] = None,
        limit: typing.Optional[int] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> HubPlanRoutesListHubPlanRoutesResponseBody:
        """
        Retrieve routes for a specific plan.

         <b>Rate limit:</b> 10 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Routes** under the Driver Workflow category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        plan_id : str
            The plan identifier

        route_ids : typing.Optional[str]
            Comma-separated list of route IDs for filtering.

        start_time : typing.Optional[dt.datetime]
            Time filter of when the route was updated, in RFC 3339 format

        end_time : typing.Optional[dt.datetime]
            Time filter of when the route was updated, in RFC 3339 format

        after : typing.Optional[str]
            If specified, should be the endCursor from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        limit : typing.Optional[int]
            Maximum number of objects to return. Default and maximum is 100

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        HubPlanRoutesListHubPlanRoutesResponseBody
            OK response.

        Examples
        --------
        import datetime

        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.routes.list_hub_plan_routes(
            plan_id="planId",
            route_ids="routeIds",
            start_time=datetime.datetime.fromisoformat(
                "2024-01-15 09:30:00+00:00",
            ),
            end_time=datetime.datetime.fromisoformat(
                "2024-01-15 09:30:00+00:00",
            ),
            after="after",
            limit=1,
        )
        """
        _response = self._raw_client.list_hub_plan_routes(
            plan_id=plan_id,
            route_ids=route_ids,
            start_time=start_time,
            end_time=end_time,
            after=after,
            limit=limit,
            request_options=request_options,
        )
        return _response.data

    def v_1_delete_dispatch_route_by_id(
        self,
        route_id_or_external_id: str,
        *,
        apply_to_future_routes: typing.Optional[bool] = OMIT,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> None:
        """
        <n class="warning">
        <nh>
        <i class="fa fa-exclamation-circle"></i>
        This endpoint is still on our legacy API.
        </nh>
        </n>

        Delete a dispatch route and its associated jobs.

         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        To use this endpoint, select **Write Routes** under the Driver Workflow category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>

        Parameters
        ----------
        route_id_or_external_id : str
            ID of the route. This can either be the Samsara-specified ID, or an external ID. External IDs are customer specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `payrollId:ABFS18600`

        apply_to_future_routes : typing.Optional[bool]
            This is only for a recurring route.  If set to true, delete all following runs of the route.  If set to false, only delete the current route.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        None

        Examples
        --------
        from samsara import Samsara

        client = Samsara(
            token="YOUR_TOKEN",
        )
        client.routes.v_1_delete_dispatch_route_by_id(
            route_id_or_external_id="route_id_or_external_id",
        )
        """
        _response = self._raw_client.v_1_delete_dispatch_route_by_id(
            route_id_or_external_id, apply_to_future_routes=apply_to_future_routes, request_options=request_options
        )
        return _response.data


class AsyncRoutesClient:
    def __init__(self, *, client_wrapper: AsyncClientWrapper):
        self._raw_client = AsyncRawRoutesClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> AsyncRawRoutesClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        AsyncRawRoutesClient
        """
        return self._raw_client

    async def fetch_routes(
        self,
        *,
        start_time: str,
        end_time: str,
        limit: typing.Optional[int] = None,
        after: typing.Optional[str] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> RoutesFetchRoutesResponseBody:
        """
        Returns multiple routes. The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/fetchAllDispatchRoutes).

         <b>Rate limit:</b> 5 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Routes** under the Driver Workflow category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        start_time : str
             A start time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).

        end_time : str
             An end time in RFC 3339 format. Defaults to now if not provided. Millisecond precision and timezones are supported. (Examples: 2019-06-13T19:08:25Z, 2019-06-13T19:08:25.455Z, OR 2015-09-15T14:00:12-04:00).

        limit : typing.Optional[int]
            The limit for how many objects will be in the response. Default and max for this value is 512 objects.

        after : typing.Optional[str]
             If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        RoutesFetchRoutesResponseBody
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.routes.fetch_routes(
                start_time="startTime",
                end_time="endTime",
                limit=1,
                after="after",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.fetch_routes(
            start_time=start_time, end_time=end_time, limit=limit, after=after, request_options=request_options
        )
        return _response.data

    async def create_route(
        self,
        *,
        name: str,
        stops: typing.Sequence[CreateRoutesStopRequestObjectRequestBody],
        driver_id: typing.Optional[str] = OMIT,
        external_ids: typing.Optional[typing.Dict[str, str]] = OMIT,
        notes: typing.Optional[str] = OMIT,
        recompute_scheduled_times: typing.Optional[bool] = OMIT,
        settings: typing.Optional[RouteSettingsRequestBody] = OMIT,
        tag_ids: typing.Optional[typing.Sequence[str]] = OMIT,
        vehicle_id: typing.Optional[str] = OMIT,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> RoutesCreateRouteResponseBody:
        """
        Create a route. The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/createDispatchRoute).

         <b>Rate limit:</b> 100 requests/min (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write Routes** under the Driver Workflow category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        name : str
            Name for the route

        stops : typing.Sequence[CreateRoutesStopRequestObjectRequestBody]
            List of stops along the route. For each stop, exactly one of `addressId` and `singleUseLocation` are required. Depending on the `settings` on your route, either a `scheduledArrivalTime` or `scheduledDepartureTime` must be specified for the first job.

        driver_id : typing.Optional[str]
            ID of the driver. Can be either a unique Samsara ID or an [external ID](https://developers.samsara.com/docs/external-ids) for the driver.

        external_ids : typing.Optional[typing.Dict[str, str]]
            A map of external ids

        notes : typing.Optional[str]
            Notes about the route.

        recompute_scheduled_times : typing.Optional[bool]
            This optional boolean parameter controls whether route schedule arrival and departure times are recalculated. When set to true, the system will automatically recompute the scheduledArrivalTime and scheduledDepartureTime for each stop along the route during route creation. This process overrides any manually provided values, with the exception of the first stop, which retains its user-defined schedule.

        settings : typing.Optional[RouteSettingsRequestBody]

        tag_ids : typing.Optional[typing.Sequence[str]]
            An array of IDs of tags to associate with this route.

        vehicle_id : typing.Optional[str]
            ID of the vehicle. Can be either a unique Samsara ID or an [external ID](https://developers.samsara.com/docs/external-ids) for the vehicle.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        RoutesCreateRouteResponseBody
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara, CreateRoutesStopRequestObjectRequestBody

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.routes.create_route(
                name="Bid 123",
                stops=[CreateRoutesStopRequestObjectRequestBody()],
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.create_route(
            name=name,
            stops=stops,
            driver_id=driver_id,
            external_ids=external_ids,
            notes=notes,
            recompute_scheduled_times=recompute_scheduled_times,
            settings=settings,
            tag_ids=tag_ids,
            vehicle_id=vehicle_id,
            request_options=request_options,
        )
        return _response.data

    async def get_routes_feed(
        self,
        *,
        after: typing.Optional[str] = None,
        expand: typing.Optional[typing.Literal["route"]] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> RoutesGetRoutesFeedResponseBody:
        """
        Subscribes to a feed of immutable, append-only updates for routes. The initial request to this feed endpoint returns a cursor, which can be used on the next request to fetch updated routes that have had state changes since that request.

        The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/fetchAllRouteJobUpdates).

         <b>Rate limit:</b> 5 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Routes** under the Driver Workflow category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        after : typing.Optional[str]
             If specified, this should be the endCursor value from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        expand : typing.Optional[typing.Literal["route"]]
            Expands the specified value(s) in the response object. Expansion populates additional fields in an object, if supported. Unsupported fields are ignored. To expand multiple fields, input a comma-separated list.

            Valid value: `route`  Valid values: `route`

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        RoutesGetRoutesFeedResponseBody
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.routes.get_routes_feed(
                after="after",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.get_routes_feed(after=after, expand=expand, request_options=request_options)
        return _response.data

    async def fetch_route(
        self, id: str, *, request_options: typing.Optional[RequestOptions] = None
    ) -> RoutesFetchRouteResponseBody:
        """
        Returns a single route. The legacy version of this endpoint can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/getDispatchRouteById).

         <b>Rate limit:</b> 25 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Routes** under the Driver Workflow category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        id : str
            ID of the route. This can either be the Samsara-specified ID, or an external ID. External IDs are customer specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `payrollId:ABFS18600`

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        RoutesFetchRouteResponseBody
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.routes.fetch_route(
                id="id",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.fetch_route(id, request_options=request_options)
        return _response.data

    async def delete_route(self, id: str, *, request_options: typing.Optional[RequestOptions] = None) -> None:
        """
        Delete a dispatch route and its associated stops.

         <b>Rate limit:</b> 100 requests/min (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write Routes** under the Driver Workflow category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        id : str
            ID of the route. This can either be the Samsara-specified ID, or an external ID. External IDs are customer specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `payrollId:ABFS18600`

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        None

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.routes.delete_route(
                id="id",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.delete_route(id, request_options=request_options)
        return _response.data

    async def patch_route(
        self,
        id: str,
        *,
        driver_id: typing.Optional[str] = OMIT,
        external_ids: typing.Optional[typing.Dict[str, str]] = OMIT,
        name: typing.Optional[str] = OMIT,
        notes: typing.Optional[str] = OMIT,
        recompute_scheduled_times: typing.Optional[bool] = OMIT,
        settings: typing.Optional[RouteSettingsRequestBody] = OMIT,
        stops: typing.Optional[typing.Sequence[UpdateRoutesStopRequestObjectRequestBody]] = OMIT,
        tag_ids: typing.Optional[typing.Sequence[str]] = OMIT,
        vehicle_id: typing.Optional[str] = OMIT,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> RoutesPatchRouteResponseBody:
        """
        Update a route.  **Note** this implementation of patch uses [the JSON merge patch](https://tools.ietf.org/html/rfc7396) proposed standard.
         This means that any fields included in the patch request will _overwrite_ fields which exist on the target resource.
         For arrays, this means any array included in the request will _replace_ the array that exists at the specified path, it will not _add_ to the existing array.

        The legacy version of this endpoint (which uses PUT instead of PATCH) can be found at [samsara.com/api-legacy](https://www.samsara.com/api-legacy#operation/updateDispatchRouteById).

         <b>Rate limit:</b> 100 requests/min (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Write Routes** under the Driver Workflow category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        id : str
            ID of the route. This can either be the Samsara-specified ID, or an external ID. External IDs are customer specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `payrollId:ABFS18600`

        driver_id : typing.Optional[str]
            ID of the driver. Can be either a unique Samsara ID or an [external ID](https://developers.samsara.com/docs/external-ids) for the driver.

        external_ids : typing.Optional[typing.Dict[str, str]]
            A map of external ids

        name : typing.Optional[str]
            Name for the route

        notes : typing.Optional[str]
            Notes about the route.

        recompute_scheduled_times : typing.Optional[bool]
            This optional boolean parameter controls whether route schedule arrival and departure times are recalculated. When set to true, the system will automatically recompute the scheduledArrivalTime and scheduledDepartureTime for each stop along the route during route creation. This process overrides any manually provided values, with the exception of the first stop, which retains its user-defined schedule.

        settings : typing.Optional[RouteSettingsRequestBody]

        stops : typing.Optional[typing.Sequence[UpdateRoutesStopRequestObjectRequestBody]]
            List of stops along the route. If a valid `id` of a stop is provided, that stop will be updated. If no `id` is provided for a passed in stop, that stop will be created. If `id` value are passed in for some stops and not for others, those with `id` value specified will be retained and updated in the original route, those without `id` value specified in the body will be created, and those without `id` value specified that already existed on the route will be deleted. For each new stop, exactly one of `addressId` and `singleUseLocation` are required. Depending on the `settings` on your route, either a `scheduledArrivalTime` or `scheduledDepartureTime` must be specified for the first job, if a new first job is being added.

        tag_ids : typing.Optional[typing.Sequence[str]]
            An array of IDs of tags to associate with this route.

        vehicle_id : typing.Optional[str]
            ID of the vehicle. Can be either a unique Samsara ID or an [external ID](https://developers.samsara.com/docs/external-ids) for the vehicle.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        RoutesPatchRouteResponseBody
            OK response.

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.routes.patch_route(
                id="id",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.patch_route(
            id,
            driver_id=driver_id,
            external_ids=external_ids,
            name=name,
            notes=notes,
            recompute_scheduled_times=recompute_scheduled_times,
            settings=settings,
            stops=stops,
            tag_ids=tag_ids,
            vehicle_id=vehicle_id,
            request_options=request_options,
        )
        return _response.data

    async def list_hub_plan_routes(
        self,
        *,
        plan_id: str,
        route_ids: typing.Optional[str] = None,
        start_time: typing.Optional[dt.datetime] = None,
        end_time: typing.Optional[dt.datetime] = None,
        after: typing.Optional[str] = None,
        limit: typing.Optional[int] = None,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> HubPlanRoutesListHubPlanRoutesResponseBody:
        """
        Retrieve routes for a specific plan.

         <b>Rate limit:</b> 10 requests/sec (learn more about rate limits <a href="https://developers.samsara.com/docs/rate-limits" target="_blank">here</a>).

        To use this endpoint, select **Read Routes** under the Driver Workflow category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>


         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        Parameters
        ----------
        plan_id : str
            The plan identifier

        route_ids : typing.Optional[str]
            Comma-separated list of route IDs for filtering.

        start_time : typing.Optional[dt.datetime]
            Time filter of when the route was updated, in RFC 3339 format

        end_time : typing.Optional[dt.datetime]
            Time filter of when the route was updated, in RFC 3339 format

        after : typing.Optional[str]
            If specified, should be the endCursor from the previous page of results. When present, this request will return the next page of results that occur immediately after the previous page of results.

        limit : typing.Optional[int]
            Maximum number of objects to return. Default and maximum is 100

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        HubPlanRoutesListHubPlanRoutesResponseBody
            OK response.

        Examples
        --------
        import asyncio
        import datetime

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.routes.list_hub_plan_routes(
                plan_id="planId",
                route_ids="routeIds",
                start_time=datetime.datetime.fromisoformat(
                    "2024-01-15 09:30:00+00:00",
                ),
                end_time=datetime.datetime.fromisoformat(
                    "2024-01-15 09:30:00+00:00",
                ),
                after="after",
                limit=1,
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.list_hub_plan_routes(
            plan_id=plan_id,
            route_ids=route_ids,
            start_time=start_time,
            end_time=end_time,
            after=after,
            limit=limit,
            request_options=request_options,
        )
        return _response.data

    async def v_1_delete_dispatch_route_by_id(
        self,
        route_id_or_external_id: str,
        *,
        apply_to_future_routes: typing.Optional[bool] = OMIT,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> None:
        """
        <n class="warning">
        <nh>
        <i class="fa fa-exclamation-circle"></i>
        This endpoint is still on our legacy API.
        </nh>
        </n>

        Delete a dispatch route and its associated jobs.

         **Submit Feedback**: Likes, dislikes, and API feature requests should be filed as feedback in our <a href="https://forms.gle/zkD4NCH7HjKb7mm69" target="_blank">API feedback form</a>. If you encountered an issue or noticed inaccuracies in the API documentation, please <a href="https://www.samsara.com/help" target="_blank">submit a case</a> to our support team.

        To use this endpoint, select **Write Routes** under the Driver Workflow category when creating or editing an API token. <a href="https://developers.samsara.com/docs/authentication#scopes-for-api-tokens" target="_blank">Learn More.</a>

        Parameters
        ----------
        route_id_or_external_id : str
            ID of the route. This can either be the Samsara-specified ID, or an external ID. External IDs are customer specified key-value pairs created in the POST or PATCH requests of this resource. To specify an external ID as part of a path parameter, use the following format: `key:value`. For example, `payrollId:ABFS18600`

        apply_to_future_routes : typing.Optional[bool]
            This is only for a recurring route.  If set to true, delete all following runs of the route.  If set to false, only delete the current route.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        None

        Examples
        --------
        import asyncio

        from samsara import AsyncSamsara

        client = AsyncSamsara(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.routes.v_1_delete_dispatch_route_by_id(
                route_id_or_external_id="route_id_or_external_id",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.v_1_delete_dispatch_route_by_id(
            route_id_or_external_id, apply_to_future_routes=apply_to_future_routes, request_options=request_options
        )
        return _response.data
