name: Create GitHub Release

on:
  push:
    tags:
      - 'v*'  # Triggers on tags like v1.0.0, v2.1.0, etc.
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to create release for (e.g., v2.0.0)'
        required: true
        type: string

permissions:
  contents: write  # Required to create releases

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for changelog generation

      - name: Set tag variable
        id: set-tag
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            TAG="${{ inputs.tag }}"
          else
            TAG="${GITHUB_REF#refs/tags/}"
          fi
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "Release tag: $TAG"

      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Bootstrap poetry
        run: |
          curl -sSL https://install.python-poetry.org | python - -y --version 1.5.1

      - name: Get version from pyproject.toml
        id: get-version
        run: |
          VERSION=$(poetry version --short)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "SDK version from pyproject.toml: $VERSION"

      - name: Generate release notes
        id: release-notes
        run: |
          TAG="${{ steps.set-tag.outputs.tag }}"
          
          # Get the previous tag
          PREV_TAG=$(git describe --tags --abbrev=0 $TAG^ 2>/dev/null || echo "")
          
          if [ -z "$PREV_TAG" ]; then
            echo "First release"
            CHANGELOG=$(git log --pretty=format:"- %s (%h)" $TAG)
          else
            echo "Previous tag: $PREV_TAG"
            CHANGELOG=$(git log --pretty=format:"- %s (%h)" $PREV_TAG..$TAG)
          fi
          
          # Create release notes
          cat > release_notes.md << 'EOF'
          ## What's Changed
          
          $CHANGELOG
          
          **Full Changelog**: https://github.com/${{ github.repository }}/compare/$PREV_TAG...$TAG
          EOF
          
          # Replace variables in the file
          sed -i "s|\$CHANGELOG|$CHANGELOG|g" release_notes.md
          sed -i "s|\$PREV_TAG|$PREV_TAG|g" release_notes.md
          sed -i "s|\$TAG|$TAG|g" release_notes.md
          
          echo "Release notes:"
          cat release_notes.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.set-tag.outputs.tag }}
          name: Python SDK ${{ steps.set-tag.outputs.tag }}
          body_path: release_notes.md
          draft: false
          prerelease: false
          generate_release_notes: true  # GitHub will also auto-generate notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release created
        run: |
          echo "âœ… Release created successfully!"
          echo "View it at: https://github.com/${{ github.repository }}/releases/tag/${{ steps.set-tag.outputs.tag }}"

